Search.setIndex({"docnames": ["_mothballed/accumulation", "_mothballed/bibliography", "_mothballed/colophon", "_mothballed/containerized-model", "_mothballed/custom-context-creation", "_mothballed/glossary", "_mothballed/instruments", "_mothballed/lilypond-literals", "_mothballed/lilypond-wellformedness", "_mothballed/organization", "_mothballed/parentage", "_mothballed/pitch-conventions", "_mothballed/score-fragment-strings", "_mothballed/summer-workshop", "_mothballed/understanding-reprs", "_mothballed/virtual-environments", "_mothballed/working-with-named-pitches", "_mothballed/working-with-tuplets", "_mothballed/written-duration", "_pending/hexachordal-recombination-all-interval", "_pending/interval-cycle-intersection", "_pending/rotation-by-row-index", "_pending/row-derivation-by-trichord", "_pending/scale-derivation-by-sieve", "_pending/superimposition-of-partials", "_pending/tone-clock-tesselation", "_pending/trichord-definition-by-ratio", "api/abjad/bind", "api/abjad/configuration", "api/abjad/contextmanagers", "api/abjad/contributions", "api/abjad/cyclictuple", "api/abjad/duration", "api/abjad/dynamic", "api/abjad/enumerate", "api/abjad/enums", "api/abjad/exceptions", "api/abjad/ext/index", "api/abjad/ext/sphinx", "api/abjad/format", "api/abjad/get", "api/abjad/grace_corner_cases", "api/abjad/illustrators", "api/abjad/index", "api/abjad/indicators", "api/abjad/instruments", "api/abjad/io", "api/abjad/iterate", "api/abjad/iterpitches", "api/abjad/label", "api/abjad/lilypondfile", "api/abjad/lyproxy", "api/abjad/makers", "api/abjad/math", "api/abjad/meter", "api/abjad/metricmodulation", "api/abjad/mutate", "api/abjad/obgc", "api/abjad/overrides", "api/abjad/parentage", "api/abjad/parsers/base", "api/abjad/parsers/index", "api/abjad/parsers/parse", "api/abjad/parsers/parser", "api/abjad/parsers/reduced", "api/abjad/parsers/scheme", "api/abjad/pattern", "api/abjad/pcollections", "api/abjad/persist", "api/abjad/pitch", "api/abjad/ratio", "api/abjad/rhythmtrees", "api/abjad/score", "api/abjad/select", "api/abjad/sequence", "api/abjad/setclass", "api/abjad/spanners", "api/abjad/string", "api/abjad/tag", "api/abjad/timespan", "api/abjad/tweaks", "api/abjad/verticalmoment", "api/abjad/wf", "api/abjadext/index", "api/abjadext/nauert/attackpointoptimizers", "api/abjadext/nauert/gracehandlers", "api/abjadext/nauert/heuristics", "api/abjadext/nauert/index", "api/abjadext/nauert/jobhandlers", "api/abjadext/nauert/qeventproxy", "api/abjadext/nauert/qevents", "api/abjadext/nauert/qeventsequence", "api/abjadext/nauert/qgrid", "api/abjadext/nauert/qschemaitems", "api/abjadext/nauert/qschemas", "api/abjadext/nauert/qtargetitems", "api/abjadext/nauert/qtargets", "api/abjadext/nauert/quantizationjob", "api/abjadext/nauert/quantizer", "api/abjadext/nauert/searchtrees", "api/abjadext/rmakers/index", "api/abjadext/rmakers/rmakers", "api/index", "appendices/best-practices", "appendices/changes", "appendices/community", "appendices/configuration", "appendices/developer-installation", "appendices/lilypond-context-concatenation", "appendices/publications", "examples/corpus-selection", "examples/design-by-dyads", "examples/enumeration", "examples/magic-square-from-twelve-tone-row", "examples/scales-diatonic", "examples/score-fragment-piano", "first_steps/audience", "first_steps/install", "first_steps/linux", "first_steps/macos", "first_steps/windows", "gallery-2010", "gallery-2015", "gallery-2020", "index", "overview/containers", "overview/containers-basic-operations-on", "overview/containers-retrieving-by-name", "overview/containers-time-interpretation-of", "overview/contexts-lilypond-type-of", "overview/indicators", "overview/lilypond-files-preamble-of", "overview/lilypond-format-of-abjad-objects", "sidebar", "welcome/abstract", "welcome/example", "welcome/quickstart", "welcome/welcome"], "filenames": ["_mothballed/accumulation.rst", "_mothballed/bibliography.rst", "_mothballed/colophon.rst", "_mothballed/containerized-model.rst", "_mothballed/custom-context-creation.rst", "_mothballed/glossary.rst", "_mothballed/instruments.rst", "_mothballed/lilypond-literals.rst", "_mothballed/lilypond-wellformedness.rst", "_mothballed/organization.rst", "_mothballed/parentage.rst", "_mothballed/pitch-conventions.rst", "_mothballed/score-fragment-strings.rst", "_mothballed/summer-workshop.rst", "_mothballed/understanding-reprs.rst", "_mothballed/virtual-environments.rst", "_mothballed/working-with-named-pitches.rst", "_mothballed/working-with-tuplets.rst", "_mothballed/written-duration.rst", "_pending/hexachordal-recombination-all-interval.rst", "_pending/interval-cycle-intersection.rst", "_pending/rotation-by-row-index.rst", "_pending/row-derivation-by-trichord.rst", "_pending/scale-derivation-by-sieve.rst", "_pending/superimposition-of-partials.rst", "_pending/tone-clock-tesselation.rst", "_pending/trichord-definition-by-ratio.rst", "api/abjad/bind.rst", "api/abjad/configuration.rst", "api/abjad/contextmanagers.rst", "api/abjad/contributions.rst", "api/abjad/cyclictuple.rst", "api/abjad/duration.rst", "api/abjad/dynamic.rst", "api/abjad/enumerate.rst", "api/abjad/enums.rst", "api/abjad/exceptions.rst", "api/abjad/ext/index.rst", "api/abjad/ext/sphinx.rst", "api/abjad/format.rst", "api/abjad/get.rst", "api/abjad/grace_corner_cases.rst", "api/abjad/illustrators.rst", "api/abjad/index.rst", "api/abjad/indicators.rst", "api/abjad/instruments.rst", "api/abjad/io.rst", "api/abjad/iterate.rst", "api/abjad/iterpitches.rst", "api/abjad/label.rst", "api/abjad/lilypondfile.rst", "api/abjad/lyproxy.rst", "api/abjad/makers.rst", "api/abjad/math.rst", "api/abjad/meter.rst", "api/abjad/metricmodulation.rst", "api/abjad/mutate.rst", "api/abjad/obgc.rst", "api/abjad/overrides.rst", "api/abjad/parentage.rst", "api/abjad/parsers/base.rst", "api/abjad/parsers/index.rst", "api/abjad/parsers/parse.rst", "api/abjad/parsers/parser.rst", "api/abjad/parsers/reduced.rst", "api/abjad/parsers/scheme.rst", "api/abjad/pattern.rst", "api/abjad/pcollections.rst", "api/abjad/persist.rst", "api/abjad/pitch.rst", "api/abjad/ratio.rst", "api/abjad/rhythmtrees.rst", "api/abjad/score.rst", "api/abjad/select.rst", "api/abjad/sequence.rst", "api/abjad/setclass.rst", "api/abjad/spanners.rst", "api/abjad/string.rst", "api/abjad/tag.rst", "api/abjad/timespan.rst", "api/abjad/tweaks.rst", "api/abjad/verticalmoment.rst", "api/abjad/wf.rst", "api/abjadext/index.rst", "api/abjadext/nauert/attackpointoptimizers.rst", "api/abjadext/nauert/gracehandlers.rst", "api/abjadext/nauert/heuristics.rst", "api/abjadext/nauert/index.rst", "api/abjadext/nauert/jobhandlers.rst", "api/abjadext/nauert/qeventproxy.rst", "api/abjadext/nauert/qevents.rst", "api/abjadext/nauert/qeventsequence.rst", "api/abjadext/nauert/qgrid.rst", "api/abjadext/nauert/qschemaitems.rst", "api/abjadext/nauert/qschemas.rst", "api/abjadext/nauert/qtargetitems.rst", "api/abjadext/nauert/qtargets.rst", "api/abjadext/nauert/quantizationjob.rst", "api/abjadext/nauert/quantizer.rst", "api/abjadext/nauert/searchtrees.rst", "api/abjadext/rmakers/index.rst", "api/abjadext/rmakers/rmakers.rst", "api/index.rst", "appendices/best-practices.rst", "appendices/changes.rst", "appendices/community.rst", "appendices/configuration.rst", "appendices/developer-installation.rst", "appendices/lilypond-context-concatenation.rst", "appendices/publications.rst", "examples/corpus-selection.rst", "examples/design-by-dyads.rst", "examples/enumeration.rst", "examples/magic-square-from-twelve-tone-row.rst", "examples/scales-diatonic.rst", "examples/score-fragment-piano.rst", "first_steps/audience.rst", "first_steps/install.rst", "first_steps/linux.rst", "first_steps/macos.rst", "first_steps/windows.rst", "gallery-2010.rst", "gallery-2015.rst", "gallery-2020.rst", "index.rst", "overview/containers.rst", "overview/containers-basic-operations-on.rst", "overview/containers-retrieving-by-name.rst", "overview/containers-time-interpretation-of.rst", "overview/contexts-lilypond-type-of.rst", "overview/indicators.rst", "overview/lilypond-files-preamble-of.rst", "overview/lilypond-format-of-abjad-objects.rst", "sidebar.rst", "welcome/abstract.rst", "welcome/example.rst", "welcome/quickstart.rst", "welcome/welcome.rst"], "titles": ["Accumulation, of cells", "Bibliography", "Colophon", "A containerized model of music notation", "Custom context creation", "Glossary", "Instruments", "LilyPond literals", "LilyPond wellformedness", "&lt;no title&gt;", "Parentage", "Pitch conventions", "Score fragment, strings", "Summer workshop", "Understanding reprs", "Virtual environments", "Working with named pitches", "Tuplets", "What\u2019s the difference between duration and written duration?", "Hexachord recombination, all-interval", "Interval cycle intersection", "Rotation, by row index", "Row derivation, by trichord", "Scale derivation, by sieve", "Superimposition of partials", "Tone-clock tesselation", "Trichord definition, by ratio", "bind", "configuration", "contextmanagers", "contributions", "cyclictuple", "duration", "dynamic", "enumerate", "enums", "exceptions", "ext", "sphinx", "format", "get", "grace_corner_cases", "illustrators", "abjad", "indicators", "instruments", "io", "iterate", "iterpitches", "label", "lilypondfile", "lyproxy", "makers", "math", "meter", "metricmodulation", "mutate", "obgc", "overrides", "parentage", "base", "parsers", "parse", "parser", "reduced", "scheme", "pattern", "pcollections", "persist", "pitch", "ratio", "rhythmtrees", "score", "select", "sequence", "setclass", "spanners", "string", "tag", "timespan", "tweaks", "verticalmoment", "wf", "abjadext", "attackpointoptimizers", "gracehandlers", "heuristics", "nauert", "jobhandlers", "qeventproxy", "qevents", "qeventsequence", "qgrid", "qschemaitems", "qschemas", "qtargetitems", "qtargets", "quantizationjob", "quantizer", "searchtrees", "rmakers", "rmakers", "Abjad API", "Best practices", "Changes", "Community", "Configuration", "Developer installation", "LilyPond context concatenation", "Publications", "Corpus, figure selection from", "Design, by dyads", "Enumeration, of rhythmic cells", "Magic square, from twelve-tone row", "Scales, diatonic", "Score fragment, piano", "Audience", "Check Python", "Linux", "macOS", "Windows", "2010-00", "2015-11", "2016-present", "Welcome", "Containers", "Containers, basic operations on", "Containers, retrieving by name", "Containers, time interpretation of", "Contexts, LilyPond type of", "Indicators", "LilyPond files, preamble of", "LilyPond format, of Abjad objects", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;"], "terms": {"import": [0, 3, 5, 8, 9, 24, 26, 29, 32, 33, 44, 53, 56, 57, 64, 66, 67, 69, 71, 72, 92, 99, 101, 103, 110, 112, 124, 130, 135, 137], "math": [0, 24, 26, 28, 32, 33, 43, 101, 102, 112], "thi": [0, 2, 3, 5, 6, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 27, 30, 32, 33, 35, 40, 44, 45, 50, 52, 54, 55, 56, 58, 63, 66, 67, 69, 72, 76, 79, 81, 88, 89, 90, 92, 94, 97, 98, 99, 101, 103, 105, 106, 107, 108, 110, 111, 114, 116, 117, 118, 119, 125, 130, 131], "exampl": [0, 2, 3, 8, 12, 13, 14, 22, 23, 24, 33, 41, 42, 54, 67, 70, 71, 72, 73, 79, 82, 94, 98, 101, 103, 105, 107, 108, 110, 113, 124, 130, 135, 137], "demonstr": 0, "one": [0, 8, 12, 18, 19, 27, 32, 40, 49, 56, 66, 67, 72, 73, 74, 76, 77, 78, 79, 81, 92, 101, 103, 108, 110, 115, 126], "wai": [0, 2, 3, 4, 8, 9, 10, 12, 14, 54, 72, 94, 101, 103, 107, 108, 110, 115, 124, 130, 134, 137], "model": [0, 1, 2, 8, 9, 10, 12, 16, 54, 63, 65, 71, 72, 76, 79, 92, 99, 102, 103, 109, 114, 115, 116, 125], "composit": [0, 1, 2, 3, 9, 13, 33, 53, 63, 99, 101, 103, 109, 113, 116], "an": [0, 1, 2, 3, 4, 8, 9, 13, 17, 29, 30, 32, 33, 35, 44, 50, 53, 54, 58, 63, 69, 74, 84, 85, 88, 90, 91, 93, 98, 101, 103, 106, 109, 111, 112, 115, 116, 130], "music": [0, 1, 2, 8, 9, 12, 13, 28, 40, 43, 49, 51, 54, 61, 63, 72, 73, 98, 101, 102, 103, 105, 108, 109, 110, 115, 116, 124, 130, 134, 137], "The": [0, 1, 2, 3, 4, 6, 8, 9, 12, 13, 14, 15, 17, 18, 19, 23, 27, 29, 32, 40, 44, 46, 54, 63, 64, 65, 71, 72, 79, 82, 84, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 105, 107, 108, 110, 111, 112, 113, 116, 121, 123, 126, 128, 130, 132], "piec": [0, 23, 25, 58, 72, 110, 116, 124, 134, 137], "concern": [0, 8, 9], "u": [0, 2, 12, 27, 49, 69, 114], "here": [0, 8, 12, 15, 33, 40, 49, 54, 72, 98, 101, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 132], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 110, 111, 112, 113, 116, 117, 118, 119, 124, 126, 128, 130, 132, 135, 136, 137], "d\u00e9sordr": 0, "1986": 0, "from": [0, 2, 8, 9, 13, 15, 19, 20, 27, 28, 29, 31, 32, 33, 39, 40, 42, 44, 46, 48, 49, 51, 52, 53, 54, 56, 57, 58, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 85, 86, 92, 94, 98, 101, 103, 105, 107, 108, 111, 112, 117, 118, 119, 121, 122, 123, 130], "first": [0, 2, 8, 9, 12, 22, 23, 24, 27, 40, 41, 44, 53, 54, 57, 58, 59, 63, 66, 67, 69, 71, 72, 73, 79, 85, 92, 101, 103, 106, 107, 109, 110, 111, 112, 113, 124, 132, 135, 137], "book": [0, 1, 19, 37, 38, 43, 63, 112], "gy\u00f6rgi": 0, "ligeti": 0, "": [0, 1, 2, 3, 7, 8, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 42, 44, 46, 51, 53, 54, 57, 60, 63, 64, 65, 66, 68, 69, 71, 72, 74, 77, 87, 92, 94, 98, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 123, 124, 125, 128, 129, 130, 131, 132, 135, 137], "piano": [0, 20, 23, 28, 42, 43, 45, 51, 72, 76, 121, 122, 123, 130], "etud": 0, "we": [0, 2, 8, 12, 15, 19, 22, 23, 24, 27, 54, 72, 98, 103, 105, 108, 110, 116], "ll": [0, 8, 9, 12, 15, 63, 103, 110, 130], "two": [0, 1, 2, 8, 12, 15, 19, 27, 32, 44, 45, 52, 53, 54, 66, 67, 70, 72, 73, 76, 77, 79, 101, 108, 110, 111, 112, 122, 128, 130], "system": [0, 1, 2, 12, 13, 15, 16, 19, 20, 21, 26, 28, 46, 51, 53, 63, 67, 102, 103, 109, 130], "score": [0, 1, 2, 3, 6, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 73, 76, 78, 80, 81, 82, 84, 85, 86, 92, 98, 101, 102, 103, 108, 109, 110, 111, 112, 113, 114, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137], "each": [0, 2, 3, 10, 12, 19, 27, 30, 44, 45, 52, 53, 54, 56, 58, 67, 72, 73, 79, 86, 91, 92, 94, 101, 103, 108, 110, 112, 128], "voic": [0, 2, 3, 4, 8, 9, 12, 13, 14, 20, 21, 27, 28, 33, 40, 41, 43, 44, 45, 47, 49, 50, 51, 56, 57, 58, 59, 63, 67, 72, 73, 82, 84, 85, 86, 98, 101, 103, 110, 112, 113, 114, 115, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137], "insid": [0, 12], "simultan": [0, 10, 17, 27, 33, 40, 44, 45, 50, 56, 57, 59, 63, 72, 115, 128, 132], "contain": [0, 3, 8, 10, 12, 13, 17, 27, 28, 31, 40, 41, 43, 44, 47, 49, 50, 54, 56, 57, 59, 62, 63, 64, 66, 67, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 85, 87, 91, 92, 95, 96, 99, 101, 102, 103, 110, 130, 132], "top": [0, 12, 17, 19, 20, 21, 46, 57, 67, 72, 73, 81], "hold": 0, "octav": [0, 16, 23, 24, 28, 43, 45, 63, 67, 69], "lower": [0, 12, 63, 67, 111], "eighth": [0, 82, 101, 110], "note": [0, 3, 5, 6, 8, 9, 10, 11, 12, 14, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 76, 81, 82, 85, 92, 98, 101, 102, 103, 111, 112, 113, 114, 115, 124, 126, 130, 132, 134, 135, 137], "run": [0, 38, 46, 60, 63, 65, 71, 72, 73, 88, 101, 103, 106, 107], "function": [0, 3, 12, 13, 22, 23, 24, 26, 27, 28, 32, 34, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 52, 53, 54, 56, 57, 58, 61, 63, 64, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 88, 89, 91, 92, 94, 95, 96, 98, 101, 102, 103, 110, 111, 112, 113, 116, 124, 130, 135, 137], "us": [0, 1, 2, 3, 6, 7, 8, 9, 10, 12, 13, 15, 17, 18, 27, 32, 33, 40, 44, 46, 50, 54, 63, 65, 72, 82, 85, 88, 89, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 106, 107, 108, 110, 112, 113, 114, 117, 118, 119, 124, 127, 128, 129, 130, 134, 135, 136, 137], "def": [0, 12, 19, 20, 21, 22, 23, 24, 25, 26, 101, 110, 111, 112, 113, 114, 124, 135, 137], "make_cel": 0, "pitch": [0, 1, 2, 6, 9, 12, 13, 23, 24, 25, 26, 28, 29, 40, 43, 44, 45, 47, 48, 49, 51, 52, 56, 63, 64, 67, 71, 72, 73, 74, 75, 76, 81, 82, 85, 86, 89, 90, 91, 92, 97, 98, 101, 102, 111, 113, 114, 124, 125, 135, 137], "hand": [0, 8, 12, 13, 15, 94, 103, 110, 111, 115, 130], "split": [0, 12, 44, 45, 54, 56, 67, 74, 78, 79, 101, 103, 111, 114, 124, 135, 137], "abjad": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 91, 92, 94, 95, 98, 101, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137], "1": [0, 1, 5, 6, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 107, 110, 111, 112, 113, 114, 115, 124, 126, 130, 132, 135, 137], "8": [0, 1, 4, 7, 8, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 34, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 79, 81, 82, 84, 85, 86, 91, 92, 93, 94, 95, 98, 101, 103, 110, 112, 113, 114, 115, 117, 118, 119, 124, 125, 126, 127, 128, 130, 132, 135, 137], "rh_lower_voic": 0, "name": [0, 4, 7, 8, 11, 12, 15, 18, 19, 21, 26, 27, 28, 30, 33, 35, 38, 40, 41, 44, 45, 46, 47, 49, 50, 51, 56, 57, 58, 59, 62, 63, 67, 69, 71, 72, 73, 78, 80, 88, 92, 101, 103, 108, 110, 112, 113, 114, 115, 124, 125, 128, 129, 130, 131, 132, 135, 137], "f": [0, 1, 4, 6, 7, 8, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 69, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 91, 98, 101, 103, 108, 110, 111, 112, 113, 114, 115, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137], "_lower_voic": 0, "beam": [0, 3, 8, 11, 19, 20, 21, 22, 23, 24, 40, 44, 47, 49, 50, 51, 56, 63, 64, 67, 76, 82, 101, 102, 111, 124, 134, 137], "slur": [0, 3, 8, 44, 51, 56, 57, 63, 64, 72, 76, 101, 102, 103, 124, 130, 132, 134, 135, 137], "dynam": [0, 12, 28, 43, 44, 51, 56, 59, 63, 72, 76, 82, 102, 106], "attach": [0, 3, 8, 11, 12, 19, 21, 26, 27, 32, 33, 36, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 59, 66, 72, 73, 76, 78, 80, 81, 82, 84, 85, 89, 90, 91, 92, 97, 101, 110, 112, 113, 114, 115, 124, 128, 130, 132, 135, 137], "0": [0, 6, 7, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 92, 94, 97, 99, 101, 104, 110, 111, 112, 113, 114, 115, 124, 126, 127, 130, 131, 132, 135, 137], "p": [0, 12, 15, 21, 33, 44, 56, 63, 64, 65, 69, 71, 72, 76], "liter": [0, 12, 32, 33, 44, 50, 59, 72, 110, 128, 132], "lilypondliter": [0, 7, 12, 28, 33, 40, 43, 44, 45, 50, 59, 72, 101, 110, 128, 132], "r": [0, 7, 10, 11, 12, 18, 19, 21, 26, 27, 33, 40, 41, 42, 44, 45, 47, 49, 50, 54, 55, 56, 57, 58, 59, 63, 67, 72, 73, 76, 77, 78, 80, 81, 82, 101, 103, 110, 111, 112, 113, 114, 115, 128, 131, 132], "voicetwo": [0, 33, 40, 41, 44, 45, 47, 50, 57, 59, 63, 72, 73, 101, 115, 128], "numer": [0, 5, 15, 32, 44, 45, 54, 63, 77, 101, 108, 112], "int": [0, 21, 27, 31, 32, 40, 44, 46, 49, 53, 55, 57, 58, 59, 67, 69, 70, 72, 73, 77, 78, 79, 81, 82, 89, 90, 91, 92, 94, 97, 99, 101, 111, 112], "ceil": [0, 32, 101], "len": [0, 12, 17, 66, 67, 70, 72, 74, 79, 81, 85, 101, 110, 111, 124, 126, 135, 137], "2": [0, 1, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 91, 92, 94, 95, 97, 98, 99, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137], "durat": [0, 3, 5, 11, 12, 28, 36, 40, 41, 43, 44, 49, 52, 53, 54, 56, 57, 63, 64, 71, 72, 73, 74, 76, 79, 84, 85, 86, 91, 92, 93, 94, 95, 96, 98, 101, 102, 112, 130], "lower_pitch": 0, "namedpitch": [0, 6, 12, 16, 28, 40, 43, 44, 45, 47, 67, 69, 72, 81, 85, 89, 90, 91, 92, 97, 111, 114], "upper_pitch": 0, "namedinterv": [0, 28, 29, 43, 44, 69, 114], "p8": [0, 69, 111], "octave_pitch": 0, "chord": [0, 3, 5, 8, 9, 12, 16, 18, 28, 29, 33, 36, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 56, 57, 59, 63, 64, 69, 72, 73, 76, 81, 82, 85, 103, 111, 124, 130, 134, 137], "articul": [0, 3, 12, 27, 28, 30, 40, 41, 43, 44, 47, 56, 57, 59, 63, 72, 73, 80, 103, 124, 130, 135, 137], "voiceon": [0, 33, 40, 41, 44, 45, 47, 50, 57, 59, 63, 72, 73, 101, 115, 128, 132], "rh_upper_voic": 0, "_upper_voic": 0, "true": [0, 7, 10, 12, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 112, 115, 124, 126, 128, 132, 135, 137], "leaf": [0, 6, 10, 12, 21, 27, 28, 33, 40, 43, 44, 45, 47, 48, 49, 52, 54, 56, 57, 59, 64, 71, 72, 73, 81, 82, 84, 85, 91, 92, 101, 110, 130], "bar_lin": [0, 12, 40, 44, 110, 114, 115, 124, 135, 137], "barlin": [0, 3, 6, 12, 19, 20, 21, 22, 23, 24, 25, 26, 28, 40, 43, 44, 51, 63, 67, 110, 111, 112, 113, 114, 115, 124, 135, 137], "return": [0, 12, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 110, 111, 112, 113, 114, 126, 130], "make_measur": [0, 110], "measur": [0, 2, 3, 9, 12, 18, 40, 49, 51, 54, 56, 63, 64, 73, 84, 93, 94, 95, 98, 101, 110, 113, 130], "sublist": [0, 110], "get": [0, 10, 16, 18, 27, 28, 29, 31, 32, 33, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 102, 107, 110, 111, 116, 120, 125, 126, 130], "append": [0, 11, 12, 19, 20, 21, 23, 24, 25, 26, 40, 44, 46, 47, 49, 50, 54, 56, 57, 59, 71, 72, 78, 79, 80, 81, 82, 92, 101, 110, 111, 112, 113, 114, 126], "with_denomin": [0, 32, 112], "time_signatur": [0, 12, 19, 21, 40, 42, 44, 52, 54, 56, 73, 84, 85, 93, 94, 95, 98, 101, 110, 113, 114, 115, 124, 130, 135, 137], "timesignatur": [0, 6, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 28, 40, 43, 44, 47, 49, 51, 52, 54, 55, 56, 63, 67, 72, 73, 93, 94, 95, 110, 111, 112, 113, 114, 115, 124, 130, 135, 137], "first_not": [0, 124, 135, 137], "select": [0, 3, 8, 11, 12, 18, 21, 26, 27, 28, 33, 40, 42, 43, 44, 45, 47, 49, 54, 55, 56, 57, 59, 72, 85, 86, 95, 98, 101, 102, 111, 112, 113, 114, 115, 124, 126, 132, 135, 137], "make_staff": 0, "staff": [0, 3, 6, 7, 8, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 63, 64, 67, 69, 71, 72, 73, 74, 76, 78, 80, 81, 82, 84, 85, 91, 92, 98, 101, 103, 108, 110, 111, 112, 113, 114, 115, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137], "_staff": [0, 112], "sequenc": [0, 12, 23, 24, 26, 34, 40, 43, 46, 52, 54, 57, 59, 63, 66, 70, 71, 72, 73, 85, 88, 90, 91, 92, 94, 97, 98, 102, 111], "make_scor": [0, 19, 110, 112, 113, 114], "rh_pitch": 0, "lh_pitch": 0, "rh_staff": [0, 44, 110, 115, 125, 127, 130], "rh": [0, 19, 55, 77, 115], "lh_staff": [0, 44, 110, 115], "lh": [0, 19, 55], "leav": [0, 8, 12, 18, 21, 27, 33, 40, 42, 44, 45, 47, 49, 52, 54, 56, 57, 59, 64, 71, 72, 73, 77, 81, 84, 86, 91, 92, 101, 102, 105, 110], "iterpitch": [0, 40, 102], "respell_with_sharp": [0, 48], "stave": [0, 3, 8, 9, 12, 13, 19, 103, 124, 125, 128, 130, 135, 137], "piano_staff": [0, 6, 11, 19, 23, 24, 42, 67, 110, 111, 115, 124, 135, 137], "staffgroup": [0, 12, 19, 21, 25, 26, 28, 43, 44, 45, 49, 51, 63, 72, 81, 110, 115, 124, 128, 135, 137], "lilypond_typ": [0, 4, 18, 19, 44, 52, 56, 58, 63, 72, 81, 110, 115, 124, 129, 135, 137], "pianostaff": [0, 6, 11, 19, 23, 24, 42, 44, 51, 63, 67, 81, 110, 111, 115, 124, 135, 137], "clef": [0, 3, 11, 12, 19, 22, 23, 24, 26, 27, 28, 40, 42, 43, 44, 45, 49, 51, 54, 56, 59, 63, 67, 81, 82, 101, 103, 110, 111, 112, 113, 115, 130], "bass": [0, 6, 11, 12, 19, 23, 24, 26, 40, 42, 44, 45, 49, 51, 54, 56, 59, 63, 67, 81, 110, 111, 115, 121, 122, 123], "key_signatur": [0, 7, 44, 114, 130, 132], "keysignatur": [0, 7, 28, 43, 44, 51, 63, 114, 130, 132], "namedpitchclass": [0, 7, 16, 28, 43, 44, 67, 69, 114, 130, 132], "b": [0, 4, 7, 8, 11, 12, 14, 19, 20, 21, 22, 23, 24, 25, 31, 32, 34, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 56, 57, 59, 63, 64, 67, 69, 71, 72, 73, 74, 76, 79, 81, 84, 92, 94, 103, 108, 110, 111, 113, 114, 115, 124, 125, 127, 128, 130, 132, 135, 137], "mode": [0, 7, 28, 43, 44, 60, 63, 65, 71, 107, 114, 130, 132], "major": [0, 7, 44, 69, 107, 130, 132], "preambl": [0, 11, 12, 19, 21, 101, 110, 111, 112, 113, 114], "set": [0, 1, 2, 4, 5, 9, 11, 12, 15, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 40, 41, 44, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 63, 66, 67, 69, 72, 73, 74, 75, 76, 79, 81, 85, 94, 95, 98, 99, 101, 103, 106, 110, 111, 112, 113, 114, 116, 131], "default": [0, 12, 15, 27, 28, 33, 40, 45, 46, 50, 51, 52, 54, 63, 64, 67, 69, 72, 79, 84, 85, 94, 98, 99, 106], "paper": [0, 2, 12, 19, 20, 21, 26, 50, 51, 63, 67, 103, 110], "size": [0, 11, 12, 19, 21, 22, 23, 24, 25, 26, 40, 41, 43, 47, 50, 51, 55, 57, 59, 63, 70, 72, 73, 80, 101, 103, 110, 111, 112, 113, 114, 131], "a4": [0, 12, 45, 67, 69, 114, 115], "letter": [0, 33, 77], "global": [0, 11, 12, 19, 21, 22, 23, 24, 25, 26, 46, 50, 51, 63, 94, 110, 111, 112, 113, 114, 131], "10": [0, 1, 11, 12, 19, 20, 21, 23, 24, 26, 30, 32, 33, 40, 44, 49, 52, 53, 54, 66, 67, 69, 70, 72, 73, 74, 75, 79, 101, 103, 104, 110, 112, 113, 117, 118, 119, 124, 136, 137], "layout": [0, 11, 12, 13, 19, 20, 21, 23, 26, 46, 50, 55, 63, 67, 72, 73, 101, 103, 110, 111, 112, 113, 114, 131], "indent": [0, 19, 20, 21, 23, 26, 55, 67, 72, 77, 101, 110, 114, 131, 132], "rag": [0, 55, 72, 101], "right": [0, 12, 27, 31, 35, 44, 50, 55, 63, 66, 67, 69, 72, 73, 74, 76, 77, 79, 81, 82, 101, 103, 111], "t": [0, 8, 9, 11, 12, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 34, 40, 41, 44, 47, 50, 53, 54, 55, 57, 59, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 101, 103, 108, 110, 111, 112, 113, 130], "merg": 0, "differ": [0, 2, 3, 5, 8, 9, 12, 15, 27, 32, 40, 46, 47, 53, 54, 67, 72, 82, 98, 101, 103, 105, 107, 110], "dot": [0, 32, 44, 46, 49, 51, 52, 54, 56, 58, 63, 64, 72, 76, 77, 101, 107], "head": [0, 44, 49, 51, 63, 72, 73, 102], "context": [0, 6, 8, 11, 12, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 33, 36, 40, 41, 42, 43, 44, 45, 47, 50, 51, 54, 55, 56, 57, 58, 59, 63, 67, 72, 73, 83, 87, 88, 90, 101, 102, 103, 110, 111, 112, 113, 114, 115, 124, 125, 127, 130, 131, 132, 135, 137], "remov": [0, 12, 29, 39, 42, 44, 49, 50, 51, 54, 55, 57, 71, 72, 73, 74, 76, 78, 79, 80, 92, 101, 126], "bar_number_engrav": [0, 51], "default_bar_line_engrav": [0, 51, 54], "timing_transl": [0, 51, 54], "overrid": [0, 6, 11, 12, 19, 20, 21, 22, 23, 24, 25, 26, 28, 32, 33, 43, 44, 49, 50, 55, 56, 59, 60, 63, 67, 72, 73, 76, 101, 102, 103, 106, 111, 112, 113, 114, 115, 124, 132, 135, 137], "breakabl": [0, 51], "glissando": [0, 6, 28, 43, 44, 51, 58, 63, 67, 76], "notecolumn": [0, 51, 63, 76], "ignor": [0, 32, 66, 72, 74, 101, 103], "collis": [0, 51], "spacingspann": [0, 19, 22, 23, 24, 25, 26, 51, 55, 63, 72, 101, 103, 111, 113], "uniform": [0, 19, 103], "stretch": [0, 2, 19, 79, 103], "textscript": [0, 11, 44, 49, 51, 55, 63, 101, 112, 113, 114], "pad": [0, 11, 12, 19, 20, 21, 26, 33, 44, 49, 51, 55, 56, 63, 67, 72, 73, 76, 79, 101, 110, 112, 113, 114, 124, 135, 137], "4": [0, 5, 6, 8, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 40, 41, 42, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 124, 125, 127, 128, 129, 130, 131, 132, 135, 137], "textspann": [0, 51, 58, 63, 76], "stencil": [0, 6, 11, 19, 20, 21, 22, 23, 24, 25, 26, 44, 51, 63, 67, 76, 101, 111, 112, 113, 114, 132], "tupletbracket": [0, 17, 49, 51, 55, 63, 72, 73, 101], "bracket": [0, 49, 51, 55, 57, 63, 72, 73, 101, 124, 135, 137], "visibl": [0, 55, 63, 72, 101], "minimum": [0, 12, 21, 26, 51, 55, 72, 79, 101, 112, 113], "length": [0, 2, 20, 23, 31, 34, 40, 51, 52, 53, 55, 63, 65, 66, 67, 70, 72, 73, 74, 81, 91, 99, 101, 126], "3": [0, 5, 8, 10, 11, 12, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 35, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 89, 90, 91, 92, 94, 95, 97, 98, 99, 101, 103, 104, 108, 110, 111, 112, 113, 114, 115, 116, 124, 126, 132, 135, 136, 137], "spring": [0, 51, 55, 72, 101], "rod": [0, 51, 55, 72, 101], "ly": [0, 8, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 50, 52, 55, 64, 67, 72, 73, 101, 103, 106, 108, 111, 112, 113], "spanner": [0, 8, 33, 44, 51, 55, 57, 63, 72, 82, 101, 102], "space": [0, 12, 19, 20, 21, 22, 23, 24, 25, 26, 51, 55, 67, 69, 72, 101, 103, 111, 112, 113, 132], "tupletnumb": [0, 17, 49, 51, 55, 63, 72, 101, 112], "text": [0, 2, 9, 17, 27, 33, 34, 40, 44, 46, 51, 52, 53, 54, 55, 56, 58, 63, 64, 67, 71, 72, 73, 74, 76, 78, 81, 82, 101, 103, 105, 106, 112, 123], "tuplet": [0, 2, 3, 5, 8, 9, 10, 18, 28, 40, 43, 44, 47, 49, 51, 52, 54, 55, 56, 57, 59, 63, 64, 71, 72, 73, 81, 92, 94, 99, 101, 112, 124, 130, 132, 134, 135, 137], "number": [0, 3, 12, 16, 19, 21, 25, 30, 32, 35, 40, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 84, 86, 88, 91, 92, 101, 103, 109, 110, 112, 113, 126, 130], "calc": [0, 17, 40, 52, 54, 55, 56, 64, 71, 72, 73, 81, 101, 112], "fraction": [0, 17, 24, 26, 32, 40, 43, 44, 49, 51, 52, 53, 54, 55, 56, 63, 64, 69, 70, 71, 72, 73, 74, 79, 81, 101, 112], "autobeam": [0, 50, 51, 58, 73], "proportionalnotationdur": [0, 11, 19, 20, 21, 22, 23, 24, 25, 26, 55, 67, 72, 73, 101, 103, 111, 112, 113], "make": [0, 3, 4, 5, 8, 9, 11, 12, 13, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 40, 42, 44, 46, 49, 52, 54, 57, 58, 66, 67, 69, 71, 72, 73, 75, 76, 92, 101, 103, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 124, 130, 134, 135, 136, 137], "moment": [0, 3, 11, 19, 20, 21, 22, 23, 24, 25, 26, 49, 67, 72, 73, 81, 101, 103, 111, 112, 113, 130], "tupletfulllength": [0, 50, 55, 58, 72, 101, 112], "consist": [0, 44, 49, 50, 51, 54, 72, 94, 110], "style": [0, 4, 40, 44, 46, 51, 54, 58, 71, 76, 80, 102, 114, 116], "forbid_line_break_engrav": [0, 50, 51], "observ": 0, "follow": [0, 8, 9, 11, 19, 21, 22, 23, 24, 27, 32, 64, 72, 94, 99, 101, 103, 105, 106, 108, 111, 112, 121, 122, 123], "characterist": 0, "compris": [0, 8, 54, 76, 110, 131], "stem": [0, 11, 19, 20, 21, 22, 23, 24, 44, 49, 50, 51, 55, 56, 58, 63, 67, 72, 76, 101, 111, 113], "point": [0, 2, 8, 51, 72, 84, 85, 90, 92, 98, 103], "up": [0, 2, 12, 13, 15, 21, 26, 27, 29, 32, 33, 35, 40, 42, 44, 49, 53, 54, 55, 56, 69, 72, 73, 76, 77, 84, 101, 110, 112, 113, 114, 124, 130, 134, 135, 137], "while": [0, 8, 12, 15, 19, 54, 58, 69, 103, 110, 111], "down": [0, 11, 12, 26, 27, 32, 33, 35, 42, 44, 56, 57, 69, 72, 77, 103, 132], "all": [0, 2, 3, 8, 12, 15, 27, 28, 44, 45, 46, 48, 49, 51, 52, 53, 54, 56, 63, 66, 67, 72, 73, 76, 77, 78, 79, 85, 86, 90, 91, 92, 94, 97, 99, 101, 103, 105, 106, 116, 124, 128, 130, 131, 134, 137], "ar": [0, 2, 3, 8, 9, 12, 15, 18, 21, 27, 32, 33, 44, 46, 47, 52, 53, 54, 55, 57, 58, 65, 67, 69, 71, 72, 73, 74, 75, 76, 79, 82, 84, 85, 88, 92, 94, 97, 98, 99, 101, 103, 105, 107, 108, 109, 110, 112, 113, 117, 118, 119, 120, 125, 130, 131], "mark": [0, 3, 12, 36, 44, 49, 51, 63, 73, 84, 108, 130], "fort": [0, 1, 49, 72, 75], "plai": [0, 12, 72, 103], "vari": 0, "belong": [0, 8, 51, 92], "Then": [0, 12, 19, 46, 101, 107, 124, 131, 135, 137], "add": [0, 12, 15, 32, 50, 67, 69, 72, 77, 101, 103, 108, 112], "final": [0, 2, 12, 19, 44, 64, 73, 85, 110, 115], "put": [0, 63], "them": [0, 3, 54, 71, 72, 79, 97, 103, 108, 110, 128, 130], "after": [0, 2, 7, 8, 12, 15, 27, 30, 33, 40, 41, 44, 51, 53, 72, 76, 79, 92, 101, 103, 107, 132], "lilypond": [0, 1, 4, 19, 27, 28, 30, 32, 33, 40, 42, 44, 46, 49, 50, 51, 55, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 72, 76, 77, 78, 82, 101, 103, 106, 111, 113, 114, 115, 116, 124, 125, 130, 134, 136, 137], "command": [0, 12, 30, 33, 40, 44, 46, 49, 50, 63, 72, 76, 82, 101, 108, 130, 131], "so": [0, 2, 9, 12, 32, 71, 99, 103, 106], "e": [0, 1, 4, 6, 7, 8, 10, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 92, 98, 103, 108, 110, 111, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137], "_": [0, 11, 12, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 40, 42, 44, 45, 51, 54, 57, 63, 67, 71, 72, 73, 74, 76, 77, 78, 79, 80, 92, 101, 110, 111, 113, 114], "show": [0, 3, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 92, 98, 101, 103, 108, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137], "version": [0, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 92, 98, 101, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137], "19": [0, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 66, 67, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 92, 98, 101, 104, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137], "83": [0, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 92, 98, 101, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137], "languag": [0, 1, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 72, 73, 76, 78, 79, 80, 81, 82, 84, 85, 86, 92, 98, 101, 103, 106, 108, 110, 111, 112, 113, 114, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137], "english": [0, 6, 7, 8, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 92, 98, 101, 106, 108, 110, 111, 112, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 137], "b8": [0, 48, 57, 67, 76, 115], "now": [0, 2, 8, 12, 15, 18, 19, 27, 101, 103, 110], "construct": [0, 9, 12, 32, 63, 69], "half": [0, 12, 32, 71, 101, 110], "divis": [0, 32, 54, 66, 99, 101], "otherwis": [0, 7, 27, 31, 44, 79, 89, 90, 91, 92, 97, 99], "next": [0, 12, 40, 66, 71, 73, 74, 92, 101], "integ": [0, 2, 5, 29, 31, 32, 40, 44, 52, 53, 54, 59, 65, 66, 67, 69, 70, 73, 81, 92, 94, 99, 101, 127], "greater": [0, 2, 16, 17, 32, 44, 52, 53, 54, 59, 69, 72, 73, 79, 90, 101, 111], "than": [0, 2, 3, 12, 16, 17, 18, 27, 32, 40, 44, 52, 53, 54, 59, 63, 64, 67, 69, 72, 73, 74, 79, 85, 90, 101, 103, 108], "accent": [0, 12, 27, 40, 41, 47, 54, 56, 57, 59, 63, 73, 124, 135, 137], "combin": [0, 2, 34, 54, 63], "becaus": [0, 3, 5, 8, 14, 27, 32, 33, 49, 54, 67, 72, 76, 82, 101, 103, 108, 124, 125, 130, 134, 137], "appear": [0, 4, 19, 33, 44, 57, 63, 72, 101, 103, 105, 108, 110, 131], "over": [0, 54, 58, 66, 72, 79, 124, 130, 135, 137], "again": [0, 27, 55, 78, 99, 101, 111, 116], "want": [0, 2, 15, 27, 103, 106, 107, 129], "reus": [0, 29], "code": [0, 1, 2, 8, 9, 13, 19, 38, 65, 88, 101, 103, 105, 114], "gener": [0, 1, 2, 12, 13, 28, 33, 34, 37, 38, 40, 43, 46, 54, 55, 56, 57, 59, 63, 69, 70, 71, 72, 73, 74, 76, 81, 85, 92, 95, 97, 98, 99, 101, 106, 110, 111, 116, 117, 118, 119, 131], "ani": [0, 3, 5, 6, 7, 8, 15, 17, 18, 19, 27, 28, 29, 31, 40, 44, 46, 54, 63, 72, 73, 74, 76, 79, 85, 86, 94, 101, 103, 114, 124, 128, 129, 134, 137], "encapsul": [0, 9, 12, 86, 98, 99, 103], "take": [0, 27, 46, 53, 94, 103, 107, 110], "onli": [0, 2, 3, 5, 8, 12, 18, 27, 28, 29, 31, 32, 33, 40, 44, 45, 47, 49, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 108, 110, 129, 130], "list": [0, 2, 14, 23, 26, 28, 29, 30, 32, 34, 40, 43, 44, 45, 46, 49, 51, 52, 53, 54, 56, 57, 59, 63, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 85, 92, 95, 99, 101, 105, 106, 110, 114, 124, 126, 131, 135, 137], "defin": [0, 4, 8, 12, 13, 17, 22, 23, 24, 26, 28, 32, 33, 40, 44, 46, 50, 53, 54, 60, 66, 69, 72, 79, 81, 93, 99, 101, 103, 124, 126, 135, 137], "creat": [0, 2, 3, 4, 8, 9, 12, 14, 15, 17, 26, 28, 29, 44, 51, 52, 54, 58, 64, 69, 71, 85, 94, 96, 103, 106, 108, 110, 112, 116, 117, 118, 119, 124, 128, 130, 134, 135, 136, 137], "veri": [0, 44, 92, 101, 103, 132], "simpl": [0, 8, 54, 63, 66, 103], "It": [0, 2, 8, 15, 32, 65, 72, 81, 88, 103, 117, 118, 119], "simpli": [0, 60], "popul": 0, "intern": [0, 27, 63, 88, 89, 92, 95, 96, 102, 109], "previous": [0, 29], "input": [0, 8, 9, 27, 33, 36, 44, 46, 47, 53, 54, 63, 66, 72, 78, 79, 91, 99, 101, 108, 114, 115, 116, 124, 125, 130, 131, 132, 135, 137], "form": [0, 5, 21, 22, 27, 32, 36, 65, 67, 71, 75, 113], "g": [0, 1, 4, 6, 7, 8, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 33, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 54, 56, 57, 59, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 81, 84, 85, 86, 92, 97, 98, 105, 108, 110, 111, 113, 114, 115, 124, 125, 126, 127, 128, 130, 132, 135, 137], "iter": [0, 2, 9, 28, 31, 33, 40, 41, 43, 44, 46, 48, 53, 54, 56, 57, 59, 67, 70, 72, 73, 74, 79, 81, 91, 101, 102, 110, 116, 124, 126, 134, 137], "could": [0, 8, 54, 94], "have": [0, 12, 15, 32, 57, 67, 72, 76, 79, 91, 94, 103, 110, 116, 130], "readi": 0, "made": [0, 94, 107, 110], "directli": [0, 101, 114, 131], "build": [0, 2, 108, 110, 116, 124, 130, 134, 137], "hierarchi": [0, 54], "can": [0, 5, 6, 8, 9, 12, 14, 15, 16, 17, 18, 19, 27, 29, 31, 33, 36, 40, 44, 46, 52, 53, 54, 56, 58, 64, 66, 67, 69, 71, 72, 78, 79, 81, 92, 94, 98, 101, 103, 106, 107, 108, 110, 116, 124, 128, 129, 130, 131, 132, 134, 137], "pass": [0, 2, 27, 52, 63, 98, 99], "full": [0, 2, 46, 56, 93, 94, 103, 116], "structur": [0, 1, 2, 3, 8, 9, 10, 13, 23, 54, 63, 71, 92, 96, 98, 99, 103, 110, 111, 114, 116], "To": [0, 72, 101, 103, 107], "would": [0, 2, 8, 44, 98, 101, 130], "call": [0, 2, 12, 27, 33, 46, 54, 56, 57, 63, 66, 67, 69, 71, 74, 77, 78, 80, 84, 85, 86, 88, 92, 94, 95, 96, 97, 98, 99, 101, 108, 131], "like": [0, 2, 3, 5, 6, 9, 11, 12, 15, 16, 17, 19, 27, 31, 33, 40, 44, 50, 52, 54, 56, 58, 64, 66, 72, 76, 79, 94, 98, 101, 103, 106, 107, 108, 110, 114, 126, 130, 131], "c": [0, 2, 4, 6, 7, 8, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 89, 90, 91, 92, 94, 97, 98, 101, 103, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 124, 126, 128, 129, 131, 132, 135, 137], "time": [0, 1, 3, 10, 12, 15, 17, 18, 21, 27, 29, 32, 36, 40, 44, 46, 47, 49, 51, 52, 54, 55, 56, 57, 59, 63, 64, 67, 68, 71, 72, 73, 74, 79, 81, 84, 85, 86, 92, 93, 94, 95, 98, 101, 103, 106, 107, 110, 112, 113, 115, 124, 126, 130, 132, 135, 137], "11": [0, 11, 12, 19, 21, 23, 24, 26, 30, 32, 44, 49, 52, 53, 54, 57, 66, 67, 69, 72, 74, 75, 77, 79, 94, 99, 101, 110, 112, 113], "bar": [0, 7, 12, 19, 20, 21, 40, 44, 46, 51, 63, 67, 77, 110, 114, 115, 124, 135, 137], "move": [0, 9, 54, 56, 72], "level": [0, 2, 17, 41, 54, 57, 72, 73, 99, 101, 132], "plain": 0, "argument": [0, 17, 27, 28, 31, 32, 33, 34, 38, 40, 42, 44, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 79, 81, 82, 84, 89, 90, 91, 92, 94, 97, 98, 99, 101], "must": [0, 5, 27, 44, 53, 56, 57, 60, 67, 72, 73, 74, 91, 130], "our": [0, 2, 19, 105, 110], "As": [0, 2, 8, 124, 135, 137], "new": [0, 1, 6, 7, 8, 10, 12, 14, 17, 18, 19, 21, 25, 27, 29, 32, 33, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 78, 80, 81, 82, 84, 85, 86, 91, 92, 98, 108, 128], "empti": [0, 33, 34, 53, 56, 66, 67, 74, 79, 82, 115], "kei": [0, 3, 7, 28, 38, 44, 49, 51, 54, 58, 63, 72, 74, 79, 94, 99, 103, 114, 130, 132], "signatur": [0, 3, 18, 40, 44, 51, 52, 54, 56, 63, 73, 84, 93, 94, 95, 98, 101, 103, 115, 124, 130, 135, 137], "match": [0, 30, 35, 40, 52, 54, 66, 74, 79, 82, 116], "origin": [0, 29, 110], "depth": [0, 10, 54, 59, 71, 73, 74, 92], "element": [0, 3, 23, 37, 38, 43, 44, 52, 57, 66, 67, 72, 73, 74, 79, 101, 110], "correspond": [0, 18, 54, 63, 69, 108, 111, 128], "upper": [0, 77], "second": [0, 8, 12, 14, 27, 29, 32, 44, 46, 53, 66, 67, 69, 71, 72, 73, 85, 92, 103, 110, 111, 112, 113, 124, 135, 137], "redund": 0, "aspect": [0, 2, 63], "compactli": 0, "express": [0, 32, 52, 54, 64, 65, 84, 101, 130], "around": [0, 1, 2, 53, 57, 63, 69, 74], "chang": [0, 6, 9, 15, 16, 28, 29, 32, 33, 42, 44, 53, 54, 56, 63, 67, 72, 76, 77, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 103, 114, 117, 118, 119, 124, 129, 134, 137], "In": [0, 1, 2, 5, 12, 33, 54, 66, 94, 99, 103, 106], "order": [0, 30, 34, 35, 40, 46, 47, 53, 54, 67, 71, 72, 79, 81, 84, 92, 97, 103, 110, 113], "carri": [0, 2, 3, 8, 27, 56, 72, 90, 101, 130], "its": [0, 3, 10, 12, 19, 27, 29, 65, 71, 89, 91, 92, 94, 97], "own": [0, 13, 32, 103, 105], "independ": [0, 2, 94], "requir": [0, 2, 3, 8, 13, 32, 46, 89, 90, 91, 92, 97, 99, 107, 108, 117, 118, 119, 124, 136, 137], "some": [0, 1, 2, 12, 19, 27, 44, 52, 54, 74, 92, 124, 135, 137], "special": [0, 27, 28, 29, 30, 31, 32, 33, 35, 40, 44, 45, 46, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101], "setup": [0, 38], "prior": [0, 18, 79], "render": [0, 2, 8, 68], "specif": [0, 2, 46, 51, 64, 79, 94], "out": [0, 2, 48, 56, 66, 79, 82, 101, 103], "you": [0, 2, 4, 5, 6, 7, 8, 9, 12, 14, 15, 16, 17, 32, 44, 52, 72, 98, 103, 105, 106, 108, 110, 116, 117, 118, 119, 124, 128, 129, 130, 131, 134, 137], "refer": [0, 9, 18, 73, 98, 99], "document": [0, 8, 13, 17, 27, 32, 38, 63, 101, 116, 129], "polymetr": 0, "notat": [0, 1, 2, 5, 6, 8, 9, 11, 13, 32, 54, 84, 98, 101, 109, 113, 116, 124, 129, 130, 134, 137], "learn": [0, 9, 103, 116], "about": [0, 2, 3, 8, 13, 18, 67, 69, 79, 103, 105, 106, 116], "how": [0, 8, 12, 15, 21, 27, 40, 54, 65, 88, 92, 94, 98, 99, 103, 106, 107, 110, 128], "work": [0, 2, 8, 9, 13, 14, 15, 27, 29, 33, 40, 41, 44, 47, 50, 52, 56, 59, 66, 72, 73, 76, 79, 82, 101, 103, 108, 116, 121, 122, 123, 124, 125, 126, 129, 134, 137], "custom": [0, 33, 36, 38, 44, 49, 51, 54, 56, 57, 63, 72, 99, 102], "file": [0, 8, 15, 22, 24, 26, 27, 28, 33, 42, 46, 50, 56, 57, 60, 63, 64, 65, 66, 67, 68, 69, 71, 74, 77, 78, 80, 88, 98, 101, 103, 106, 107, 108, 116], "automat": [0, 1, 32, 103, 131], "result": [0, 2, 3, 8, 9, 19, 28, 29, 32, 40, 44, 46, 52, 56, 57, 59, 60, 63, 64, 65, 67, 70, 71, 72, 73, 74, 84, 85, 86, 94, 98, 101, 103, 105, 110, 111, 112, 113], "d": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 62, 63, 64, 67, 69, 71, 72, 73, 74, 76, 78, 80, 81, 82, 84, 85, 86, 91, 92, 98, 103, 108, 110, 111, 113, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 135, 137], "lilypond_fil": [0, 6, 11, 12, 19, 21, 22, 23, 24, 25, 26, 40, 41, 42, 44, 47, 49, 50, 54, 55, 57, 59, 67, 73, 76, 78, 101, 110, 111, 112, 113, 114, 131], "lilypondfil": [0, 11, 12, 19, 21, 22, 23, 24, 25, 26, 28, 40, 41, 43, 44, 47, 49, 54, 55, 57, 59, 73, 76, 78, 102, 110, 111, 112, 113, 114, 131], "7": [0, 1, 5, 11, 12, 15, 17, 19, 21, 22, 23, 24, 25, 26, 30, 31, 32, 34, 40, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 84, 85, 94, 95, 97, 98, 99, 101, 103, 104, 110, 111, 112, 113, 114], "a8": [0, 17, 57, 67, 76, 115], "g8": [0, 57, 110, 115], "lh_lower_voic": 0, "ds8": 0, "gs8": 0, "as8": 0, "lh_upper_voic": 0, "fs8": [0, 115], "cs8": 0, "ad\u00e1n": [0, 1, 2, 109, 115], "ba\u010da": [0, 1, 2, 8, 12, 13, 19, 22, 25, 103, 108, 109, 110, 111, 112, 113, 114, 115, 121, 122, 123, 132], "carlo": 1, "agon": 1, "g\u00e9rard": 1, "assayag": 1, "jean": 1, "bresson": 1, "om": [1, 112], "compos": [1, 2, 3, 12, 13, 63, 71, 88, 89, 94, 95, 96, 99, 101, 103, 107, 108, 112, 116, 121, 122, 123, 124, 130, 131, 134, 137], "\u00e9dition": 1, "delatour": 1, "pari": 1, "2006": 1, "karim": 1, "haddad": 1, "gerard": 1, "r\u00e9present": 1, "et": [1, 34, 49], "rendu": 1, "de": [1, 62, 63], "rhythmiqu": 1, "journ\u00e9": 1, "informatiqu": 1, "musical": 1, "9th": 1, "ed": 1, "marseil": 1, "29": [1, 54, 75, 79, 91, 101, 104], "31": [1, 12, 24, 26, 32, 54, 74, 75, 79, 101, 106], "mai": [1, 3, 8, 33, 52, 63, 72, 84, 92, 99, 103, 105], "2002": 1, "brian": [1, 112], "aleg": 1, "seventi": 1, "seven": [1, 122], "partit": [1, 20, 34, 53, 70, 73, 74, 79, 84, 111, 124, 135, 137], "aggreg": [1, 75], "analyt": [1, 109], "theoret": [1, 3, 9], "implic": [1, 2], "doctor": [1, 109], "dissert": [1, 109], "univers": [1, 109, 123], "rochest": 1, "eastman": 1, "school": [1, 109], "1993": 1, "moren": 1, "andreatta": 1, "michel": 1, "bardez": 1, "john": [1, 122], "rahn": 1, "theori": 1, "2008": 1, "christoph": 1, "ariza": 1, "open": [1, 2, 30, 31, 33, 40, 44, 46, 50, 66, 67, 79, 106, 109, 113], "design": [1, 2, 13, 103], "comput": [1, 15, 44, 67, 69, 72, 79, 86, 92, 94, 105, 109, 116], "aid": 1, "algorithm": [1, 13], "athenacl": 1, "com": [1, 104, 105, 107, 121, 122, 123], "boca": 1, "raton": 1, "2005": [1, 2], "trevor": [1, 2, 13, 27, 28, 33, 56, 57, 66, 67, 69, 74, 77, 78, 80, 98, 101, 105, 109, 121, 122, 123], "v\u00edctor": [1, 2, 109], "cuepatlahto": [1, 2], "lascaux": [1, 2], "approach": [1, 2, 13], "formal": [1, 2, 3, 5, 13, 18, 109, 130], "control": [1, 2, 13, 47, 88, 94, 98, 99, 108, 109, 124, 134, 137], "draft": 1, "june": 1, "2007": 1, "josiah": [1, 2, 13, 109, 121, 122, 123], "wolf": [1, 2, 13, 109, 121, 122, 123], "oberholtz": [1, 2, 13, 109, 110, 121, 122, 123], "jeffrei": [1, 109, 122], "trevi\u00f1o": [1, 12, 13, 109, 122], "softwar": [1, 2, 3, 103, 109, 116, 117, 118, 119], "For": [1, 12, 46, 54, 60, 94, 101, 109, 110, 121, 122, 123], "2015": [1, 107, 109], "eliot": 1, "carter": [1, 19], "harmoni": [1, 19, 24, 123], "nichola": 1, "hopkin": 1, "link": [1, 63, 104], "carl": 1, "fischer": 1, "york": 1, "alan": [1, 122], "aton": 1, "yale": 1, "press": 1, "haven": 1, "1973": 1, "le": 1, "temp": [1, 28], "comm": 1, "territoir": 1, "pour": [1, 94, 96], "un": 1, "g\u00e9ographi": 1, "temporel": 1, "arthur": 1, "kampela": 1, "uma": 1, "faca": 1, "s\u00f3": 1, "l\u00e2mina": 1, "columbia": 1, "ny": 1, "1998": 1, "mikha\u00efl": 1, "malt": [1, 112], "consider": [1, 2, 8], "ferneyhough": [1, 112], "through": [1, 2, 13, 52, 101, 109, 110], "hi": [1, 2, 19], "cac": 1, "part": [1, 2, 12, 13, 17, 24, 26, 27, 32, 44, 53, 54, 64, 66, 70, 71, 72, 73, 74, 76, 78, 79, 99, 101, 103, 108, 110, 112, 116, 124, 135, 137], "rhythmic": [1, 9, 18, 51, 54, 64, 92, 98, 99], "guerino": 1, "mazzola": 1, "yun": 1, "kang": 1, "ahn": 1, "la": [1, 12, 125], "v\u00e9rit\u00e9": 1, "du": [1, 24], "beau": 1, "dan": 1, "musiqu": 1, "robert": [1, 109], "morri": 1, "class": [1, 6, 7, 11, 12, 13, 16, 17, 19, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 113, 116, 131], "1987": 1, "paul": [1, 87, 99, 102, 123], "nauert": [1, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102], "timespan": [1, 28, 40, 41, 43, 54, 102], "format": [1, 7, 12, 30, 33, 38, 42, 44, 50, 51, 54, 57, 58, 68, 69, 71, 72, 92, 94, 102, 103, 110, 111, 115], "nonmetr": 1, "postton": 1, "1997": 1, "han": [1, 117, 118, 119], "wen": [1, 117, 118, 119], "nienhui": [1, 117, 118, 119], "jan": [1, 46, 117, 118, 119], "nieuwenhuizen": [1, 117, 118, 119], "A": [1, 2, 8, 11, 17, 21, 26, 29, 36, 38, 44, 52, 54, 63, 69, 71, 72, 74, 91, 92, 95, 99, 103, 109, 110, 111], "autom": [1, 109], "engrav": [1, 13, 51, 54, 72], "proceed": [1, 109], "xiv": 1, "colloquium": 1, "informat": 1, "firenz": 1, "itali": 1, "2003": 1, "harvard": [1, 109], "graduat": [1, 109], "art": [1, 109], "scienc": [1, 109], "michael": 1, "rebhah": 1, "thoma": 1, "sch\u00e4fer": 1, "darmst\u00e4dter": 1, "beitr\u00e4g": 1, "zur": 1, "neuen": 1, "musik": 1, "vol": [1, 115], "21": [1, 12, 24, 26, 34, 49, 53, 54, 67, 74, 75, 79, 101, 104, 108, 123], "schott": 1, "gmbh": 1, "co": 1, "kg": 1, "mainz": 1, "2012": 1, "andr\u00e9": 1, "riott": 1, "marcel": 1, "mesnag": 1, "formalism": 1, "mod\u00e8l": 1, "musicaux": 1, "ted": 1, "ross": 1, "teach": [1, 15, 116], "yourself": [1, 103], "process": [1, 2, 9, 12, 15, 19, 46, 83, 87, 88, 93, 94, 97, 98, 107, 111], "hansen": 1, "hous": 1, "miami": [1, 109], "beach": 1, "eleanor": 1, "selfridg": 1, "field": [1, 25, 63], "beyond": [1, 116], "midi": [1, 2, 63, 68, 106, 116], "handbook": 1, "mit": [1, 2], "cambridg": 1, "massachusett": 1, "applic": [1, 2, 9, 46, 73, 109], "via": [1, 54, 63, 94, 97, 107, 109], "object": [1, 2, 3, 10, 13, 14, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 107, 109, 116, 130], "orient": [1, 13, 103, 105, 109], "program": [1, 2, 9, 13, 65, 109, 116, 117, 118, 119, 124, 134, 137], "california": [1, 109], "san": [1, 54, 63, 79, 109, 113], "diego": [1, 109], "2013": [1, 104, 109], "andrea": 1, "vall": 1, "geographi": 1, "notazion": 1, "composizion": 1, "algorithmica": 1, "centro": 1, "interdipartimental": 1, "di": 1, "ricerca": 1, "sulla": 1, "multimedialit\u00e0": 1, "l": [1, 107], "audiovisivo": 1, "universit\u00e0": 1, "degli": 1, "studi": 1, "torino": 1, "harri": 1, "wulfson": 1, "dougla": 1, "barrett": 1, "winter": 1, "creator": 2, "earliest": [2, 79], "collabor": [2, 103], "date": [2, 13, 46], "back": [2, 29], "share": [2, 32, 108], "undergradu": 2, "year": 2, "austin": 2, "wa": [2, 3, 19, 40, 63, 93, 97, 105], "mid": 2, "late": [2, 92], "90": [2, 12, 44, 98], "found": [2, 18, 31, 36, 40, 44, 49, 52, 84, 94, 101], "ourselv": 2, "interest": [2, 105, 120], "ever": [2, 95, 103], "larger": [2, 33, 63, 76, 113], "materi": [2, 12, 13, 79, 90, 101, 110, 116], "amount": [2, 35, 44], "inform": [2, 9, 13, 18, 46, 85, 98, 101, 103, 106, 117, 118, 119, 125], "began": 2, "write": [2, 9, 19, 27, 28, 46, 57, 63, 71, 72, 73, 78, 88, 92, 103, 114, 130], "hear": 2, "what": [2, 3, 4, 8, 12, 15, 20, 21, 27, 85, 94, 99, 103, 107, 130], "turn": [2, 101, 110, 113, 130], "fairli": 2, "common": [2, 32, 53, 54, 76, 110, 128], "gatewai": 2, "mani": [2, 3, 8, 10, 12, 63, 99, 103, 130, 131, 132], "probabl": [2, 15, 103, 130], "due": [2, 19, 23, 46, 111], "present": [2, 3, 8, 27, 40, 59, 72, 73, 79], "avail": [2, 15, 17, 44, 53, 57, 88, 106, 107, 109, 116, 121, 122, 123, 125], "lesser": [2, 32], "extent": [2, 33, 51, 76], "csound": 2, "But": [2, 5, 8, 12, 15, 18, 27, 44, 58, 72, 103, 108, 125, 128, 129, 130], "even": [2, 8, 32, 47, 66, 73, 74, 82, 94, 97, 101, 123], "clear": [2, 8, 72, 79], "find": [2, 10, 46, 50, 53, 54, 101, 106, 125], "embodi": 2, "other": [2, 3, 8, 10, 13, 18, 19, 27, 30, 32, 33, 44, 45, 49, 50, 52, 54, 58, 59, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 94, 98, 99, 101, 103, 114, 117, 118, 119, 125, 130, 131], "nest": [2, 3, 34, 52, 54, 59, 64, 66, 72, 74, 92, 99, 127, 132], "rhythm": [2, 12, 13, 46, 54, 55, 71, 87, 92, 94, 98, 100, 101, 102], "arbitrarili": [2, 64], "complex": [2, 8, 13, 15, 32, 43, 66, 98, 124, 134, 137], "possibl": [2, 8, 32, 54, 67, 72, 79, 99, 101, 103, 108, 110], "overlap": [2, 79, 82], "wholli": 2, "develop": [2, 9, 15, 105, 117, 118, 119, 124, 136, 137], "techniqu": [2, 9, 23, 87, 102, 116], "well": [2, 36, 63], "consid": [2, 8, 18, 19, 27, 44, 54, 86, 108], "flat": [2, 11, 44, 48, 63, 66, 69, 101], "float": [2, 29, 32, 44, 53, 54, 55, 69, 70], "valu": [2, 18, 20, 28, 30, 31, 32, 33, 35, 38, 40, 44, 45, 49, 50, 52, 53, 54, 58, 59, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 78, 79, 80, 81, 94, 99, 101], "basic": [2, 9, 12, 13, 21, 26, 46, 106, 125, 130], "data": [2, 9, 65, 116], "togeth": [2, 8, 19, 47, 52, 98, 101, 108, 131], "constant": [2, 44, 45, 65, 77], "need": [2, 8, 9, 44, 54, 72, 101, 103, 107], "type": [2, 3, 4, 8, 17, 19, 27, 28, 30, 31, 32, 33, 35, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 110, 115, 116, 125, 128, 130, 131], "quantif": 2, "round": [2, 12, 24, 26, 32, 46, 54, 63, 74, 79, 103], "feed": 2, "much": [2, 3, 9, 54, 94, 103], "most": [2, 13, 15, 18, 27, 32, 33, 44, 56, 57, 60, 63, 66, 67, 69, 73, 74, 77, 78, 80, 98, 101, 107, 128], "pd": 2, "good": [2, 15, 54, 103], "thing": [2, 8, 103], "therefor": [2, 64], "essenti": [2, 108], "modern": 2, "includ": [2, 4, 10, 13, 16, 33, 40, 41, 42, 44, 47, 49, 50, 53, 55, 57, 59, 72, 73, 76, 92, 98, 101, 106, 108, 130], "tool": [2, 15, 54, 71, 79, 102, 103], "manipul": [2, 79, 102, 116], "box": [2, 12, 21, 44, 46, 54, 63, 71, 79, 92], "standard": [2, 72], "librari": [2, 53, 102, 103], "happen": [2, 8, 15, 79, 81, 99], "when": [2, 5, 8, 9, 15, 18, 27, 29, 31, 32, 33, 40, 41, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 85, 86, 89, 90, 91, 97, 99, 101, 103, 106, 108, 116, 128, 130, 131], "think": [2, 8, 9, 116], "someth": [2, 8, 106], "more": [2, 8, 12, 27, 35, 40, 46, 54, 56, 63, 67, 70, 72, 73, 74, 79, 81, 98, 99, 101, 103, 117, 118, 119], "core": [2, 3], "perhap": [2, 3], "microton": 2, "fulli": 2, "fledg": 2, "capabl": 2, "larg": [2, 54, 63, 101], "attribut": [2, 27, 28, 29, 30, 31, 32, 33, 38, 40, 44, 45, 46, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 110], "might": [2, 94, 106], "group": [2, 3, 8, 21, 25, 26, 51, 59, 66, 72, 73, 74, 76, 79, 95, 98, 101, 103, 105, 110, 124, 128, 129, 130, 135, 137], "assemblag": 2, "still": [2, 33, 44, 88, 103, 111, 130], "load": [2, 92], "overload": [2, 31], "cross": [2, 3, 12, 32, 40, 51, 54], "relationship": [2, 8], "textur": 2, "surplu": 2, "potenti": 2, "limit": [2, 54, 103], "center": [2, 35, 44, 54, 63, 77, 79, 111], "paradigm": 2, "becom": [2, 9, 54, 101, 108, 116, 130], "burden": 2, "And": [2, 8, 9, 15, 19, 33, 103, 105, 110, 126], "offset": [2, 27, 28, 29, 32, 40, 41, 43, 44, 49, 51, 54, 66, 71, 79, 81, 85, 89, 90, 91, 92, 95, 97, 99], "impli": [2, 32, 44, 54, 72], "compress": 2, "stack": 2, "allow": [2, 7, 15, 27, 38, 44, 52, 53, 56, 63, 66, 69, 71, 74, 76, 82, 85, 92, 94, 97, 99, 110, 128], "convent": [2, 8, 44, 108], "There": [2, 75, 103, 110], "reason": [2, 44, 103, 108, 130], "believ": 2, "purpos": [2, 103], "should": [2, 3, 8, 15, 21, 29, 33, 44, 60, 63, 85, 103, 105, 106, 107, 108, 110, 116], "come": [2, 129], "readili": 2, "suppli": [2, 27, 101], "method": [2, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 44, 45, 46, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 110], "suitabl": [2, 88], "composerli": 2, "mean": [2, 8, 9, 53, 54, 74, 79, 86, 94, 101, 103, 107, 108, 116, 127, 129], "domain": 2, "best": [2, 8, 15, 32, 46, 54, 108], "meet": 2, "complement": [2, 19], "tradit": 2, "remain": [2, 17, 73, 103], "question": [2, 8, 27, 63, 103], "continu": [2, 12, 29, 51], "until": [2, 8, 88, 94, 98], "dub": 2, "experi": [2, 13, 103, 105, 130], "mathematica": 2, "matlab": 2, "drive": 2, "befor": [2, 7, 12, 30, 32, 33, 38, 40, 41, 44, 51, 71, 72, 76, 79, 81, 92, 101, 103, 110], "settl": 2, "python": [2, 13, 14, 15, 32, 46, 89, 90, 91, 92, 97, 99, 103, 107, 110, 116, 124, 126, 134, 135, 136, 137], "experienec": 2, "where": [2, 7, 15, 32, 53, 85, 106], "he": 2, "master": [2, 9, 109], "media": [2, 38], "lab": 2, "berri": 2, "verco": 2, "necess": 2, "profession": [2, 13, 103], "engin": 2, "sibeliu": 2, "leland": 2, "smith": 2, "adob": 2, "illustr": [2, 6, 11, 19, 22, 23, 24, 28, 38, 43, 46, 54, 67, 72, 73, 102, 108, 111], "both": [2, 3, 8, 11, 27, 32, 46, 54, 56, 67, 69, 71, 72, 73, 74, 76, 92, 101, 103, 110, 124, 135, 137], "were": [2, 3, 103, 108, 121, 122, 123], "tackl": 2, "problem": [2, 15, 105], "These": [2, 8, 19, 42, 94, 130], "difficulti": 2, "involv": [2, 9, 108], "transcrib": 2, "scale": [2, 12, 18, 54, 55, 56, 63, 77, 79, 91, 101, 111], "highli": [2, 108], "parameter": 2, "gestur": 2, "western": [2, 5], "inflex": 2, "close": [2, 29, 30, 31, 67, 79, 88], "commerci": 2, "packag": [2, 15, 56, 77, 103, 124, 134, 137], "rel": [2, 7, 52, 53, 63, 71, 79, 92, 101], "inabl": [2, 3], "print": [2, 4, 8, 12, 17, 27, 29, 31, 32, 33, 40, 41, 44, 45, 46, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 92, 94, 95, 97, 99, 131, 132], "page": [2, 3, 8, 12, 38, 63, 98, 103, 105, 124, 130, 134, 137], "inde": 2, "idea": [2, 3, 9, 10, 103, 130], "outsid": [2, 51, 56, 90], "rich": 2, "enough": [2, 101], "help": [2, 103, 105, 124, 134, 137], "captur": [2, 9, 29, 38], "long": [2, 12, 44, 82, 101, 103, 107, 110], "rang": [2, 11, 12, 20, 23, 24, 29, 31, 32, 44, 45, 48, 53, 54, 56, 66, 67, 69, 74, 79, 82, 85, 86, 89, 98, 101, 112], "nonloc": 2, "throughout": 2, "joint": 2, "describ": [2, 21, 71, 92, 99], "discuss": [2, 10, 105, 108, 109, 132], "implement": [2, 3, 44, 45, 53, 55, 57, 67, 69, 72, 78, 79, 80, 94, 101, 103, 110, 111, 129], "onlin": 2, "weekend": 2, "review": 2, "respect": [2, 46, 76, 92, 101, 105, 108], "base": [2, 18, 21, 28, 32, 43, 44, 53, 58, 61, 63, 64, 65, 71, 87, 88, 92, 99, 102], "decid": [2, 9, 15], "effort": [2, 33, 103], "singl": [2, 8, 27, 33, 45, 52, 65, 71, 72, 73, 76, 82, 85, 86, 91, 94, 95, 101, 103, 108, 110], "unifi": [2, 8], "project": 2, "That": [2, 99, 103], "strive": [2, 105], "power": [2, 32, 44, 52, 53, 72, 103, 130], "flexibl": 2, "symbol": [2, 3, 33, 51, 58, 65, 69, 77, 124, 130, 134, 137], "pick": [2, 11, 40], "phrase": [2, 3, 9, 63, 76, 110, 130], "fsc": 2, "nod": 2, "xenaki": [2, 23, 66], "who": [2, 19, 107], "far": 2, "ahead": [2, 128], "also": [2, 8, 9, 15, 16, 17, 28, 29, 30, 35, 40, 44, 53, 54, 63, 64, 80, 92, 103, 107, 110, 116, 128], "highlight": 2, "primari": [2, 91, 116], "goal": 2, "bring": 2, "mathemat": 2, "pattern": [2, 3, 12, 20, 23, 27, 28, 43, 63, 74, 101, 102, 103, 108, 116, 130], "recognit": 2, "modular": [2, 101], "increment": [2, 55, 72, 101, 124, 130, 134, 137], "bear": 2, "rest": [3, 5, 8, 9, 11, 12, 14, 17, 18, 19, 22, 23, 24, 25, 26, 28, 36, 40, 43, 44, 47, 49, 51, 52, 63, 64, 67, 71, 72, 73, 85, 101, 103, 111, 124, 126, 130, 134, 137], "collect": [3, 9, 13, 19, 40, 43, 53, 54, 57, 59, 70, 72, 73, 99, 108, 110], "constitut": [3, 8, 17], "graph": [3, 43, 46, 54, 71, 92], "tree": [3, 46, 54, 63, 71, 92, 93, 94, 95, 97, 98, 99, 102], "abov": [3, 8, 12, 19, 29, 33, 44, 49, 54, 57, 67, 72, 82, 94, 98, 99, 101, 107, 111, 130, 132], "14": [3, 11, 12, 23, 26, 30, 32, 44, 46, 49, 52, 53, 54, 66, 69, 74, 75, 79, 101, 104, 113, 114, 131], "three": [3, 9, 11, 17, 19, 23, 27, 54, 57, 66, 67, 69, 70, 71, 72, 76, 94, 101, 103, 108, 113], "themselv": [3, 73], "yet": [3, 72, 88, 94, 108], "anoth": [3, 8, 12, 32, 54, 55, 56, 67, 71, 101, 103, 107], "easi": [3, 5, 103, 125], "see": [3, 8, 12, 17, 27, 32, 46, 54, 67, 72, 79, 101, 103], "declin": 3, "earli": [3, 103], "2000": [3, 95], "lost": 3, "try": [3, 8, 32, 103], "central": [3, 103], "confus": [3, 15, 103], "frequent": [3, 18], "boundari": [3, 30, 35, 54, 103], "solut": 3, "logic": [3, 8, 40, 47, 49, 54, 56, 59, 66, 73, 79, 84, 98, 101, 110], "concept": [3, 5, 8, 9, 19, 129], "rather": [3, 27, 32, 63, 64, 85, 103], "fill": [3, 44, 54, 63, 72, 73, 101], "below": [3, 8, 12, 14, 18, 27, 57, 69, 101, 103, 104, 111, 113, 128, 131], "too": [3, 8, 9, 12, 15, 64, 72, 101, 103, 107, 125, 126, 129, 130], "surprisingli": 3, "small": [3, 8, 9, 53, 63, 69, 101, 103, 130], "extens": [3, 9, 37, 38, 43, 63, 87, 102], "depend": [3, 103, 130], "perform": [3, 38, 46, 72, 84, 103, 108, 130], "locat": [3, 110, 130], "finger": [3, 44, 51, 63, 130], "pedal": [3, 51, 63, 73, 76, 130], "tempor": 3, "spatial": 3, "distinct": [3, 18, 72], "between": [3, 5, 11, 29, 44, 69, 72, 92, 99, 103, 107], "non": [3, 12, 23, 40, 44, 52, 66, 71, 79, 91, 92, 94, 130], "indic": [3, 6, 7, 8, 17, 23, 27, 28, 29, 33, 36, 40, 43, 45, 49, 54, 56, 57, 66, 72, 73, 74, 76, 80, 82, 90, 92, 94, 99, 102, 103, 127], "dure": [3, 13, 63, 79, 98, 108], "start": [3, 8, 9, 12, 19, 27, 29, 30, 35, 40, 49, 51, 53, 54, 57, 59, 64, 67, 71, 72, 73, 74, 77, 79, 81, 82, 88, 92, 94, 101, 103, 110, 111, 116, 124, 125, 135, 137], "stop": [3, 12, 27, 29, 33, 40, 59, 65, 67, 71, 72, 73, 79, 82, 88, 92, 101, 111], "extern": [4, 33, 103], "stylesheet": [4, 33], "just": [4, 12, 15, 27, 32, 69, 73, 74, 130, 131, 132], "same": [4, 8, 12, 14, 19, 27, 33, 36, 46, 54, 55, 56, 64, 66, 67, 69, 72, 73, 78, 79, 81, 90, 92, 98, 99, 103, 108, 110, 112, 131], "output": [4, 9, 28, 29, 33, 40, 44, 46, 51, 52, 55, 57, 60, 63, 64, 65, 68, 71, 72, 76, 98, 99, 101, 103, 106, 107, 108, 114, 116, 132], "sure": [4, 101, 103, 107, 117, 118, 119, 124, 136, 137], "your": [4, 8, 9, 13, 15, 103, 106, 108], "accordingli": 4, "flute_voic": 4, "custom_flute_voic": 4, "extend": [4, 7, 11, 12, 44, 47, 51, 54, 56, 57, 59, 63, 71, 72, 73, 79, 81, 92, 105, 110, 114, 115, 116, 124, 126, 134, 135, 137], "string": [4, 8, 10, 11, 14, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 39, 40, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 80, 81, 82, 92, 101, 102, 103, 110, 111, 113, 114, 116, 122, 123, 124, 125, 127, 130, 131, 132, 135, 137], "assign": [5, 18, 32, 36, 63, 66], "16": [5, 7, 8, 12, 15, 18, 19, 21, 22, 23, 24, 25, 26, 32, 40, 41, 44, 47, 49, 50, 52, 53, 54, 55, 56, 57, 59, 64, 66, 71, 72, 73, 74, 75, 79, 84, 85, 91, 92, 94, 98, 101, 104, 110, 111, 112, 113, 115, 124, 126, 135, 137], "done": [5, 15, 103], "recours": [5, 53], "ti": [5, 40, 47, 49, 52, 53, 54, 55, 56, 63, 64, 73, 76, 84, 98, 101], "5": [5, 11, 12, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 40, 44, 46, 47, 49, 52, 53, 54, 55, 56, 59, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 84, 89, 92, 94, 97, 98, 99, 101, 103, 104, 110, 111, 112, 113, 130], "n": [5, 32, 40, 44, 51, 53, 56, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 76, 78, 110, 113], "j": [5, 66, 107], "denomin": [5, 32, 44, 49, 52, 54, 56, 63, 72, 101, 112], "v": [5, 21, 107], "definit": [5, 30, 35, 63, 72, 94, 95, 97, 99, 110], "posit": [5, 32, 44, 50, 51, 53, 54, 59, 67, 69, 70, 72, 74, 81, 101, 105, 111], "nonneg": [5, 32, 53, 59, 66, 69, 81], "explain": [5, 15, 112, 129], "why": [5, 8, 103], "never": [5, 101, 103], "initi": [6, 18, 24, 28, 31, 32, 33, 40, 44, 53, 56, 67, 69, 70, 71, 72, 75, 101, 103], "violin": [6, 12, 28, 40, 43, 45, 48, 77, 82, 108, 111, 121, 123], "tell": [6, 7, 8, 12, 17, 106], "trebl": [6, 12, 19, 22, 23, 24, 27, 40, 42, 44, 45, 56, 63, 67, 110, 111], "middle_c_sounding_pitch": [6, 40, 45], "pitch_rang": [6, 12, 40, 45, 48, 67], "pitchrang": [6, 12, 28, 40, 43, 45, 67], "range_str": [6, 40, 45, 67], "g3": [6, 40, 45], "g7": [6, 40, 45], "tune": [6, 28, 40, 43, 45], "current": [6, 29, 40, 42, 44, 63, 79, 98, 107], "thick": [6, 12, 51, 67, 72], "spanbar": [6, 19, 22, 23, 24, 25, 26, 51, 63, 67, 111], "treble_staff": [6, 11, 19, 22, 23, 24, 40, 42, 59, 67, 111], "s1": [6, 67, 72, 101, 115], "bass_staff": [6, 11, 12, 19, 23, 24, 40, 42, 59, 67, 111], "g1": [6, 12, 26], "longa": [6, 12], "which": [6, 7, 8, 10, 15, 28, 40, 44, 46, 47, 54, 58, 63, 72, 81, 86, 88, 90, 92, 94, 96, 97, 98, 99, 101, 103, 108, 110], "convention": [6, 108], "viola": [6, 12, 28, 43, 45, 122, 123], "alto": [6, 12, 13, 27, 40, 44, 45, 49, 56, 82], "c3": [6, 11, 12, 45, 67, 69], "c6": [6, 11, 12, 45, 67], "arbitrari": [7, 40, 58, 63, 71, 79, 99], "site": [7, 30, 39, 40, 43, 44, 50, 76, 77, 107], "direct": [7, 11, 12, 21, 26, 27, 32, 33, 37, 38, 40, 42, 43, 44, 49, 51, 52, 55, 56, 57, 58, 69, 72, 73, 76, 101, 110, 112, 113, 114, 132], "fals": [7, 16, 17, 22, 23, 24, 25, 26, 27, 29, 32, 33, 40, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101, 112, 115, 126, 128, 130], "equal": [7, 16, 17, 18, 27, 32, 33, 40, 44, 46, 52, 53, 54, 57, 58, 63, 66, 67, 69, 70, 71, 72, 73, 74, 79, 81, 89, 90, 91, 92, 97, 99, 101, 126], "do": [7, 8, 9, 15, 19, 52, 54, 72, 73, 74, 82, 101, 103, 107, 108, 110, 116, 130], "literal_1": 7, "literal_2": 7, "literal_3": 7, "slurup": 7, "recal": [8, 97], "enter": [8, 15, 29, 72], "wellform": [8, 29, 56, 57, 72, 79, 82], "end": [8, 33, 40, 50, 54, 72, 73, 74, 101, 110], "situat": [8, 15], "aris": [8, 15, 101], "noth": [8, 12, 29, 49, 56, 66, 72, 73, 101], "prevent": [8, 40, 44], "mismatch": 8, "won": [8, 15, 103], "know": [8, 94, 106, 108, 116, 128, 129], "constraint": 8, "fall": [8, 44, 90], "under": [8, 10, 44, 66, 92, 97, 106, 117, 118, 119], "categori": [8, 72], "longer": [8, 12, 30, 35, 57, 66, 72, 108], "whether": [8, 27, 44, 67, 85, 88, 92, 94, 98], "user": [8, 15, 18, 27, 28, 33, 40, 51, 56, 57, 58, 66, 67, 69, 74, 77, 78, 80, 98, 101, 105, 106, 107, 108, 116], "exist": [8, 9, 27, 28, 76, 79, 80, 103], "free": [8, 74, 117, 118, 119], "remaind": [8, 23, 24, 26], "previou": [8, 12, 13, 40, 67, 73], "content": [8, 30, 38, 40, 49, 50, 54, 56, 57, 63, 71, 72, 92, 108, 112, 124, 126, 137], "mothbal": 8, "bind": [8, 28, 33, 43, 102], "understand": [8, 9, 13, 44, 54, 63, 64, 125, 129], "thei": [8, 12, 19, 29, 72, 84, 86, 99, 101, 103, 108], "impact": 8, "explicit": [8, 33, 56, 98], "alwai": [8, 27, 81, 82, 101, 103, 105, 108, 110], "without": [8, 15, 32, 33, 34, 44, 52, 53, 54, 72, 73, 74, 84, 94, 98, 101, 103, 108, 116], "recogn": [8, 63], "though": [8, 116], "determin": [8, 33, 44, 85, 91], "let": [8, 12, 101, 108], "slightli": 8, "short": [8, 12, 44, 73, 101, 108], "written": [8, 26, 48, 52, 53, 54, 68, 72, 73, 101, 103, 108, 111, 121, 122, 123], "unusu": [8, 18], "keep": [8, 29, 79, 98, 103], "explor": 8, "voice_1": [8, 27, 33, 44, 45, 50, 56, 113, 124, 128, 132, 135, 137], "voice_2": [8, 27, 33, 44, 45, 50, 56, 113, 124, 128, 132, 135, 137], "alon": [8, 9, 116], "six": [8, 66, 101, 110], "rais": [8, 27, 30, 31, 32, 33, 35, 40, 53, 56, 57, 59, 63, 65, 66, 67, 69, 72, 73, 74, 77, 78, 79, 80, 98, 101], "except": [8, 12, 27, 28, 32, 33, 40, 43, 53, 56, 57, 66, 67, 74, 78, 79, 80, 94, 101, 102], "refus": 8, "practic": [8, 13, 54, 94, 108, 116], "upshot": 8, "constrain": [8, 40, 44, 54, 103], "ident": [8, 69, 74, 88, 90, 105, 108, 110], "case": [8, 41, 74, 77, 81], "voice_1_not": 8, "voice_2_not": 8, "all_not": 8, "sai": [8, 99], "choos": [8, 44, 53, 72, 86], "unnam": 8, "isn": [8, 9, 32, 108], "defer": 8, "answer": 8, "interpret": [8, 14, 29, 32, 33, 52, 54, 63, 67, 69, 71, 72, 73, 81, 92, 99, 103, 106], "success": [8, 54, 68, 71, 111], "onc": [8, 31, 44, 58, 63, 72, 74, 76, 79, 99, 101, 103, 115], "gotcha": 8, "If": [8, 9, 72, 79, 91, 93, 94, 95, 99, 103, 128, 129], "increasingli": 8, "fanci": 8, "easili": [8, 53], "forget": [8, 19, 20, 21, 67], "lead": [8, 103], "snippet": 8, "ve": [8, 12, 15, 103], "doc": [8, 42, 44, 46, 108, 116, 117, 118, 119, 124, 129, 136, 137], "don": [8, 103], "realli": 8, "seriou": 8, "provid": [8, 13, 15, 28, 72, 86, 91, 94, 101, 103, 116], "everi": [8, 12, 15, 18, 23, 66, 73, 74, 76, 101, 103, 114], "begin": [8, 33, 46, 54, 63, 92, 101, 103, 108], "organ": [9, 54, 110, 123], "stand": [9, 116], "doesn": [9, 27, 44, 54, 103, 130], "manual": [9, 101], "leverag": 9, "pdf": [9, 46, 49, 68, 106, 108, 116], "deriv": [9, 18, 20, 27, 40, 54, 116], "multipl": [9, 32, 44, 53, 54, 67, 78, 79, 94, 101, 103], "cell": [9, 103], "superimpos": 9, "partial": [9, 40, 44, 54, 56, 73, 93, 94, 95, 130], "vertic": [9, 27, 35, 43, 49, 51, 63, 69, 77, 81], "oper": [9, 13, 15, 27, 32, 38, 46, 54, 63, 66, 67, 71, 79, 92, 111, 124, 135, 137], "foreground": 9, "histor": [9, 44, 72], "newli": [9, 69], "conceiv": 9, "disson": 9, "handl": [9, 44, 63, 88, 101], "rule": [9, 60, 63, 64, 65, 99], "20th": [9, 23, 110], "centuri": [9, 23, 110], "map": [9, 28, 49, 63, 74, 79, 89], "statist": 9, "distribut": [9, 79, 108, 117, 118, 119], "natur": [9, 44, 63, 69, 114], "corpu": 9, "read": [9, 27, 28, 29, 32, 33, 40, 41, 44, 45, 46, 49, 51, 52, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 79, 81, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 124, 137], "sourc": [9, 15, 19, 21, 22, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 121, 122, 123], "visual": [9, 19], "accord": [9, 11, 52, 54, 69, 71, 72, 73, 79, 86, 94, 99, 101], "intuit": [9, 101, 116], "outlin": [9, 15], "howev": [9, 98, 103], "five": [9, 44, 66, 103], "inspect": [9, 51, 116], "mutat": [9, 12, 27, 29, 49, 63, 79, 101, 102, 103, 124, 135, 137], "everydai": [9, 16], "procedur": 9, "repeat": [9, 19, 23, 28, 40, 43, 44, 51, 63, 72, 74, 76, 79, 101, 105, 110], "basi": 9, "architect": [9, 103], "broad": 9, "computation": [9, 103], "expens": [9, 103], "section": 9, "overview": [9, 16, 107], "compon": [10, 12, 27, 28, 29, 32, 33, 39, 40, 41, 42, 43, 44, 47, 50, 54, 56, 57, 59, 62, 63, 64, 71, 72, 73, 81, 82, 92, 101, 126], "immedi": [10, 44, 72], "parent": [10, 26, 29, 44, 56, 59, 71, 82, 92], "Or": [10, 15, 121, 127, 130], "root": [10, 54, 59, 71, 92, 99, 114], "resid": [10, 123], "embed": [10, 63, 65], "count": [10, 29, 32, 40, 46, 51, 54, 59, 66, 67, 70, 72, 73, 74, 77, 78, 79, 82, 101, 110, 124, 135, 137], "make_piano_scor": [11, 22, 23, 24, 42, 111], "32": [11, 12, 17, 26, 32, 44, 49, 52, 53, 54, 56, 57, 63, 64, 72, 74, 75, 79, 84, 94, 98, 101, 103, 112, 126, 132], "12": [11, 12, 19, 20, 21, 23, 24, 26, 30, 32, 35, 41, 44, 46, 49, 52, 53, 54, 66, 67, 69, 71, 72, 74, 75, 79, 101, 104, 111, 112, 113], "written_pitch": [11, 12, 16, 21, 24, 26, 29, 44, 72, 111, 113, 114, 124, 135, 137], "els": [11, 12, 15, 19, 20, 24, 25, 26, 27, 51, 54, 66, 110, 112], "rf": [11, 12, 21, 26, 32, 33, 44, 72, 101, 112, 114], "markup": [11, 12, 19, 20, 21, 26, 27, 28, 30, 32, 33, 40, 42, 43, 44, 49, 50, 51, 54, 55, 58, 63, 67, 72, 76, 78, 79, 80, 101, 103, 110, 112, 113, 114, 131], "15": [11, 12, 18, 23, 24, 26, 30, 31, 32, 44, 46, 49, 53, 54, 57, 66, 69, 71, 72, 74, 75, 79, 101, 104, 112, 114], "transpar": [11, 19, 20, 21, 26, 40, 41, 42, 44, 46, 47, 51, 54, 57, 59, 63, 67, 71, 73, 76, 92, 101, 110, 111, 113, 114], "flag": [11, 19, 20, 21, 22, 23, 24, 27, 32, 46, 47, 51, 63, 67, 68, 72, 79, 92, 95, 111], "6": [11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 30, 31, 32, 33, 34, 41, 44, 45, 49, 50, 52, 53, 54, 56, 57, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 93, 94, 99, 101, 103, 104, 110, 112, 113, 117, 118, 119, 124, 126, 129, 130, 132, 135, 136, 137], "56": [11, 23, 53, 79, 95], "r32": [11, 17, 52, 64, 84, 98, 101], "ef": [11, 19, 20, 21, 22, 23, 24, 25, 26, 45, 48, 49, 52, 56, 67, 69, 72, 74, 85, 86, 91, 97, 98, 111, 113, 114, 124, 135, 137], "af": [11, 19, 20, 21, 22, 23, 24, 25, 47, 48, 49, 56, 67, 69, 72, 73, 111, 113, 114, 126], "bf": [11, 19, 20, 21, 22, 23, 24, 25, 42, 45, 47, 48, 49, 67, 69, 72, 73, 111, 113, 114, 115, 124, 135, 137], "c32": [11, 63], "cs32": 11, "d32": [11, 63], "ef32": 11, "9": [11, 12, 19, 20, 21, 23, 24, 26, 30, 32, 44, 49, 53, 54, 56, 59, 64, 66, 67, 69, 71, 72, 73, 74, 75, 77, 79, 81, 92, 101, 103, 110, 112, 113, 115, 129], "e32": [11, 63], "f32": [11, 63], "fs32": 11, "g32": [11, 63], "af32": 11, "a32": [11, 63], "bf32": 11, "b32": [11, 63], "diatonic_pitch": 11, "24": [11, 12, 19, 22, 32, 34, 41, 49, 53, 57, 69, 73, 74, 75, 79, 101, 111], "x": [11, 26, 29, 31, 32, 33, 34, 44, 51, 53, 63, 67, 72, 74, 76, 77, 79], "_get_diatonic_pitch_numb": 11, "13": [11, 16, 23, 26, 30, 32, 44, 49, 52, 53, 54, 66, 67, 69, 72, 74, 75, 79, 94, 99, 101], "quarter": [11, 24, 44, 69, 71, 82, 98, 101], "sharp": [11, 16, 48, 63, 69], "q": [11, 64, 69, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102], "qf": [11, 64], "tq": [11, 64, 69], "tqf": [11, 64, 69], "doubl": [11, 33, 69, 72, 78, 111], "ss": [11, 64, 69], "ff": [11, 12, 33, 48, 63, 64, 69, 114], "tick": [11, 63, 69], "c7": [11, 45, 67], "c5": [11, 52, 67, 69], "c4": [11, 12, 45, 54, 55, 59, 63, 67, 69, 72, 81, 110, 111, 114], "c2": [11, 12, 40, 45], "c1": [11, 12, 26, 45, 67], "enharmon": [11, 76], "equival": [11, 32, 44, 49, 53, 63, 66, 67, 69, 70, 75, 94, 101], "tabl": [11, 12, 46, 60, 63, 64, 65, 71, 110, 124, 137], "eb": [11, 114, 122], "gb": [11, 114], "bb": [11, 44, 69, 114], "arvo": 12, "p\u00e4rt": 12, "cantu": 12, "memori": 12, "benjamin": [12, 113], "britten": [12, 113], "edit": [12, 78, 103, 106, 107], "entir": [12, 44, 79, 103, 108], "descend": [12, 40, 53, 69, 72, 79, 114], "minor": [12, 44, 69], "decor": 12, "dyad": 12, "instrument": [12, 22, 28, 40, 43, 44, 51, 58, 102], "overal": [12, 84], "slower": 12, "higher": [12, 111], "sort": [12, 28, 30, 40, 54, 72, 74, 77, 79, 90, 92, 94, 99], "mensur": [12, 51], "canon": [12, 53], "descent": 12, "third": [12, 14, 27, 69, 98, 101, 103], "per": [12, 44, 54, 72, 94, 101, 103, 132], "make_scalar_desc": 12, "gamut": 12, "violin_1": [12, 77], "a6": [12, 45], "violin_2": 12, "a3": [12, 45, 49, 69], "a5": [12, 45, 50], "e3": [12, 45], "cello": [12, 28, 40, 43, 44, 45, 121, 122, 123], "a2": [12, 45, 49], "voice_name_to_desc": 12, "voice_nam": [12, 101], "item": [12, 19, 23, 26, 27, 28, 31, 34, 40, 42, 44, 47, 50, 51, 53, 54, 57, 63, 66, 67, 70, 71, 72, 73, 74, 79, 85, 91, 92, 93, 94, 96, 101, 110, 126, 131], "index": [12, 14, 20, 31, 32, 40, 57, 59, 66, 67, 69, 70, 71, 72, 73, 74, 76, 79, 81, 89, 90, 91, 92, 94, 97, 101, 107, 110, 111, 126], "start_pitch": [12, 67, 69], "stop_pitch": [12, 67, 69], "revers": [12, 40, 43, 47, 53, 59, 66, 70, 72, 73, 74, 79, 81, 101, 114, 124, 135, 137], "pitch_desc": 12, "tupl": [12, 27, 29, 31, 32, 40, 44, 45, 46, 47, 49, 51, 52, 53, 55, 57, 58, 59, 63, 66, 67, 68, 70, 71, 72, 73, 74, 78, 79, 81, 82, 85, 86, 90, 91, 92, 95, 96, 97, 98, 99, 111, 130], "join": [12, 34, 51, 58, 73, 74, 78, 88, 105, 110, 114, 124, 135, 137], "str": [12, 27, 28, 32, 33, 34, 39, 40, 44, 45, 46, 49, 51, 53, 54, 55, 57, 58, 59, 63, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 92, 99, 110, 113], "dictionari": [12, 28, 40, 54, 63, 94, 99, 110, 114], "lookup": [12, 63, 106], "interv": [12, 23, 28, 36, 43, 44, 49, 56, 67, 69, 79, 111, 114], "given": [12, 44, 54, 72, 79, 86, 92, 93, 94, 97, 99, 101, 111], "nonfin": 12, "treat": [12, 44, 54, 64, 79, 94], "make_pitch_pair_desc": 12, "voice_to_scalar_desc": 12, "pc_to_interv": 12, "updat": [12, 29, 30, 56, 72], "voice_to_pitch_pair_desc": 12, "scalar_desc": 12, "pitch_pair_desc": 12, "pitch_class": [12, 16, 19, 45, 49, 67, 69, 113, 114], "shadow_pitch": 12, "pitch_pair": 12, "final_pitch_pair_desc": 12, "voice_to_desc": 12, "isinst": [12, 32, 57, 72], "been": [12, 33, 72], "twice": [12, 101], "slow": [12, 44, 103], "addition": [12, 46], "make_chord_desc": 12, "enumer": [12, 25, 26, 30, 35, 54, 92, 101, 102, 110, 111, 113, 124, 135, 137], "long_dur": 12, "short_dur": 12, "rest_dur": 12, "multipli": [12, 28, 32, 43, 44, 54, 56, 59, 63, 67, 69, 70, 71, 72, 79, 92, 101, 112], "div": 12, "mod": [12, 74], "initial_rest": 12, "multimeasurerest": [12, 28, 43, 51, 52, 63, 72, 73, 101], "chord_desc": 12, "counter": [12, 51, 54, 79], "assert": [12, 74, 81, 110, 111], "few": [12, 44], "look": [12, 28, 76, 106, 110], "ten": [12, 66], "bold": [12, 44, 54, 58, 63, 103], "flatten": [12, 73, 74, 98, 101], "r2": [12, 44, 101], "r1": [12, 19, 52, 67, 72, 101], "cyclic": [12, 31, 52, 56, 66, 73, 74, 101, 124, 135, 137], "line": [12, 15, 27, 29, 33, 40, 44, 46, 49, 51, 56, 57, 58, 63, 66, 67, 69, 72, 74, 76, 77, 78, 80, 98, 101, 103, 115, 124, 135, 137], "accident": [12, 16, 28, 43, 44, 49, 51, 63, 69, 72, 76], "littl": 12, "bit": [12, 103, 115], "later": [12, 15, 97, 103, 112, 117, 118, 119, 124, 136, 137], "b1": [12, 26, 45], "b2": [12, 115], "a1": [12, 26, 49, 69], "g2": [12, 45, 72, 81, 115], "make_lilypond_fil": 12, "dynamic_command": 12, "markup_command": [12, 49], "rehearsal_mark": 12, "break": [12, 51, 98], "make_empty_scor": [12, 110], "add_bell_mus": 12, "add_string_mus": 12, "attach_contexted_ind": 12, "attach_bow_mark": 12, "handle_dynamic_command": 12, "handle_markup_command": 12, "attach_page_break": 12, "attach_rehearsal_mark": 12, "bell_voic": 12, "bell_staff": 12, "violin_1_voic": 12, "violin_1_staff": 12, "violin_2_voic": 12, "violin_2_staff": 12, "viola_voic": 12, "viola_staff": 12, "cello_voic": 12, "cello_staff": 12, "bass_voic": [12, 40, 59], "strings_staff_group": 12, "laissezvibr": [12, 28, 43, 44, 56], "instrument_voic": 12, "s_voic": 12, "extra_compon": 12, "edit_violin_1": 12, "edit_violin_2": 12, "edit_viola": 12, "edit_cello": 12, "edit_bass": 12, "wrap": [12, 42, 46, 56, 57, 73, 74, 124, 134, 135, 137], "43": [12, 49, 54, 75, 79, 101], "tie": [12, 28, 40, 43, 44, 47, 49, 51, 56, 63, 64, 66, 73, 76, 84, 101, 132], "r4": [12, 33, 40, 42, 44, 47, 48, 52, 56, 64, 71, 72, 73, 76, 85, 98, 101, 111, 126, 132], "written_dur": [12, 29, 72, 73, 74, 101], "tenuto": [12, 66], "e1": [12, 26, 45, 72], "20": [12, 18, 24, 26, 32, 49, 53, 54, 66, 71, 74, 75, 79, 101, 104, 112, 116, 129], "e2": [12, 45], "logical_ti": [12, 40, 44, 47, 56, 73, 101], "replac": [12, 29, 33, 44, 56, 63, 66, 74, 85, 92, 101, 103], "maxima": 12, "metronome_mark": 12, "metronomemark": [12, 28, 36, 43, 44, 49, 51, 63, 73, 84, 91, 93, 94, 95], "112": [12, 26], "120": [12, 26, 44, 53, 98], "campana": 12, "instrumentnam": [12, 21, 28, 43, 44, 51, 58, 63, 113], "hcenter": [12, 63], "camp": 12, "shortinstrumentnam": [12, 28, 43, 44, 51], "vn": [12, 58], "ii": [12, 21, 45, 77], "va": 12, "vc": [12, 44], "contrabass": [12, 28, 43, 45], "cb": 12, "downbow": 12, "upbow": 12, "concat": [12, 44, 63, 76], "musicglyph": [12, 63], "script": [12, 15, 33, 51, 63, 76, 132], "hspace": [12, 33, 44, 55, 63, 76, 113], "65": [12, 79, 101], "76": [12, 79], "87": 12, "measure_index": 12, "leaf_index": 12, "_voic": [12, 112], "measure_indic": 12, "header": [12, 50, 63, 110, 131], "taglin": [12, 63], "titl": [12, 63, 110, 131], "1980": [12, 111], "removeemptystav": 12, "verticalaxisgroup": [12, 21, 51, 63, 112, 113], "distanc": [12, 21, 26, 86, 92, 112, 113], "stretchabl": 12, "staffsymbol": [12, 44, 51, 58, 63, 112], "markformatt": [12, 44], "separ": [12, 51, 77, 103, 106, 108], "slashsepar": 12, "bottom": [12, 51, 73, 81], "margin": [12, 46, 50], "left": [12, 33, 35, 44, 50, 55, 58, 63, 66, 67, 72, 73, 74, 76, 78, 79, 81, 101, 111, 115, 124, 137], "75": [12, 73, 79, 92, 97, 101, 113], "width": 12, "25": [12, 21, 22, 23, 24, 26, 28, 33, 44, 49, 50, 54, 55, 69, 72, 75, 79, 92, 97, 101, 104, 131], "height": [12, 17, 40, 44, 47, 52, 55, 64, 71, 72, 101], "bell": 12, "ppp": [12, 63], "pp": [12, 33, 63, 115], "18": [12, 24, 26, 32, 49, 53, 66, 67, 74, 75, 101, 104, 112], "26": [12, 53, 67, 75, 79], "mp": [12, 33, 63, 115], "34": [12, 26, 75, 79], "mf": [12, 33, 63, 72], "42": [12, 49, 53, 69, 75, 130], "52": [12, 44], "60": [12, 32, 44, 49, 73, 79, 84, 85, 86, 93, 94, 95, 98], "fff": [12, 33, 63], "68": 12, "84": [12, 23, 53, 79], "22": [12, 26, 32, 34, 49, 74, 75, 79, 101], "38": [12, 53, 75, 79], "47": [12, 54, 75, 79, 101], "55": [12, 54, 59, 74], "62": [12, 101], "44": [12, 53, 75], "54": [12, 44, 84, 94], "30": [12, 26, 40, 41, 46, 49, 53, 57, 59, 74, 75, 79, 98], "36": [12, 26, 53, 75, 101, 111], "27": [12, 26, 44, 49, 53, 54, 75, 79, 104, 130], "39": [12, 54, 75], "51": [12, 54, 79, 101], "column": [12, 49, 51, 54, 63, 79, 112], "con": [12, 72, 103], "sord": 12, "sim": 12, "58": [12, 79], "uniti": 12, "59": [12, 32, 54, 79], "63": [12, 21, 54, 79, 101], "66": [12, 44, 79], "67": [12, 44, 46, 79], "74": [12, 79], "sole": 12, "86": [12, 79], "ital": [12, 33, 44, 63, 103], "espr": 12, "88": 12, "molto": 12, "99": [12, 27, 32, 33, 53, 59, 67, 74, 79, 101], "102": [12, 77, 79], "dim": 12, "48": [12, 26, 32, 75, 113], "72": [12, 44, 91], "78": [12, 79, 98], "96": [12, 32, 53, 101], "35": [12, 26, 44, 54, 74, 75, 79, 101], "40": [12, 32, 66, 75, 101, 107, 112], "45": [12, 26, 32, 53, 54, 75], "50": [12, 24, 26, 44, 75, 79, 85], "79": [12, 79, 101], "93": 12, "100": [12, 24, 26, 32, 53, 74, 79], "four": [12, 17, 54, 72, 94, 101, 103, 129], "shown": [12, 33, 44, 49, 72, 101, 107], "tempo": [12, 44, 49, 55, 63, 73, 84, 85, 86, 91, 93, 94, 95, 98], "f1": [12, 26, 67], "f2": [12, 45, 72, 81], "d1": [12, 26, 45], "ex": [12, 19, 20, 21, 34, 115, 130, 132], "memoriam": 12, "palo": 13, "ca": 13, "http": [13, 32, 104, 105, 106, 107, 116, 117, 118, 119, 121, 122, 123, 124, 129, 136, 137], "ccrma": 13, "stanford": 13, "edu": 13, "comp": 13, "2018": [13, 104], "host": [13, 105, 107], "ccmra": 13, "cours": [13, 101, 103], "introduct": [13, 109], "product": [13, 34, 53], "api": [13, 107, 116], "introduc": [13, 56], "real": [13, 32, 43, 63, 108], "world": [13, 29, 108], "activ": [13, 15, 27, 45, 78, 107, 117, 118, 119, 124, 136, 137], "No": [13, 36, 49, 54, 101, 110], "taught": 13, "ground": 13, "sens": [13, 27], "topic": 13, "cover": [13, 101, 117, 118, 119], "instal": [13, 15, 120, 124, 136, 137], "configur": [13, 43, 46, 102], "modul": [13, 27, 28, 30, 33, 35, 41, 46, 55, 56, 57, 66, 67, 69, 74, 77, 78, 80, 98, 101, 103], "tableaux": 13, "precomposit": [13, 116], "manag": [13, 15, 29, 72, 102, 103], "polyphoni": [13, 115, 128], "parametr": 13, "detail": [13, 44, 51, 58, 76, 124, 134, 137], "typographi": 13, "programmat": [13, 116], "jeff": 13, "visit": [13, 105], "websit": 13, "schedul": 13, "annual": 13, "summari": [14, 15, 27, 28, 29, 30, 31, 32, 33, 38, 40, 44, 45, 46, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 104], "r8": [14, 17, 44, 47, 48, 49, 52, 64, 72, 73, 82, 98, 101, 110, 125, 127, 130], "came": 15, "preinstal": 15, "chanc": 15, "sometim": 15, "itself": [15, 53, 54, 72, 79, 103], "pip": [15, 107, 117, 118, 119, 124, 136, 137], "roman": [15, 45, 63, 77], "bundl": [15, 21, 26, 27, 28, 33, 43, 44, 76, 80, 110, 114, 131], "recent": [15, 27, 33, 56, 57, 66, 67, 69, 74, 77, 78, 80, 98, 101, 107], "check": [15, 27, 82, 103, 107], "usual": [15, 72, 94, 101, 125], "hope": 15, "upgrad": 15, "isol": 15, "elsewher": 15, "clean": [15, 84, 124, 135, 137], "sudo": [15, 107], "recommend": [15, 40, 59, 73, 103, 107, 108], "internet": 15, "virtualenv": 15, "almost": [15, 103], "everyth": [15, 103, 116, 131], "virtualenvwrapp": 15, "store": [15, 32, 95, 97, 110], "directori": [15, 27, 28, 29, 46, 106, 107, 108], "workon_hom": 15, "variabl": [15, 63, 65], "export": 15, "mkdir": 15, "sh": [15, 77], "shell": [15, 38, 46], "delet": [15, 28, 29, 57, 72, 79], "mkvirtualenv": 15, "termin": [15, 29, 77, 82, 88, 90, 91], "prompt": 15, "safe": [15, 63, 88, 89, 95, 96, 103], "knowledg": 15, "interfer": 15, "anywher": 15, "exit": [15, 29, 88], "deactiv": [15, 27, 30, 33, 40, 44, 49, 78], "profil": [15, 46, 103], "home": [15, 28, 106], "complet": [16, 19, 23, 63, 101, 116], "properti": [16, 18, 27, 28, 29, 32, 33, 40, 44, 45, 49, 51, 54, 55, 57, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 79, 81, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 116, 126], "test": [16, 27, 40, 44, 46, 54, 93, 103, 120, 126], "compar": [16, 27, 31, 46, 53, 54, 69, 79, 101], "pitch_1": [16, 29, 69], "pitch_2": [16, 29, 69], "df": [16, 24, 48, 49, 52, 56, 62, 63, 69, 111, 114], "less": [16, 17, 32, 35, 52, 53, 67, 69, 72, 73, 74, 79, 101], "convers": [16, 32], "numberedpitch": [16, 19, 24, 26, 28, 43, 47, 49, 67, 69, 74], "numberedpitchclass": [16, 19, 21, 28, 43, 49, 52, 67, 69], "interpr": 17, "curli": 17, "brace": [17, 63], "sequenti": [17, 63, 94, 128], "instead": [17, 44, 52, 72, 108], "asterisk": 17, "denot": [17, 101], "fix": [17, 56, 76, 85], "ratio": [17, 24, 28, 32, 43, 52, 55, 71, 72, 73, 74, 79, 92, 99, 101, 102, 112], "nonreducedfract": [17, 28, 32, 43, 52, 54, 72, 74, 101], "tweak": [17, 21, 26, 28, 33, 40, 41, 42, 43, 44, 47, 49, 52, 54, 55, 56, 57, 58, 59, 64, 71, 72, 73, 76, 81, 101, 102, 110, 112, 114], "edg": [17, 40, 44, 47, 51, 52, 54, 55, 64, 71, 72, 74, 101], "bf8": [17, 52, 115], "last": [17, 27, 33, 44, 56, 57, 66, 67, 69, 72, 73, 74, 77, 78, 79, 80, 85, 98, 101, 110], "color": [17, 33, 40, 42, 44, 46, 49, 51, 54, 58, 59, 63, 72, 73, 76, 78, 80, 112, 113], "red": [17, 27, 29, 40, 42, 44, 47, 49, 58, 59, 72, 73, 76, 78, 80], "revert": [17, 58, 63, 72, 76, 101], "term": [18, 101], "face": 18, "effect": [18, 27, 33, 40, 44, 45, 56, 63, 72, 84, 91, 94], "talk": 18, "c16": [18, 23, 24, 44, 55, 64, 110], "rhythmicstaff": [18, 51, 52, 55, 56, 63, 72, 101, 129], "expect": [18, 44, 52, 101], "warn": [18, 27, 44, 52, 101], "strang": [18, 44, 52, 101], "sixteenth": [18, 32, 44, 73, 101], "whole": [18, 101], "twentieth": 18, "reassign": [18, 72], "thereaft": [18, 77], "unqualifi": 18, "calcul": [18, 53, 69], "govern": [18, 27], "pitchclassseg": [19, 21, 22, 28, 43, 67, 74], "accidentalstyl": [19, 20, 21, 50, 67], "barnumb": [19, 20, 21, 22, 23, 24, 25, 26, 51, 63, 67, 111, 114], "triton": 19, "transposit": [19, 23, 25, 49, 67, 75, 111, 113], "invers": [19, 21, 22, 25, 49, 66, 67, 69, 75, 113], "transpos": [19, 21, 22, 25, 48, 56, 63, 67, 69, 111, 113], "invert": [19, 20, 21, 22, 25, 66, 67, 69, 73, 75, 78, 79, 101, 113, 124, 135, 137], "elliott": 19, "upward": 19, "beautifi": 19, "pitchseg": [19, 25, 28, 43, 52, 67], "insert": [19, 26, 57, 71, 72, 79, 92, 126, 131], "af1": [19, 26], "prefer": [19, 49, 54, 72, 101, 106], "sketch": 19, "treble_pitch": 19, "bass_pitch": 19, "treble_chord": 19, "bass_chord": 19, "transform": [19, 22, 101, 132], "retrograd": [19, 21, 22, 25, 67, 112, 124, 135, 137], "evan": [19, 20, 21, 22, 23, 24, 25, 26, 109, 111, 123], "parallel": [19, 50, 56, 88, 98], "tone": [20, 22, 24, 67], "row": [20, 67, 112], "inversion": [20, 67], "relat": 20, "milton": 20, "babbitt": 20, "1957": 20, "perle_cyclic_set": 20, "starting_pitch": 20, "returned_list": 20, "val": [20, 25], "intersect_sequ": 20, "seq_1": 20, "seq_2": 20, "pattern_1": [20, 66], "pattern_2": [20, 66], "match_1": 20, "matches_index": [20, 66], "match_2": 20, "pop": [20, 57, 71, 72, 79, 92, 126], "elif": 20, "none": [20, 27, 28, 29, 30, 32, 33, 34, 35, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 111, 128], "make_row": [20, 112], "cyclic_interv": 20, "transposed_interv": 20, "hexachord_pattern": 20, "second_hex_transposit": 20, "first_cycl": 20, "second_cycl": 20, "p1": [20, 69, 111], "period": [20, 23, 65, 66, 73, 74, 90, 101], "p2": 20, "intersection_1": 20, "third_cycl": 20, "fourth_cycl": 20, "p3": 20, "p4": [20, 69], "intersection_2": 20, "twelvetonerow": [20, 21, 22, 28, 43, 67, 113], "babbit": 20, "make_rotation_chart": 21, "permut": [21, 34, 67, 74], "label": [21, 28, 43, 44, 46, 54, 63, 69, 71, 73, 92, 101, 102, 112], "source_staff": 21, "staff_group": [21, 26, 44, 49, 72, 81, 110], "hexachord": [21, 67, 75], "instrument_nam": [21, 44, 45, 113], "iii": [21, 45, 115, 132], "iv": 21, "zip": [21, 25, 73, 74, 85, 86, 91, 92, 98, 101, 110, 111], "\u03b1": 21, "\u03b2": 21, "\u03b3": 21, "\u03b4": 21, "1a": [21, 111], "chart": 21, "prime": [21, 22, 53, 54, 67, 75, 101], "1b": [21, 111], "1c": [21, 111], "1d": [21, 111], "ir": 21, "igor": 21, "stravinski": 21, "abraham": 21, "isaac": 21, "1962": 21, "anton": 22, "webern": 22, "concerto": [22, 23], "nine": [22, 123], "op": [22, 32], "illustrate_row": 22, "strict_note_spac": [22, 23, 24, 25, 26, 103], "source_trichord": 22, "webern_sourc": 22, "rotat": [22, 51, 63, 66, 67, 74, 79], "first_part": 22, "second_part": 22, "third_part": 22, "fourth_part": 22, "strict": [22, 23, 24, 25, 26, 74, 103, 111, 113], "nonoctav": 23, "illustrate_scal": 23, "retain_pattern": [23, 74], "block": [23, 26, 28, 29, 38, 43, 50, 63], "jonchai": 23, "underli": [23, 66, 72], "orchestra": [23, 113, 122], "1977": 23, "seri": [23, 24, 51, 53, 54, 71, 94], "consecut": [23, 49, 73, 74, 76, 79, 101], "17": [23, 24, 26, 32, 49, 53, 54, 66, 67, 69, 71, 72, 75, 79, 101, 104, 106], "semiton": [23, 24, 26, 69], "first_half": 23, "r16": [23, 24, 52, 54, 71, 72, 73, 84, 85, 91, 98, 101], "cs16": [23, 110], "second_half": 23, "d16": [23, 44, 64, 110], "e16": [23, 24, 44, 110], "af16": 23, "a16": [23, 24, 44, 115], "joel": 23, "hoffman": 23, "37": [23, 26, 49, 54, 75, 79], "b16": [23, 24, 40, 44, 110], "ef16": 23, "f16": [23, 44, 64, 110], "fs16": [23, 57, 72, 110], "g16": [23, 44, 110, 115], "kaija": 24, "saariaho": 24, "cristal": 24, "tune_to_ratio": [24, 26], "note_head": [24, 26, 42, 72], "quarter_ton": [24, 26], "log_ratio": [24, 26], "log10": [24, 26], "log_2": [24, 26], "1200": [24, 26], "ji_cent": [24, 26], "modf": [24, 26], "ab": [24, 26, 32, 44, 57, 63, 69, 72, 74, 101, 114], "illustrate_parti": 24, "fundament": [24, 26], "ratio_sequ": 24, "with_quarter_ton": 24, "harmon": 24, "approxim": 24, "gqf": 24, "dq": [24, 69], "fq": 24, "dqf": [24, 67], "eqf": 24, "eq": 24, "gq": [24, 91], "aqf": [24, 69], "re": [24, 32, 72, 98, 103, 125, 130], "sonor": 24, "jenni": 25, "mcleod": 25, "illustrate_trichord": [25, 26], "trichord": 25, "triad": [25, 26], "tesselate_seg": 25, "segment": [25, 52, 67, 78, 103, 108, 111, 114], "steer": 25, "bool": [25, 27, 31, 32, 33, 40, 44, 45, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 67, 69, 71, 72, 73, 74, 77, 79, 80, 82, 85, 89, 90, 91, 92, 93, 94, 95, 97, 99, 101], "ipf": 25, "reservoir": 25, "numberedinterv": [25, 28, 43, 49, 69], "altern": [25, 44, 49, 63, 72, 73, 101, 110, 124, 135, 137], "triadic": 26, "catherin": 26, "lamb": 26, "quartet": [26, 122, 123], "helper": 26, "return_cent_markup": 26, "cent_str": 26, "align": [26, 33, 35, 44, 51, 54, 63, 76, 79], "self": [26, 27, 30, 31, 32, 33, 38, 44, 45, 46, 49, 50, 51, 58, 59, 60, 65, 66, 67, 69, 70, 71, 72, 75, 78, 79, 80, 81, 88, 92, 94, 101], "staff_1": [26, 54, 59, 72, 113, 124, 135, 137], "staff_2": [26, 54, 59, 72, 113, 124, 135, 137], "staff_3": [26, 113], "measure_numb": [26, 40, 110], "interfac": [26, 28, 43, 44, 51, 58, 71, 116], "vertical_axis_group": 26, "staff_staff_spacing__minimum_dist": 26, "triadic_sequ": 26, "121": [26, 79], "80": [26, 79, 108], "81": 26, "49": [26, 54, 75, 78, 79, 101], "28": [26, 44, 53, 75, 79, 101], "126": [26, 79], "33": [26, 49, 54, 74, 75, 79, 101], "bf1": [26, 67], "fs1": [26, 67], "wrapper": [27, 28, 33, 40, 43, 44, 56], "annot": [27, 33, 40, 47, 51, 79], "bow_direct": 27, "bow_fract": 27, "target": [27, 94, 95, 96], "check_duplicate_ind": [27, 33], "do_not_test": 27, "synthetic_offset": [27, 33, 40], "tag": [27, 28, 30, 33, 40, 42, 43, 44, 49, 50, 52, 56, 57, 68, 72, 76, 80, 101, 102, 104], "grace": [27, 32, 40, 41, 47, 51, 57, 59, 63, 72, 73, 85, 98, 101, 103], "unknown": 27, "musicvoic": [27, 40, 41, 47, 57, 59, 73, 77], "musicstaff": 27, "hide": [27, 33, 40, 44, 54, 55, 56, 72, 76, 93, 94, 95, 112, 130], "traceback": [27, 29, 33, 56, 57, 66, 67, 69, 74, 77, 78, 80, 98, 101], "stdin": [27, 33, 56, 57, 66, 67, 69, 74, 77, 78, 80, 98, 101], "py": [27, 33, 46, 56, 57, 66, 67, 69, 74, 77, 78, 80, 98, 101, 103, 107], "975": [27, 33], "wrapper_": [27, 33], "125": [27, 33, 79], "__init__": [27, 33, 46, 78, 80], "_bind_compon": [27, 33], "322": [27, 33], "_warn_duplicate_ind": [27, 33], "458": [27, 33], "_except": [27, 33], "persistentindicatorerror": [27, 28, 33, 36, 43], "messag": [27, 29, 33, 57, 66, 69, 74, 78, 80, 98, 101], "alreadi": [27, 32, 33, 36, 54, 103], "inact": 27, "tenor": [27, 40, 44, 45], "compet": 27, "lone": [27, 49, 73], "inactiv": 27, "917": 27, "detach": [27, 57, 72, 76, 101, 130], "by_id": 27, "exact": [27, 35, 44, 65, 73, 74], "motiv": [27, 108], "specifi": [27, 44, 54, 58, 64, 74, 98, 99, 101, 102, 108, 111], "markup_1": [27, 44], "tutti": 27, "markup_2": [27, 44], "markup_3": 27, "difer": 27, "parts_violin_1": 27, "parts_violin_2": 27, "id": [27, 51, 63, 82, 97], "give": [27, 32, 44, 78], "regress": [27, 32, 33, 40, 42, 44, 47, 50, 56, 59, 67, 69, 72, 73, 74, 82, 101], "correctli": [27, 32, 33, 40, 41, 44, 72, 82], "zero": [27, 29, 32, 46, 53, 56, 63, 66, 67, 74, 76, 79, 81, 101, 103], "duplic": [27, 33, 34, 40, 44, 56, 74, 78, 80, 82, 110], "voicei": 27, "voiceii": 27, "attempt": [27, 66, 72, 84], "__copy__": [27, 32, 44, 57, 69, 72, 92], "copi": [27, 32, 33, 44, 49, 56, 57, 66, 67, 69, 72, 79, 92, 103, 117, 118, 119], "preserv": [27, 32, 42, 56, 72, 73, 101], "old_staff": 27, "new_staff": [27, 56], "m1": [27, 44], "overridden": [27, 29, 30, 31, 32, 33, 38, 40, 44, 45, 46, 49, 50, 51, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101], "__eq__": [27, 30, 31, 32, 33, 44, 45, 49, 50, 53, 54, 55, 58, 63, 65, 66, 67, 69, 70, 72, 73, 75, 78, 79, 80, 81, 89, 90, 91, 92, 97, 99, 101], "__hash__": [27, 31, 32, 33, 44, 45, 49, 53, 54, 55, 58, 63, 66, 67, 69, 70, 72, 73, 75, 78, 79, 80, 81, 89, 90, 91, 92, 97, 99, 101], "hash": [27, 31, 32, 33, 44, 45, 49, 53, 54, 55, 58, 63, 65, 66, 67, 69, 70, 72, 73, 75, 78, 79, 80, 81, 89, 90, 91, 92, 97, 99, 101], "__repr__": [27, 29, 30, 31, 32, 33, 44, 45, 49, 50, 51, 53, 54, 55, 57, 58, 59, 63, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 88, 89, 90, 92, 93, 94, 95, 97, 99, 101], "repr": [27, 29, 30, 31, 32, 33, 40, 41, 44, 45, 49, 50, 51, 53, 54, 55, 57, 58, 59, 63, 65, 66, 67, 69, 70, 72, 75, 78, 79, 80, 88, 89, 90, 92, 93, 94, 95, 97, 101, 111], "get_item": [27, 44], "unbundle_ind": 27, "unbundl": 27, "foo": [27, 46, 50, 53, 63, 77, 78, 79, 91], "uniontyp": [27, 44, 72], "enum": [27, 30, 43, 73, 102], "option": [27, 38, 40, 44, 46, 51, 54, 55, 57, 59, 67, 72, 73, 77, 78, 79, 80, 85, 89, 90, 91, 92, 93, 95, 98, 111], "leaked_start_offset": 27, "leak": [27, 30, 33, 40, 44, 72, 82], "either": [27, 67, 77, 88, 94, 99, 121, 128], "synthet": [27, 40], "doe": [27, 28, 29, 31, 44, 56, 57, 63, 72, 74, 76, 77, 79, 82, 85, 101, 116], "NOT": [27, 63, 66], "span": [27, 51, 76, 82], "start_text_span": [27, 40, 44, 76, 82], "starttextspan": [27, 28, 40, 43, 44, 76, 82], "stop_text_span": [27, 40, 44, 76, 82], "stoptextspan": [27, 28, 40, 43, 44, 76, 82], "start_offset": [27, 71, 79, 92], "list_all_class": 28, "ignored_class": 28, "public": [28, 117, 118, 119], "path": [28, 29, 46, 60, 63, 64, 65, 68, 71, 106, 107], "class_": [28, 32, 45, 51, 63, 67, 69], "contextmanag": [28, 43, 102], "filesystemst": [28, 29, 43], "forbidupd": [28, 29, 43], "nullcontextmanag": [28, 29, 43], "progressind": [28, 29, 43], "redirectedstream": [28, 29, 43], "temporarydirectori": [28, 29, 43], "temporarydirectorychang": [28, 29, 43], "timer": [28, 29, 43], "contribut": [28, 38, 43, 44, 72, 102, 105], "contributionsbysit": [28, 30, 43], "cyclictupl": [28, 43, 101, 102], "assignabilityerror": [28, 32, 36, 43], "imprecisemetronomemarkerror": [28, 36, 43], "lilypondparsererror": [28, 36, 43], "missingmetronomemarkerror": [28, 36, 43], "parentageerror": [28, 36, 43], "schemeparserfinishederror": [28, 36, 43, 65], "unboundedtimeintervalerror": [28, 36, 43], "wellformednesserror": [28, 36, 43], "lineag": [28, 40, 43], "arpeggio": [28, 43, 44, 51, 63, 73], "beamcount": [28, 43, 44], "bendaft": [28, 43, 44, 51, 63, 76], "breathmark": [28, 43, 44], "colorfing": [28, 43, 44], "fermata": [28, 43, 44, 63, 128], "keyclust": [28, 43, 44], "ottava": [28, 43, 44, 51, 73, 76], "rehearsalmark": [28, 43, 44, 51, 58, 63], "repeatti": [28, 40, 43, 44, 51, 63, 76, 101], "staffchang": [28, 43, 44], "startbeam": [28, 40, 43, 44, 82], "startgroup": [28, 43, 44, 49, 76], "starthairpin": [28, 33, 43, 44, 56, 76, 82], "startphrasingslur": [28, 43, 44], "startpianoped": [28, 43, 44], "startslur": [28, 40, 43, 44, 57, 72, 124, 135, 137], "starttrillspan": [28, 43, 44, 63, 76], "stemtremolo": [28, 43, 44, 51, 63, 72], "stopbeam": [28, 40, 43, 44, 82], "stopgroup": [28, 43, 44, 49, 76], "stophairpin": [28, 43, 44, 82], "stopphrasingslur": [28, 43, 44], "stoppianoped": [28, 43, 44], "stopslur": [28, 40, 43, 44, 124, 135, 137], "stoptrillspan": [28, 43, 44, 63, 76], "accordion": [28, 43, 45, 121, 122], "altoflut": [28, 43, 45], "altosaxophon": [28, 43, 45], "altotrombon": [28, 43, 45], "altovoic": [28, 43, 45], "baritonesaxophon": [28, 43, 45], "baritonevoic": [28, 43, 45], "bassclarinet": [28, 43, 45], "bassflut": [28, 43, 45], "basssaxophon": [28, 43, 45], "basstrombon": [28, 43, 45], "bassvoic": [28, 43, 45], "bassoon": [28, 43, 45], "clarinetina": [28, 43, 45], "clarinetinbflat": [28, 43, 45, 48], "clarinetineflat": [28, 43, 45], "contrabassclarinet": [28, 43, 45], "contrabassflut": [28, 43, 45], "contrabasssaxophon": [28, 43, 45], "contrabassoon": [28, 43, 45], "englishhorn": [28, 43, 45], "flute": [28, 43, 45, 121, 122, 123], "frenchhorn": [28, 43, 45], "glockenspiel": [28, 40, 43, 45], "guitar": [28, 43, 45, 122, 123], "harp": [28, 43, 44, 45, 63, 122], "harpsichord": [28, 43, 45], "marimba": [28, 43, 45], "mezzosopranovoic": [28, 43, 45], "obo": [28, 43, 45, 122], "percuss": [28, 43, 44, 45, 82, 121, 122], "piccolo": [28, 40, 43, 45, 121], "sopraninosaxophon": [28, 43, 45], "sopranosaxophon": [28, 43, 45], "sopranovoic": [28, 43, 45], "stringnumb": [28, 43, 45, 51, 63], "tenorsaxophon": [28, 43, 45], "tenortrombon": [28, 43, 45], "tenorvoic": [28, 43, 45], "trumpet": [28, 43, 45, 122], "tuba": [28, 43, 45], "vibraphon": [28, 43, 45], "xylophon": [28, 43, 45], "io": [28, 29, 38, 43, 102, 107], "abjadgraph": [28, 43, 46], "lilypondio": [28, 43, 46], "player": [28, 43, 46, 106, 122, 123], "colormap": [28, 43, 49], "lyproxi": [28, 43, 102], "lilypondcontext": [28, 43, 51, 72], "lilypondengrav": [28, 43, 51], "lilypondgrob": [28, 43, 51], "lilypondgrobinterfac": [28, 43, 51], "infin": [28, 43, 53, 79], "negativeinfin": [28, 33, 43, 53, 79], "meter": [28, 43, 44, 63, 93, 101, 102, 103], "metricaccentkernel": [28, 43, 54], "metricmodul": [28, 43, 102], "obgc": [28, 43, 72, 102], "onbeatgracecontain": [28, 40, 41, 43, 47, 57, 59, 72, 73], "lilypondoverrid": [28, 43, 58], "lilypondset": [28, 43, 58], "overrideinterfac": [28, 43, 58], "settinginterfac": [28, 43, 58], "parentag": [28, 36, 40, 43, 71, 92, 102], "parser": [28, 37, 38, 43, 46, 54, 60, 62, 64, 65, 71, 72, 102], "contextspeccedmus": [28, 43, 61, 63], "guileproxi": [28, 43, 61, 63], "lilyponddur": [28, 43, 61, 63], "lilypondev": [28, 43, 61, 63], "lilypondfract": [28, 43, 61, 63], "lilypondgrammargener": [28, 43, 61, 63], "lilypondlexicaldefinit": [28, 43, 61, 63], "lilypondpars": [28, 43, 60, 61, 63, 65], "lilypondsyntacticaldefinit": [28, 43, 61, 63], "markupcommand": [28, 43, 61, 63], "sequentialmus": [28, 43, 61, 63], "simultaneousmus": [28, 43, 61, 63], "syntaxnod": [28, 43, 61, 63], "reduc": [28, 32, 43, 46, 52, 54, 60, 61, 69, 72, 101, 102], "reducedlypars": [28, 43, 60, 61, 64], "scheme": [28, 43, 44, 60, 61, 63, 102], "schemepars": [28, 36, 43, 60, 61, 65], "patterntupl": [28, 43, 66], "pcollect": [28, 43, 49, 102], "pitchclassset": [28, 43, 67, 75], "pitchset": [28, 43, 47, 67, 74], "intervalclass": [28, 43, 69], "namedintervalclass": [28, 43, 49, 69], "namedinversionequivalentintervalclass": [28, 43, 69], "numberedintervalclass": [28, 43, 49, 69], "numberedinversionequivalentintervalclass": [28, 43, 49, 69], "pitchclass": [28, 43, 69], "staffposit": [28, 43, 44, 69], "nonreducedratio": [28, 43, 52, 70], "rhythmtre": [28, 43, 46, 54, 60, 61, 83, 87, 92, 102], "rhythmtreecontain": [28, 43, 54, 71, 83, 87, 92], "rhythmtreeleaf": [28, 43, 71, 92], "rhythmtreemixin": [28, 43, 71, 83, 87, 92], "rhythmtreepars": [28, 43, 46, 54, 60, 61, 71, 92], "aftergracecontain": [28, 40, 41, 43, 47, 59, 72, 73, 85, 101], "beforegracecontain": [28, 40, 41, 43, 47, 59, 72, 73, 85, 101], "cluster": [28, 43, 44, 51, 72], "drumnotehead": [28, 43, 72], "notehead": [28, 43, 44, 49, 51, 58, 59, 63, 72, 76], "noteheadlist": [28, 43, 72], "skip": [28, 43, 51, 52, 63, 72, 76, 78, 101], "tremolocontain": [28, 40, 43, 72, 101], "logicalti": [28, 40, 43, 44, 47, 73], "setclass": [28, 43, 49, 102], "offsetcount": [28, 43, 54, 79], "timespanlist": [28, 43, 79], "verticalmo": [28, 43, 102], "list_all_funct": 28, "__name__": [28, 45], "yield_all_modul": 28, "yield": [28, 34, 47, 53, 54, 57, 72, 91], "encount": [28, 58], "behavior": [28, 52, 54, 72, 85, 98], "instanti": [28, 91, 94, 97], "cfg": [28, 106], "pars": [28, 36, 44, 46, 60, 63, 64, 65, 71, 130], "pair": [28, 32, 34, 40, 44, 46, 49, 53, 54, 55, 56, 58, 69, 71, 72, 73, 74, 76, 78, 79, 81, 85, 91, 92, 93, 94, 95, 101, 110, 111, 130], "fail": [28, 72], "valid": [28, 97], "disk": 28, "support": [28, 40, 59, 63, 69, 71, 73, 98], "mutabl": 28, "__delitem__": [28, 57, 71, 72, 79, 92], "__getitem__": [28, 30, 31, 35, 40, 49, 50, 57, 59, 63, 67, 70, 71, 72, 73, 79, 91, 92, 94, 101], "slice": [28, 31, 57, 63, 67, 70, 72, 91, 94, 101, 126], "identifi": [28, 31, 50, 57, 63, 65, 67, 70, 72, 88, 91, 94, 101], "__iter__": [28, 30, 31, 35, 40, 54, 57, 59, 67, 70, 71, 72, 73, 79, 91, 92, 101], "__setitem__": [28, 57, 71, 72, 79, 92], "keyword": [28, 32, 38, 42, 46, 52, 54, 63, 68, 71, 74, 77, 92, 94, 98], "get_lilypond_version_str": 28, "abjad_directori": 28, "abjad_output_directori": [28, 106], "boilerplate_directori": 28, "boilerpl": 28, "configuration_directori": 28, "posixpath": 28, "directory_nam": 28, "cach": [28, 65], "filesystem": [28, 29, 103], "interact": 28, "configuration_file_path": 28, "home_directori": 28, "lilypond_log_file_path": [28, 46], "log": [28, 46, 103, 112], "abstract": [29, 60, 63, 69, 71, 84, 85, 86, 88, 90, 93, 94, 95, 96, 99, 102], "state": [29, 33, 38, 93, 101], "__enter__": 29, "asset": [29, 108], "__exit__": 29, "exg_typ": 29, "exc_valu": 29, "trackeback": 29, "restor": [29, 72], "filesytem": 29, "backup": [29, 63], "update_on_ent": 29, "update_on_exit": 29, "forbid": [29, 101], "m3": [29, 56, 69], "wf": [29, 56, 57, 72, 102], "exc_typ": 29, "total": [29, 49, 66, 71, 82, 92, 101], "verbos": [29, 63], "is_warn": 29, "progress": 29, "represent": [29, 32, 63, 64, 67, 69, 70, 71, 72, 73, 75, 81, 92, 99, 109, 124, 134, 137], "context_manag": 29, "advanc": [29, 66, 101], "overwrit": [29, 80], "goe": 29, "statu": [29, 57, 72, 105], "stdout": [29, 46], "stderr": [29, 46], "stringio": 29, "string_io": 29, "hello": [29, 63], "getvalu": 29, "redirect": [29, 46], "stream": 29, "parent_directori": 29, "temporari": 29, "temporary_directori": 29, "temporarili": [29, 72], "original_directori": 29, "entranc": 29, "exit_messag": 29, "enter_messag": 29, "print_continuously_from_background": 29, "1000000": [29, 32], "elapsed_tim": 29, "026749849319458008": 29, "access": 29, "within": [29, 41, 48, 79, 84, 92, 99, 101], "026730060577392578": 29, "05358576774597168": 29, "08032488822937012": 29, "10706686973571777": 29, "13380098342895508": 29, "reset": 29, "clock": [29, 32, 49], "elaps": [29, 68], "background": [29, 106], "start_tim": 29, "stop_tim": 29, "total_time_messag": 29, "truncat": [29, 73, 74], "nearest": [29, 32, 92, 103], "absolute_aft": [30, 44], "factori": [30, 50, 58], "absolute_befor": [30, 40, 44], "context_set": [30, 58], "grob_overrid": 30, "grob_revert": 30, "freeze_overrid": 30, "get_contribution_list": 30, "tag_contribut": 30, "static": [30, 32, 33, 38, 44, 51, 54, 63, 66, 67, 69, 72, 75, 91], "alphabet": [30, 44], "qualnam": [30, 35], "classmethod": [30, 32, 35, 38, 40, 44, 51, 59, 63, 66, 69, 70, 73, 91], "enumtyp": [30, 35], "__contains__": [30, 31, 35, 40, 50, 57, 59, 67, 70, 71, 72, 73, 79, 91, 92, 101], "member": [30, 35, 53, 105], "typeerror": [30, 35, 98], "__len__": [30, 31, 35, 40, 57, 59, 63, 66, 67, 70, 71, 72, 73, 79, 81, 91, 92, 101], "alias": [30, 32, 35], "close_bracket": 30, "open_bracket": 30, "pitched_tril": 30, "spanner_start": 30, "spanner_stop": 30, "start_beam": [30, 40, 44, 76], "stem_tremolo": [30, 44], "stop_beam": [30, 40, 44, 76], "trill_spanner_start": 30, "tuple_": [31, 53], "abcd": 31, "built": [31, 32, 38, 46, 53, 77, 116], "behav": [31, 65], "exactli": [31, 32, 56, 67, 73, 74, 79, 103], "error": [31, 32, 33, 36, 40, 53, 63, 69, 72, 74, 77, 88], "infinit": [31, 53, 67, 74, 79], "__post_init__": [31, 33, 44, 45, 49, 50, 58, 66, 67, 69, 70, 75, 78, 79, 80, 101], "ration": [32, 43, 44, 53, 81, 90], "singleton": [32, 53], "intial": [32, 72], "solidu": 32, "nonreduc": [32, 52, 54, 70, 74], "inherit": [32, 58], "__abs__": [32, 69], "absolut": [32, 44, 53, 66, 69, 70, 103], "__add__": [32, 67, 69, 71, 72, 79, 92], "duration_1": 32, "duration_2": 32, "nonreduced_fract": 32, "__bool__": 32, "__ceil__": 32, "__complex__": 32, "__deepcopy__": 32, "memo": 32, "__div__": 32, "divid": [32, 54, 70, 71, 72, 79, 92, 94, 99, 101], "__divmod__": 32, "__float__": [32, 53, 69], "cast": 32, "side": [32, 51, 110], "huge": [32, 63], "convert": [32, 53, 54, 71], "overflow": 32, "__floor__": 32, "floor": 32, "__floordiv__": 32, "__ge__": [32, 44, 45, 53, 58, 67, 69, 72, 78, 79, 80, 101], "__gt__": [32, 44, 45, 53, 58, 67, 69, 72, 78, 79, 80, 101], "__int__": [32, 69], "_index": 32, "__le__": [32, 44, 45, 53, 58, 67, 69, 72, 78, 79, 80, 101], "__lt__": [32, 44, 45, 53, 58, 67, 69, 72, 78, 79, 80, 90, 101], "__mod__": 32, "modulu": [32, 101, 124, 135, 137], "appli": [32, 66, 72, 76, 79, 85, 94, 101, 103, 110], "__mul__": [32, 67, 69, 72, 79], "__ne__": [32, 67, 72, 79], "redefin": [32, 81, 89, 90, 91, 92, 97, 99], "explicitli": [32, 69, 72, 89, 90, 91, 92, 97, 99, 130], "superclass": 32, "builtin": [32, 46, 110], "bug": [32, 72], "org": [32, 106, 116, 117, 118, 119, 124, 129, 136, 137], "issue4395": 32, "msg89533": 32, "offset_1": 32, "offset_2": 32, "displac": [32, 40, 41], "__neg__": [32, 69], "negat": [32, 66, 69], "__new__": [32, 51, 67, 72, 79], "__pos__": 32, "__pow__": 32, "__radd__": [32, 69, 71, 92], "__rdiv__": [32, 70], "__rdivmod__": 32, "__rfloordiv__": 32, "__rmod__": 32, "__rmul__": [32, 67, 69, 72, 79], "__round__": 32, "ndigit": 32, "toward": [32, 103], "__rpow__": 32, "__rsub__": [32, 67], "subtract": [32, 53, 69, 79], "__rtruediv__": [32, 70], "__str__": [32, 67, 69, 70, 75], "__sub__": [32, 53, 67, 69, 79], "__truediv__": 32, "__trunc__": 32, "trunc": 32, "as_integer_ratio": 32, "whose": [32, 53, 54, 92, 99], "conjug": 32, "limit_denomin": 32, "max_denomin": 32, "closest": [32, 92], "141592653589793": 32, "311": 32, "4321": 32, "8765": 32, "10000": [32, 53, 91], "to_clock_str": 32, "117": [32, 79, 101], "clock_str": 32, "57": [32, 54, 98, 101, 113], "durations_to_nonreduced_fract": 32, "least": [32, 52, 53, 54, 66, 72, 76, 103], "from_clock_str": 32, "00": [32, 49, 106], "77": 32, "from_decim": 32, "dec": 32, "finit": 32, "decim": [32, 44, 65, 93, 94, 95], "instanc": [32, 46, 53, 59, 60, 63, 64, 65, 71, 72, 85, 88, 92, 94, 95, 96, 98, 99], "from_float": 32, "bewar": 32, "from_lilypond_duration_str": 32, "lilypond_duration_str": 32, "is_token": 32, "token": [32, 60, 63, 64, 65, 71, 85], "dot_count": 32, "equal_or_greater_assign": 32, "equal_or_greater_power_of_two": 32, "equal_or_lesser_assign": 32, "equal_or_lesser_power_of_two": 32, "expon": [32, 112], "flag_count": 32, "64": [32, 52, 84, 101, 121], "sixty_fourth": 32, "imag": [32, 37, 38, 43, 46, 131], "imaginari": 32, "implied_prol": [32, 44, 72], "prolat": [32, 44, 59, 71, 72, 92, 101], "is_assign": 32, "is_dyadic_r": [32, 44], "ha": [32, 33, 36, 40, 44, 59, 74, 79, 88, 103], "prolation_str": 32, "reciproc": [32, 70], "normal": [32, 33, 44, 51, 54, 63, 67, 72, 76, 77], "mutlipli": [32, 56], "from_dot_count": 32, "fraction_1": 32, "fraction_2": 32, "deep": 32, "deepcopi": 32, "coerc": [32, 54, 69, 72, 79], "subclass": [32, 71, 85, 94], "preserve_numer": 32, "multiply_with_cross_cancel": 32, "cancel": [32, 51], "multiply_without_reduc": 32, "with_multiple_of_denomin": 32, "With": [32, 33, 34, 44, 54, 55, 59, 66, 71, 73, 76, 84, 101, 108], "nonzero": [32, 52], "taken": [32, 66, 101], "neither": [32, 72, 74], "nor": [32, 72, 74], "neg": [32, 52, 53, 59, 64, 66, 67, 70, 73, 74, 79, 94, 101], "format_hairpin_stop": [33, 72], "name_is_textu": [33, 72], "ordin": [33, 72, 77], "dynamic_1": 33, "dynamic_2": 33, "nient": [33, 44, 76, 122], "dynamiclinespann": [33, 44, 51, 56, 63, 76], "nondynam": 33, "704": 33, "blue": [33, 40, 42, 44, 47, 49, 58, 59, 72, 73, 76, 80, 112, 113], "sub_f": 33, "nonstandard": 33, "somewher": 33, "unset": [33, 44, 47, 58, 63, 101, 106], "whiteout": [33, 51, 63, 76], "y": [33, 34, 51, 66, 67, 72, 76, 77, 79, 92], "overriden": 33, "start_dynam": [33, 76], "start_hairpin": [33, 44, 76, 82], "stop_dynam": [33, 76], "staff_pad": [33, 44, 49, 55, 56, 73, 76, 101, 124, 135, 137], "nonleak": 33, "postev": [33, 44], "surviv": [33, 56, 72], "textual": [33, 44], "appena": 33, "udibil": 33, "dynamictext": [33, 51, 63], "x_extent": [33, 76], "self_alignment_x": 33, "appena_udibil": 33, "meant": [33, 103, 116], "dataclass": [33, 44, 66], "barely_aud": 33, "bare": [33, 64], "audibl": 33, "extremely_loud": 33, "extrem": [33, 103], "loud": 33, "dynamic_3": 33, "composite_dynamic_name_to_steady_state_dynamic_nam": 33, "steadi": 33, "sfp": [33, 63, 132], "rfz": [33, 63], "dynamic_name_to_dynamic_ordin": 33, "dynamic_ordinal_to_dynamic_nam": 33, "dynamic_ordin": 33, "pppp": [33, 63], "negative_infin": 33, "is_dynamic_nam": 33, "sfz": [33, 63], "quot": [33, 65], "enclos": [33, 51, 124, 135, 137], "sf": [33, 63], "sforzando": 33, "z": [33, 66, 77], "sffz": 33, "outer_product": 34, "outer": [34, 71, 92, 101, 112], "yield_combin": 34, "minimum_length": 34, "maximum_length": 34, "te": 34, "tx": 34, "tex": 34, "tt": 34, "tet": 34, "xt": 34, "txt": 34, "ext": [34, 38, 43, 98, 101, 102], "binari": [34, 53], "yield_pair": 34, "yield_partit": 34, "yield_permut": 34, "yield_set_partit": 34, "set_partit": 34, "23": [34, 46, 49, 53, 54, 66, 74, 75, 79, 101, 104, 117, 118, 119, 124, 136, 137], "restrict": [34, 46], "growth": 34, "yield_subsequ": 34, "subsequ": [34, 71, 74, 92, 101], "comparison": [35, 43, 46, 54, 67, 74], "horizont": [35, 43, 51, 73, 79, 108], "middl": [35, 44, 64, 69, 101], "baseexcept": [36, 43], "imprecis": [36, 44, 91], "metronom": [36, 44, 51, 84], "persist": [36, 45, 82, 94, 98, 102, 103], "finish": [36, 107], "bound": [36, 44, 58, 76], "sphinx": [37, 43, 102], "hiddendoctestdirect": [37, 38, 43], "lilypondextens": [37, 38, 43], "shelldirect": [37, 38, 43], "thumbnaildirect": [37, 38, 43], "thumbnail_block": [37, 38, 43], "docutil": [37, 38, 43], "node": [37, 38, 43, 46, 54, 63, 71, 92, 99], "bodi": [37, 38, 43], "inlin": [37, 38, 43, 51], "rst": [37, 38, 43], "uqbar": [37, 38, 43, 46, 71, 83, 87, 92], "subpackag": [37, 43, 61, 83, 87, 100], "lineno": [38, 46], "content_offset": 38, "block_text": 38, "state_machin": 38, "hidden": [38, 73], "doctest": [38, 63, 103], "execut": [38, 46, 106], "kind": [38, 44], "no_trim": 38, "with_column": 38, "to_docutil": 38, "add_opt": 38, "depart_block_text": 38, "setup_consol": 38, "consol": 38, "monkeypatch": 38, "task": 38, "suit": 38, "setup_sphinx": 38, "app": 38, "regist": [38, 51, 63], "visitor": 38, "teardown_consol": 38, "teardown": 38, "visit_block_html": 38, "visit_block_latex": 38, "visit_block_text": 38, "repres": [38, 40, 59, 70, 73, 86, 90, 92, 93, 95, 96, 110], "session": 38, "literal_block": 38, "thumbnail": 38, "rawsourc": 38, "children": [38, 56, 57, 71, 72, 92], "embed_imag": 38, "output_directori": [38, 46], "render_prefix": [38, 46], "source_path": 38, "install_lightbox_static_fil": 38, "on_builder_init": 38, "on_html_collect_pag": 38, "visit_thumbnail_block_html": 38, "visit_thumbnail_block_latex": 38, "format_compon": 39, "remove_site_com": 39, "comment": [39, 44, 57, 72], "abc": [40, 43, 57, 59, 70, 72, 73, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 99], "treble_voic": [40, 59], "__class_getitem__": [40, 59, 67, 70, 72, 73, 79], "pep": [40, 59, 67, 70, 72, 73, 79], "585": [40, 59, 67, 70, 72, 73, 79], "__origin__": [40, 59, 70, 73], "__args__": [40, 59, 70, 73], "__reversed__": [40, 59, 70, 72, 73, 79], "occurr": [40, 72, 73, 79], "valueerror": [40, 59, 72, 73, 74, 79], "after_grace_contain": [40, 72, 101], "music_voic": [40, 41, 47, 57, 59, 73, 101, 103, 129], "on_beat_grace_contain": [40, 41, 47, 57, 59, 73, 101], "ili": [40, 41, 44, 47, 49, 50, 55, 57, 59, 73, 76, 101, 108], "fontsiz": [40, 41, 47, 51, 54, 57, 59, 63, 73, 79, 101], "slash": [40, 41, 47, 57, 59, 63, 72, 73, 101], "font": [40, 41, 47, 51, 55, 57, 59, 72, 73, 80, 101, 103], "onevoic": [40, 41, 47, 57, 59, 63, 73, 101], "aftergrac": [40, 41, 47, 59, 72, 73, 85, 101], "unwrap": [40, 44], "default_instru": 40, "g5": [40, 45], "prototyp": [40, 44, 47, 49, 56, 59, 71, 73, 92, 101], "annotation_wrapp": 40, "default_clef": [40, 78], "bar_line_cross": 40, "before_grace_contain": [40, 101], "component_": [40, 59], "regresss": 40, "tremolo": [40, 44, 51, 72, 101], "in_second": [40, 49, 73], "preprol": [40, 54, 71, 92], "lt": [40, 47, 73], "scan": 40, "forward": [40, 72], "backward": 40, "yellow": [40, 78], "versu": [40, 72], "concat_hspace_left": [40, 44], "concat_hspace_right": [40, 44], "left_broken_text": [40, 44], "left_text": [40, 44, 76], "right_pad": [40, 44], "right_text": [40, 44, 76], "paramet": [40, 63, 94, 111], "text_spann": [40, 76, 82], "abbrevi": [40, 44], "effective_staff": 40, "effective_wrapp": 40, "those": [40, 54, 58, 63, 69, 89, 90, 92, 94, 97, 110], "has_effective_ind": 40, "has_ind": [40, 56], "staccato": [40, 44, 66, 72, 80, 124, 130, 135, 137], "IN": [40, 72, 79], "current_leaf": 40, "previous_leaf": 40, "next_leaf": 40, "omit": 40, "spuriou": 40, "shouldn": 40, "sounding_pitch": 40, "sound": [40, 48], "transpose_from_sounding_pitch": [40, 48], "sustain": [40, 73, 101], "regres": 40, "corner": 41, "beat": [41, 54, 57, 72, 86, 94, 95, 96, 98, 101], "leaf_dur": [41, 57, 101], "b4": [41, 111, 114, 115], "attach_markup_strut": 42, "workaround": 42, "multisystem": 42, "crop": 42, "intersystem": 42, "whitespac": 42, "strut": [42, 63, 110, 114], "forc": [42, 51, 72, 77, 101], "site_com": 42, "lowest_treble_pitch": 42, "b3": [42, 72], "loco": 42, "ped": 42, "selection_to_score_markup_str": [42, 72], "frozenset": [43, 67], "unique_tre": [43, 71, 83, 87, 92], "uniquetreecontain": [43, 71, 83, 87, 92], "uniquetreelist": [43, 71, 83, 87, 92], "uniquetreenod": [43, 71, 83, 87, 92], "grapher": [43, 46], "arrow": [44, 63, 69, 76], "arpeggioarrowdown": 44, "__delattr__": [44, 45, 69, 78, 80, 101], "delattr": [44, 45, 69, 78, 80, 101], "__setattr__": [44, 45, 58, 69, 78, 80, 101], "setattr": [44, 45, 69, 78, 80, 101], "bypass": 44, "volta": [44, 51, 110], "setleftbeamcount": 44, "setrightbeamcount": 44, "bend_amount": 44, "doit": 44, "bend": [44, 51, 76], "bend_aft": [44, 76], "breath": [44, 51, 63], "bass_8": 44, "consists_command": [44, 49, 54, 72], "clef_engrav": [44, 51], "remove_command": [44, 54, 72], "fine": 44, "middle_c_posit": 44, "to_pitch": [44, 63], "staff_posit": 44, "to_staff_posit": 44, "from_pitch": [44, 63, 69], "maker": [44, 49, 55, 56, 100, 101, 102, 112], "make_not": [44, 49, 52, 55, 56], "minim": 44, "ledger": [44, 51, 76], "circl": [44, 63, 76], "woodwind": [44, 63], "timbr": 44, "deviat": 44, "shortfermata": 44, "longfermata": 44, "verylongfermata": 44, "allow_repeat": [44, 76], "allow_ti": [44, 76], "parenthesize_repeat": [44, 76], "zero_pad": [44, 76], "my_instrument_nam": 44, "name_1": 44, "name_2": 44, "name_3": 44, "include_flat_markup": 44, "include_natural_markup": 44, "key_clust": 44, "accidentalcautionari": [44, 51, 63], "tonic": [44, 51, 114, 130], "laissez": [44, 73], "vibrer": [44, 73], "laissez_vibr": 44, "lv": 44, "slurdot": 44, "multilin": 44, "stopstaff": 44, "startstaff": 44, "nondirect": 44, "proper": [44, 53, 103], "entail": 44, "search": [44, 50, 92, 93, 94, 95, 97, 99, 107], "particular": 44, "insist": 44, "post_ev": [44, 63, 64, 80], "allegro": [44, 50, 66, 72, 77, 78, 80, 103], "assai": 44, "disappear": 44, "troppo": [44, 66], "reference_dur": [44, 93, 94, 95], "units_per_minut": [44, 93, 94, 95], "textual_ind": [44, 93, 94, 95], "custom_markup": [44, 93, 94, 95], "272": 44, "mix": [44, 52, 66, 72, 73, 74, 76, 78], "901": 44, "133": 44, "quick": 44, "make_tempo_equation_markup": 44, "135": 44, "metronome_mark_1": 44, "metronome_mark_2": 44, "mark_1": 44, "mark_2": 44, "104": [44, 79], "langsam": 44, "mark_3": 44, "total_ord": [44, 67, 69, 72], "minut": 44, "duration_to_millisecond": 44, "millisecond": [44, 90, 91, 92, 95, 96], "1500": [44, 91, 95], "msec": 44, "equat": 44, "is_imprecis": 44, "precis": 44, "quarters_per_minut": 44, "m2": [44, 49, 69, 114], "dorian": 44, "rehears": 44, "from_str": 44, "aa": 44, "ba": 44, "53": [44, 54, 79, 101], "repeat_count": 44, "repeat_typ": 44, "unfold": 44, "repeat_ti": [44, 101], "short_instrument_nam": 44, "my_custom_funct": 44, "s2": [44, 52], "staff_chang": 44, "start_group": [44, 76], "stop_group": [44, 76], "shape": [44, 46, 51, 54, 71, 77, 92], "hairpin": [44, 51, 56, 63, 76, 82, 102, 115], "crescendo": [44, 82], "dal": [44, 122], "o": [44, 46, 74, 76, 106], "tip": [44, 76], "subito": 44, "flare": [44, 76], "diminuendo": 44, "al": 44, "known_shap": 44, "known": [44, 63], "start_phrasing_slur": [44, 76], "stop_phrasing_slur": [44, 76], "sustainon": [44, 73, 76], "sostenutoon": 44, "unacorda": 44, "start_piano_ped": [44, 76], "stop_piano_ped": [44, 76], "green": [44, 47, 49, 72, 73], "sustainpedallinespann": [44, 51, 63, 73, 76], "pedalsustainstyl": [44, 51, 73, 76], "sustainoff": [44, 73, 76], "start_slur": [44, 57, 72, 76, 124, 135, 137], "stop_slur": [44, 76, 124, 135, 137], "upright": [44, 63, 76], "pont": [44, 76], "tasto": [44, 76], "solid": [44, 76], "dash": [44, 63, 76], "starttextspanon": [44, 82], "stoptextspanon": [44, 82], "spacer": 44, "clip": [44, 51, 79], "place": [44, 54, 66, 71, 72, 79, 92], "hook": [44, 76], "invis": [44, 101], "start_trill_span": [44, 76], "stop_trill_span": [44, 76], "pitchedtril": 44, "tremolo_flag": 44, "thirti": 44, "rewrite_met": [44, 54, 101], "inadvertantli": 44, "stop_hairpin": [44, 82], "sostenutooff": 44, "trecord": 44, "behind": [44, 116, 131], "contents_multipli": 44, "dyadic": 44, "nondyad": 44, "is_non_dyadic_r": 44, "suppress": 44, "dir": [45, 63], "isupp": 45, "__dict__": 45, "issubclass": 45, "__class__": 45, "c8": [45, 46, 55, 67, 110], "g6": 45, "db3": 45, "bb5": 45, "f3": 45, "ab4": [45, 114], "bb1": 45, "ab2": 45, "e4": [45, 63, 110, 111, 114], "f4": [45, 49, 110, 114], "eb5": 45, "d3": 45, "bb6": 45, "g4": [45, 49, 57, 72, 110, 114, 124, 135, 137], "bb0": 45, "ab3": 45, "bb4": [45, 114], "d7": 45, "f5": 45, "e5": [45, 52], "b0": 45, "inf": [45, 67], "bb3": 45, "a0": [45, 67], "d5": [45, 52, 72], "db4": [45, 114], "e6": 45, "d6": 45, "f6": 45, "latent": 45, "redraw": 45, "roman_numer": 45, "d4": [45, 49, 110, 111, 114], "get_pitch_ranges_by_string_numb": 45, "string_numb": 45, "get_pitches_by_string_numb": 45, "voice_pitch_class": [45, 67], "allow_open_str": 45, "range_": [45, 54, 67, 79], "e7": 45, "graphabl": 46, "format_": 46, "__call__": [46, 54, 60, 63, 64, 65, 67, 69, 71, 84, 85, 86, 88, 92, 94, 95, 96, 97, 98, 99], "get_format": 46, "get_layout": 46, "get_openable_path": 46, "output_path": [46, 60, 63, 64, 65, 71], "get_output_directori": 46, "get_render_command": 46, "input_path": 46, "get_render_directori": 46, "get_render_prefix": 46, "get_str": 46, "migrate_asset": 46, "render_directori": 46, "open_output_path": 46, "persist_log": 46, "persist_str": 46, "run_command": 46, "should_copy_stylesheet": 46, "should_open": 46, "should_persist_log": 46, "copy_stylesheet": 46, "get_lilypond_path": 46, "lilypond_path": [46, 106], "get_stylesheets_directori": 46, "compare_fil": 46, "path_1": 46, "path_2": 46, "discard": [46, 85], "blank": 46, "statement": [46, 63], "count_function_cal": 46, "global_context": 46, "local_context": 46, "fixed_point": 46, "execute_fil": 46, "attribute_nam": 46, "execute_str": 46, "local_namespac": 46, "find_execut": 46, "similar": [46, 71], "unix": [46, 88], "return_tim": 46, "digraph": [46, 54, 71, 92], "fontnam": [46, 54], "arial": [46, 54], "staff_0": [46, 113], "border": 46, "cellpad": 46, "tr": [46, 65], "td": 46, "05": [46, 104], "subgraph": [46, 54], "grey75": 46, "penwidth": [46, 54], "note_0": 46, "hr": 46, "note_1": [46, 58], "note_2": [46, 58], "note_3": [46, 58], "rtm_syntax": 46, "rhythm_tre": 46, "bgcolor": [46, 54, 71, 92], "truecolor": [46, 54, 71, 92], "node_0": [46, 54, 71, 92], "triangl": [46, 54, 63, 71, 92], "node_1": [46, 54, 71, 92], "node_2": [46, 54, 71, 92], "node_3": [46, 54, 71, 92], "node_4": [46, 54, 71, 92], "viewer": [46, 106], "make_subprocess": 46, "popen": 46, "subprocess": 46, "pipe": [46, 64], "open_fil": 46, "file_path": 46, "line_numb": 46, "text_editor": [46, 106], "guess": 46, "editor": [46, 103, 106], "open_last_log": 46, "line_count": 46, "print_cal": 46, "print_calle": 46, "sort_bi": 46, "cumul": [46, 53], "strip_dir": 46, "sat": 46, "2023": 46, "4343": 46, "4293": 46, "primit": 46, "001": 46, "188": 46, "ncall": 46, "tottim": 46, "percal": 46, "cumtim": 46, "filenam": [46, 108], "000": 46, "002": 46, "exec": 46, "4709": 46, "2952": 46, "813": 46, "1271": 46, "_initialize_compon": 46, "1309": 46, "_parse_str": 46, "_parse_lilypond_str": 46, "2748": 46, "809": 46, "_pars": 46, "6297": 46, "p_simple_element__pitch__exclamations__questions__octave_check__optional_notemode_duration__optional_rest": [46, 63], "cprofil": 46, "run_lilypond": 46, "ly_path": 46, "abjad_formatting_tim": 46, "lilypond_rendering_tim": 46, "spawn_subprocess": 46, "spawn": 46, "reimplement": 46, "deprec": 46, "exclud": [47, 73, 76, 101], "ternari": 47, "nongrac": [47, 101], "gf": [47, 48, 49, 69, 73, 114], "unpitch": [47, 71], "nontrivi": [47, 73, 101], "trivial": [47, 72, 101, 112], "pitched": 47, "miss": [47, 72, 82], "pitch_set": 47, "timelin": [47, 93], "iterate_out_of_rang": 48, "respell_with_flat": 48, "respel": [48, 69], "cf": [48, 69, 73, 114], "sounding_pitches_are_in_rang": 48, "clarinet": [48, 121, 122, 123], "transpose_from_written_pitch": 48, "pitch_iter": 49, "color_map": 49, "41": [49, 54, 75, 79], "is_twelve_tone_complet": 49, "is_twenty_four_tone_complet": 49, "by_selector": [49, 73], "selector": [49, 76, 101, 116], "color_contain": 49, "color_leav": 49, "s8": [49, 72], "color_note_head": 49, "x11": 49, "mediumblu": 49, "orang": 49, "lightslateblu": 49, "forestgreen": 49, "mediumorchid": 49, "firebrick": 49, "deeppink": 49, "darkorang": 49, "indianr": 49, "cadetblu": 49, "seagreen": 49, "limegreen": 49, "remove_markup": 49, "with_pitch": 49, "vertical_mo": [49, 81], "tini": [49, 63], "vector": [49, 65, 66, 67], "make_interval_class_vector": [49, 67], "1000020": 49, "0010020": 49, "0100110": 49, "0011010": 49, "sc": [49, 75], "with_dur": 49, "with_indic": 49, "with_interv": 49, "pitch_numb": [49, 69], "a15": [49, 69], "m9": [49, 69], "a9": 49, "af4": [49, 111, 115], "m7": 49, "m14": [49, 69], "local": [49, 69, 114], "american": 49, "filter": [49, 73, 74, 130], "horizontal_bracket_engrav": [49, 50, 51, 72], "horizontal_bracket": [49, 76], "horizontalbracket": [49, 51, 63], "with_set_class": 49, "rank": [49, 75, 86], "lex": [49, 53, 60, 75], "lex_rank": [49, 75], "transposition_onli": [49, 67, 75], "with_start_offset": 49, "clock_tim": 49, "global_offset": 49, "02": [49, 104, 108], "04": [49, 104], "06": [49, 104], "dark_cyan_markup": 49, "cm": 50, "flutestaff": 50, "engraver_group": 50, "alia": [50, 51], "accept": [50, 51, 131], "fluteuppervoic": 50, "flutelowervoic": 50, "dodecaphon": 50, "anonym": 50, "lilypond_language_token": 50, "lilypond_version_token": 50, "portrait": 50, "include_contain": 50, "get_tag": 50, "mensuralstaff": [51, 63], "lilypond_context": [51, 72], "list_all_context": 51, "is_global_context": 51, "is_score_context": 51, "is_staff_group_context": 51, "is_staff_context": 51, "is_bottom_context": 51, "choirstaff": [51, 63], "chordnam": [51, 63], "cuevoic": [51, 63], "devnul": [51, 63], "drumstaff": [51, 63], "drumvoic": [51, 63], "figuredbass": [51, 63], "fretboard": [51, 63], "grandstaff": [51, 63], "gregoriantranscriptionstaff": [51, 63], "gregoriantranscriptionvoic": [51, 63], "kievanstaff": [51, 63], "kievanvoic": [51, 63], "lyric": [51, 63], "mensuralvoic": [51, 63], "notenam": [51, 63], "nullvoic": [51, 63], "onestaff": [51, 63], "petruccistaff": [51, 63], "petruccivoic": [51, 63], "tabstaff": [51, 63], "tabvoic": [51, 63], "vaticanastaff": [51, 63], "vaticanavoic": [51, 63], "unregist": [51, 63], "custom_context": 51, "accepted_bi": 51, "fingeringstaff": 51, "score_context": 51, "accepted_context": 51, "default_child": 51, "deni": 51, "bowingstaff": 51, "note_heads_engrav": 51, "is_custom": 51, "accidental_engrav": 51, "axis_group_engrav": 51, "bar_engrav": 51, "collision_engrav": 51, "cue_clef_engrav": 51, "dot_column_engrav": 51, "figured_bass_engrav": 51, "figured_bass_position_engrav": 51, "fingering_column_engrav": 51, "font_size_engrav": 51, "grob_pq_engrav": 51, "instrument_name_engrav": 51, "key_engrav": 51, "ledger_line_engrav": 51, "ottava_spanner_engrav": 51, "output_property_engrav": 51, "piano_pedal_align_engrav": 51, "piano_pedal_engrav": 51, "pure_from_neighbor_engrav": 51, "rest_collision_engrav": 51, "script_row_engrav": 51, "separating_line_group_engrav": 51, "staff_collecting_engrav": 51, "staff_symbol_engrav": [51, 55, 72, 101], "time_signature_engrav": [51, 54, 55, 72, 101], "accepting_context": 51, "child": [51, 88], "custos_engrav": 51, "grob": [51, 58, 63], "accidentalplac": [51, 63], "accidentalsuggest": [51, 63], "bassfigur": [51, 63], "bassfigurealign": [51, 63], "bassfigurealignmentposit": [51, 63], "bassfigurebracket": [51, 63], "bassfigurecontinu": [51, 63], "bassfigurelin": [51, 63], "clefmodifi": [51, 63], "cueclef": [51, 63], "cueendclef": [51, 63], "custo": [51, 63], "dotcolumn": [51, 63], "fingeringcolumn": [51, 63], "keycancel": [51, 63], "ledgerlinespann": [51, 63], "notecollis": [51, 63], "ottavabracket": [51, 63], "pianopedalbracket": [51, 63], "restcollis": [51, 63], "scriptrow": [51, 63], "sostenutoped": [51, 63], "sostenutopedallinespann": [51, 63], "staffspac": [51, 63], "sustainped": [51, 63], "unacordaped": [51, 63], "unacordapedallinespann": [51, 63], "property_nam": 51, "accidentalgroup": 51, "autoaccident": 51, "autocautionari": 51, "busygrob": 51, "clefglyph": 51, "clefposit": 51, "cleftransposit": 51, "cleftranspositionstyl": 51, "createkeyonclefchang": 51, "createspac": 51, "cueclefglyph": 51, "cueclefposit": 51, "cuecleftransposit": 51, "cuecleftranspositionstyl": 51, "currentcommandcolumn": 51, "currentmusicalcolumn": 51, "explicitclefvis": 51, "explicitcueclefvis": 51, "explicitkeysignaturevis": 51, "extranatur": 51, "figuredbassalterationdirect": 51, "figuredbasscentercontinu": 51, "figuredbassformatt": 51, "forbidbreak": 51, "forceclef": 51, "harmonicaccident": 51, "hasaxisgroup": 51, "hasstaffspac": 51, "ignorefiguredbassrest": 51, "implicitbassfigur": 51, "initialtimesignaturevis": 51, "internalbarnumb": 51, "keepaliveinterfac": 51, "keyalterationord": 51, "keyalter": 51, "lastkeyalter": 51, "localalter": 51, "middlecclefposit": 51, "middleccueposit": 51, "middlecoffset": 51, "ottav": 51, "partialbusi": 51, "pedalsostenutostr": 51, "pedalsostenutostyl": 51, "pedalsustainstr": 51, "pedalunacordastr": 51, "pedalunacordastyl": 51, "printkeycancel": 51, "shortvocalnam": 51, "stavesfound": 51, "timesignaturefract": 51, "usebassfigureextend": 51, "vocalnam": 51, "whichbar": 51, "auto_beam_engrav": 51, "list_all_engrav": 51, "lilypond_engrav": 51, "ambitus_engrav": 51, "arpeggio_engrav": 51, "balloon_engrav": 51, "beam_collision_engrav": 51, "beam_engrav": 51, "beam_perform": 51, "bend_engrav": 51, "break_align_engrav": 51, "breathing_sign_engrav": 51, "chord_name_engrav": 51, "chord_tremolo_engrav": 51, "cluster_spanner_engrav": 51, "completion_heads_engrav": 51, "completion_rest_engrav": 51, "concurrent_hairpin_engrav": 51, "control_track_perform": 51, "dots_engrav": 51, "double_percent_repeat_engrav": 51, "drum_note_perform": 51, "drum_notes_engrav": 51, "dynamic_align_engrav": 51, "dynamic_engrav": 51, "dynamic_perform": 51, "episema_engrav": 51, "extender_engrav": 51, "fingering_engrav": 51, "footnote_engrav": 51, "fretboard_engrav": 51, "glissando_engrav": 51, "grace_auto_beam_engrav": 51, "grace_beam_engrav": 51, "grace_engrav": 51, "grace_spacing_engrav": 51, "grid_line_span_engrav": 51, "grid_point_engrav": 51, "hyphen_engrav": 51, "instrument_switch_engrav": 51, "keep_alive_together_engrav": 51, "key_perform": 51, "kievan_ligature_engrav": 51, "laissez_vibrer_engrav": 51, "ligature_bracket_engrav": 51, "lyric_engrav": 51, "lyric_perform": 51, "mark_engrav": 51, "measure_counter_engrav": 51, "measure_grouping_engrav": 51, "melody_engrav": 51, "mensural_ligature_engrav": 51, "merge_rests_engrav": 51, "metronome_mark_engrav": 51, "midi_control_change_perform": 51, "multi_measure_rest_engrav": 51, "new_fingering_engrav": 51, "note_head_line_engrav": 51, "note_name_engrav": 51, "note_perform": 51, "note_spacing_engrav": 51, "page_turn_engrav": 51, "paper_column_engrav": 51, "parenthesis_engrav": 51, "part_combine_engrav": 51, "percent_repeat_engrav": 51, "phrasing_slur_engrav": 51, "piano_pedal_perform": 51, "pitch_squash_engrav": 51, "pitched_trill_engrav": 51, "repeat_acknowledge_engrav": 51, "repeat_tie_engrav": 51, "rest_engrav": 51, "rhythmic_column_engrav": 51, "script_column_engrav": 51, "script_engrav": 51, "slash_repeat_engrav": 51, "slur_engrav": 51, "slur_perform": 51, "spacing_engrav": 51, "span_arpeggio_engrav": 51, "span_bar_engrav": 51, "span_bar_stub_engrav": 51, "span_stem_engrav": 51, "spanner_break_forbid_engrav": 51, "staff_perform": 51, "stanza_number_align_engrav": 51, "stanza_number_engrav": 51, "stem_engrav": 51, "system_start_delimiter_engrav": 51, "tab_note_heads_engrav": 51, "tab_staff_symbol_engrav": 51, "tab_tie_follow_engrav": 51, "tempo_perform": 51, "text_engrav": 51, "text_spanner_engrav": 51, "tie_engrav": 51, "tie_perform": 51, "time_signature_perform": 51, "trill_spanner_engrav": 51, "tuplet_engrav": 51, "tweak_engrav": 51, "vaticana_ligature_engrav": 51, "vertical_align_engrav": 51, "volta_engrav": 51, "basemo": 51, "beamexcept": 51, "beamhalfmeasur": 51, "beatstructur": 51, "subdividebeam": 51, "list_all_grob": 51, "lilypond_grob": 51, "ambitu": [51, 63], "ambitusaccident": [51, 63], "ambituslin": [51, 63], "ambitusnotehead": [51, 63], "balloontextitem": [51, 63], "breakaligngroup": [51, 63], "breakalign": [51, 63], "breathingsign": [51, 63], "clusterspann": [51, 63], "clusterspannerbeacon": [51, 63], "combinetextscript": [51, 63], "doublepercentrepeat": [51, 63], "doublepercentrepeatcount": [51, 63], "doublerepeatslash": [51, 63], "dynamictextspann": [51, 63], "episema": [51, 63], "footnoteitem": [51, 63], "footnotespann": [51, 63], "gracespac": [51, 63], "gridlin": [51, 63], "gridpoint": [51, 63], "horizontalbrackettext": [51, 63], "instrumentswitch": [51, 63], "kievanligatur": [51, 63], "laissezvibrerti": [51, 63], "laissezvibrertiecolumn": [51, 63], "leftedg": [51, 63], "ligaturebracket": [51, 63], "lyricextend": [51, 63], "lyrichyphen": [51, 63], "lyricspac": [51, 63], "lyrictext": [51, 63], "measurecount": [51, 63], "measuregroup": [51, 63], "melodyitem": [51, 63], "mensuralligatur": [51, 63], "multimeasurerestnumb": [51, 63], "multimeasureresttext": [51, 63], "nonmusicalpapercolumn": [51, 63], "notespac": [51, 63], "papercolumn": [51, 63], "parenthesesitem": [51, 63], "percentrepeat": [51, 63], "percentrepeatcount": [51, 63], "phrasingslur": [51, 63], "repeatslash": [51, 63], "repeattiecolumn": [51, 63], "scriptcolumn": [51, 63], "spanbarstub": [51, 63], "stanzanumb": [51, 63], "stemstub": [51, 63], "strokefing": [51, 63], "systemstartbar": [51, 63, 112, 113], "systemstartbrac": [51, 63], "systemstartbracket": [51, 63], "systemstartsquar": [51, 63], "tabnotehead": [51, 63], "tiecolumn": [51, 63], "trillpitchaccident": [51, 63], "trillpitchgroup": [51, 63], "trillpitchhead": [51, 63], "trillspann": [51, 63], "vaticanaligatur": [51, 63], "voicefollow": [51, 63], "voltabracket": [51, 63], "voltabracketspann": [51, 63], "referenc": 51, "unbreak": 51, "auto": [51, 63], "knee": 51, "gap": 51, "avoid": [51, 52, 56, 76, 79], "shorten": [51, 55, 72, 101], "overshoot": 51, "concav": 51, "damp": 51, "extra": [51, 72, 101], "encod": 51, "famili": 51, "featur": [51, 82, 108], "footnot": [51, 63], "grow": [51, 101], "skylin": 51, "quant": 51, "layer": 51, "neutral": 51, "endpoint": 51, "parenthesi": 51, "friend": [51, 105], "list_all_interfac": 51, "grob_interfac": 51, "placement": 51, "suggest": 51, "axi": [51, 67, 69, 79, 124, 135, 137], "balloon": 51, "figur": [51, 101], "sign": [51, 53, 69, 74], "modifi": [51, 64, 72, 79, 98], "beacon": 51, "fret": [51, 63], "diagram": [51, 63], "gregorian": 51, "ligatur": 51, "grid": [51, 86, 87, 92, 97, 99, 102], "hara": 51, "kiri": 51, "kievan": 51, "hyphen": [51, 63, 108], "syllabl": 51, "melodi": 51, "multi": [51, 63], "prebreak": 51, "parenthes": [51, 63, 72, 76], "percent": 51, "trill": [51, 76, 110, 132], "pure": [51, 116], "neighbor": 51, "semi": 51, "spaceabl": 51, "grouper": 51, "stanza": 51, "stroke": [51, 54, 79], "delimit": [51, 77, 108], "tab": 51, "vaticana": 51, "make_leav": 52, "forbidden_note_dur": [52, 101], "forbidden_rest_dur": [52, 101], "skips_instead_of_rest": 52, "increase_monoton": [52, 54, 101], "use_multimeasure_rest": 52, "nonassign": [52, 101], "greatest": [52, 53, 54, 66], "certain": [52, 63, 117, 118, 119], "produc": [52, 64, 101, 108, 116], "diminish": [52, 72, 101], "multimeasur": [52, 72, 101], "s16": 52, "leaf_mak": 52, "cycl": [52, 74], "ad": [52, 56, 63, 101, 103, 108, 116, 126], "hoc": 52, "decreas": [52, 53, 74, 84, 101], "increas": [52, 53, 54, 74, 101], "bqf8": 52, "note_mak": 52, "tuplet_from_duration_and_ratio": [52, 112], "strictli": [52, 72, 74], "r64": 52, "augment": [52, 69, 72, 101], "encourag": [52, 105], "tuplet_from_leaf_and_ratio": 52, "tuplet_from_ratio_and_pair": 52, "9999999": 53, "noninfinit": 53, "all_are_equ": 53, "all_are_integer_equival": 53, "all_are_integer_equivalent_numb": 53, "all_are_nonnegative_integer_equivalent_numb": 53, "all_are_nonnegative_integer_powers_of_two": 53, "all_are_nonnegative_integ": 53, "all_are_pairs_of_typ": 53, "first_typ": 53, "second_typ": 53, "all_are_positive_integ": 53, "are_relatively_prim": 53, "arithmetic_mean": 53, "arithmet": [53, 79], "binomial_coeffici": 53, "k": 53, "binomi": 53, "coeffici": 53, "70": [53, 75, 79], "cumulative_product": 53, "720": 53, "5040": 53, "40320": 53, "cumulative_sum": 53, "sum": [53, 54, 71, 73, 74, 92, 99, 110], "difference_seri": 53, "divisor": [53, 99], "nonposit": 53, "factor": [53, 54, 79], "fraction_to_proper_fract": 53, "116": [53, 79], "greatest_common_divisor": 53, "94": [53, 79, 132], "144": 53, "greatest_power_of_two_less_equ": 53, "integer_equivalent_number_to_integ": 53, "noninteg": 53, "unchang": [53, 72, 77], "integer_to_base_k_tupl": 53, "digit": [53, 63, 77, 108], "1066": 53, "integer_to_binary_str": 53, "101": [53, 79], "110": 53, "111": 53, "1000": [53, 85, 86, 90, 91, 94, 95, 98], "1001": 53, "1010": 53, "1011": 53, "1100": 53, "1101": 53, "1110": 53, "1111": 53, "is_assignable_integ": 53, "is_integer_equival": 53, "is_integer_equivalent_n_tupl": 53, "is_integer_equivalent_numb": 53, "is_nonnegative_integ": 53, "is_nonnegative_integer_equivalent_numb": 53, "is_nonnegative_integer_power_of_two": 53, "is_positive_integ": 53, "is_positive_integer_equivalent_numb": 53, "is_positive_integer_power_of_two": 53, "least_common_multipl": 53, "partition_integer_into_canonic_part": 53, "decrease_parts_monoton": 53, "monoton": [53, 54, 74, 84], "weight": [53, 54, 66, 70, 74, 99, 101], "yield_all_compositions_of_integ": 53, "preferred_boundary_depth": 54, "deeper": 54, "dupl": 54, "pretty_rtm_format": [54, 71, 92], "cluster_offset": 54, "node_3_0": 54, "white": [54, 121], "fillcolor": 54, "black": [54, 103], "fontcolor": 54, "f_0_0": 54, "f_0_1": 54, "mrecord": 54, "node_3_1": 54, "node_3_2": 54, "tripl": [54, 72, 74], "node_4_0": 54, "node_4_1": 54, "node_4_2": 54, "node_4_3": 54, "quadrupl": 54, "node_5_0": 54, "node_5_1": 54, "node_5_2": 54, "node_5_3": 54, "node_5_4": 54, "compound": [54, 63, 66], "node_5": [54, 71, 92], "node_6": [54, 71, 92], "node_7": 54, "node_8": 54, "node_9_0": 54, "node_9_1": 54, "node_9_2": 54, "node_9_3": 54, "node_9_4": 54, "node_9_5": 54, "node_9_6": 54, "node_9": 54, "node_10": 54, "node_11": 54, "node_12": 54, "node_13": 54, "node_14": 54, "node_15": 54, "node_16": 54, "node_17_0": 54, "node_17_1": 54, "node_17_2": 54, "node_17_3": 54, "node_17_4": 54, "node_17_5": 54, "node_17_6": 54, "node_17_7": 54, "node_17_8": 54, "node_17_9": 54, "node_17_10": 54, "node_17_11": 54, "node_17_12": 54, "asymmetr": 54, "node_8_0": 54, "node_8_1": 54, "node_8_2": 54, "node_8_3": 54, "node_8_4": 54, "node_8_5": 54, "unequ": [54, 99], "By": [54, 74], "arrang": 54, "node_11_0": 54, "node_11_1": 54, "node_11_2": 54, "node_11_3": 54, "node_11_4": 54, "node_11_5": 54, "node_11_6": 54, "node_11_7": 54, "arragn": 54, "summand": 54, "__graph__": [54, 71, 92], "graphviz": [54, 71, 92, 107], "meter_graph": 54, "generate_offset_kernel_to_denomin": 54, "kernel": 54, "strongli": [54, 94, 103], "respond": 54, "fit_met": 54, "discard_final_orphan_downbeat": 54, "maximum_run_length": 54, "starting_offset": 54, "hypothet": 54, "implied_time_signatur": 54, "count_offset": [54, 79], "boundary_depth": [54, 101], "initial_offset": 54, "maximum_dot_count": 54, "rewrite_tuplet": 54, "rewrit": [54, 72, 101, 103], "lily_str": 54, "parse_reduced_ly_syntax": [54, 64], "rtm": [54, 71, 92], "maximum": [54, 79, 99], "establish": 54, "caus": [54, 98, 101], "reestablish": 54, "clearli": 54, "disambigu": [54, 90], "recurs": [54, 63, 71, 74, 92], "preprolated_dur": [54, 71, 92], "subdivid": [54, 92, 94, 99, 112], "adjust": 54, "depthwise_offset_inventori": 54, "depthwis": 54, "inventori": 54, "beahvior": 54, "is_compound": 54, "is_simpl": 54, "pretti": [54, 71, 92], "root_nod": [54, 92], "rtm_format": [54, 71, 92, 97, 99], "metric": [54, 55], "against": [54, 69], "receiv": 54, "impuls": 54, "respons": 54, "kernal": 54, "upper_staff": 54, "lower_staff": 54, "from_met": 54, "datastructur": 54, "dict": [54, 59, 79, 94, 99, 111], "illustrate_meter_list": 54, "meter_list": 54, "translat": [54, 63, 79], "193548387096776": 54, "274193548387096": 54, "postscript": [54, 63, 79], "setlinewidth": [54, 79], "moveto": [54, 79], "lineto": [54, 79], "153846153846154": 54, "rlineto": [54, 79], "0161290322580645": 54, "5384615384615385": 54, "032258064516129": 54, "076923076923077": 54, "048387096774194": 54, "064516129032258": 54, "615384615384616": 54, "080645161290322": 54, "096774193548388": 54, "112903225806452": 54, "129032258064516": 54, "14516129032258": 54, "161290322580644": 54, "177419354838708": 54, "909090909090908": 54, "20967741935484": 54, "6363636363636367": 54, "225806451612904": 54, "241935483870968": 54, "272727272727273": [54, 79], "25806451612903": 54, "517241379310345": 54, "29032258064516": 54, "3793103448275863": 54, "306451612903224": 54, "7586206896551726": 54, "32258064516129": 54, "33870967741935": 54, "354838709677416": 54, "37096774193548": 54, "137931034482759": 54, "38709677419355": 54, "403225806451616": 54, "41935483870968": 54, "435483870967744": 54, "45161290322581": 54, "46774193548387": 54, "61": [54, 79, 101], "483870967741936": 54, "left_rhythm": 55, "right_rhythm": 55, "left_markup": 55, "right_markup": 55, "metric_modul": 55, "rhythmic_staff": [55, 72, 101], "metric_modulation_1": 55, "metric_modulation_2": 55, "metric_modulation_3": 55, "copied_not": 56, "implicit": [56, 72, 73], "eject_cont": [56, 101], "eject": 56, "old": [56, 74, 80], "extract": [56, 101, 108], "empty_tuplet": 56, "fuse": [56, 73, 84, 98], "contigu": [56, 73, 79], "tuplet_1": [56, 57, 72], "tuplet_2": [56, 72], "trim": [56, 73, 124, 135, 137], "logical_tie_to_tuplet": 56, "proport": [56, 74, 112], "cq": [56, 69, 72], "recipi": 56, "setitem": 56, "tied_not": 56, "customvoic": 56, "marcato": [56, 72], "swap": [56, 101], "usag": [56, 105], "mere": 56, "substitut": 56, "nonempti": [56, 73], "pytest": [56, 103], "2665": 56, "On": [57, 94, 103], "shallow": [57, 67, 72, 79], "del": [57, 72, 124, 135, 137], "anchor_voice_select": 57, "anchor_voice_numb": 57, "do_not_beam": 57, "do_not_slash": 57, "do_not_slur": 57, "do_not_stop_polyphoni": 57, "font_siz": 57, "grace_voice_numb": 57, "anchor": [57, 79], "exce": 57, "834": 57, "auto_beam": 58, "setting_1": 58, "setting_2": 58, "setting_3": 58, "override_1": 58, "override_2": 58, "override_3": 58, "grob_nam": 58, "is_revert": 58, "property_path": [58, 63], "pressur": 58, "override_str": 58, "bound_details__left__text": 58, "tweak_str": 58, "zigzag": 58, "override_format_piec": 58, "revert_format_piec": 58, "revert_str": 58, "context_properti": 58, "is_unset": 58, "format_piec": 58, "__getattr__": 58, "somewhat": 58, "confusingli": 58, "deferenc": 58, "chain": 58, "syntax": [58, 63, 64, 71, 106], "unproblemat": 58, "surpris": 58, "outer_red_voic": [59, 72], "red_voic": [59, 72], "inner_red_voic": [59, 72], "inner_blue_voic": [59, 72], "blue_voic": [59, 72], "suffici": 59, "logical_voic": 59, "music_staff": 59, "container_1": 59, "container_2": 59, "score_index": 59, "orphan": [59, 85], "debug": [60, 63, 64, 65, 71, 103, 108], "lexer_rules_object": [60, 63, 64, 65, 71], "parser_rules_object": [60, 63, 64, 65, 71], "lexer": [60, 63, 64, 65, 71], "ply": [60, 63, 64, 65, 71], "logger": [60, 63, 64, 65, 71], "logger_path": [60, 63, 64, 65, 71], "logfil": [60, 63, 64, 65, 71], "associ": [60, 63, 64, 65, 71, 72], "lrparser": [60, 63, 64, 65, 71], "pickle_path": [60, 63, 64, 65, 71], "pickl": [60, 63, 64, 65, 71, 97], "dutch": 62, "fi": [62, 63], "nederland": [62, 63], "optional_id": 63, "optional_context_mod": 63, "ast": 63, "specc": 63, "known_context": 63, "client": 63, "emul": 63, "Not": [63, 72, 88, 89, 95, 96, 103], "function_nam": 63, "guil": 63, "proxi": [63, 89, 92, 97], "acciaccatura": [63, 72], "appoggiatura": [63, 72], "notename_pitch": 63, "number_list": 63, "makeclust": [63, 72], "slashed_grace_contain": 63, "slashedgrac": [63, 72], "_option": 63, "unus": 63, "voicefour": 63, "voiceonc": 63, "voicethre": 63, "event": [63, 85, 89, 90, 91, 92, 97], "skeleton": 63, "grammar": 63, "skeleton_path": 63, "parser_output_path": 63, "parser_tab_hh_path": 63, "lexic": [63, 72], "push_signatur": 63, "scan_bare_word": 63, "scan_escaped_word": 63, "t_651_a": 63, "t_651_b": 63, "t_661": 63, "t_666": 63, "t_any_165": 63, "t_initial_643": 63, "t_initial_646": 63, "t_initial_markup_notes_210": 63, "t_initial_markup_notes_214": 63, "nr": 63, "t_initial_markup_notes_214_eof": 63, "t_initial_markup_notes_216": 63, "t_initial_markup_notes_218": 63, "t_initial_markup_notes_220": 63, "t_initial_markup_notes_222": 63, "t_initial_markup_notes_227": 63, "t_initial_markup_notes_353": 63, "t_initial_notes_233": 63, "ntfr": 63, "t_initial_notes_387": 63, "t_initial_notes_390": 63, "t_initial_notes_396": 63, "t_initial_notes_399": 63, "t_initial_notes_686": 63, "t_error": [63, 64, 65, 71], "t_longcomment_291": 63, "t_longcomment_293": 63, "t_longcomment_296": 63, "t_longcomment_error": 63, "t_markup_545": 63, "t_markup_548": 63, "t_markup_601": 63, "tnrf": 63, "t_markup_error": 63, "t_newlin": [63, 64, 65, 71], "t_notes_417": 63, "t_notes_421": 63, "t_notes_424": 63, "t_notes_428": 63, "t_notes_428b": 63, "t_notes_433": 63, "t_notes_error": 63, "t_quote_440": [63, 65], "t_quote_443": [63, 65], "t_quote_446": [63, 65], "t_quote_456": [63, 65], "t_quote_xxx": 63, "t_quote_error": [63, 65], "t_scheme_error": 63, "t_version_242": 63, "t_version_278": 63, "t_version_341": 63, "t_version_error": 63, "default_languag": 63, "portato": 63, "von": 63, "ballad": 63, "compil": [63, 103, 108], "df4": [63, 111], "fs4": 63, "briefli": 63, "theses": 63, "pitchnam": [63, 64], "incl": 63, "glissandi": 63, "ie": 63, "bookpart": 63, "chordmod": 63, "drummod": 63, "figuremod": 63, "anyth": 63, "input_str": 63, "list_known_context": 63, "list_known_dynam": 63, "ffff": 63, "fffff": 63, "fp": 63, "fz": 63, "ppppp": 63, "sff": 63, "sp": 63, "spp": 63, "list_known_grob": 63, "list_known_languag": 63, "catalan": 63, "deutsch": 63, "espanol": 63, "espa\u00f1ol": 63, "fran\u00e7ai": [63, 72, 125], "italiano": 63, "norsk": 63, "portugu": 63, "suomi": 63, "svenska": 63, "vlaam": 63, "list_known_markup_funct": 63, "backslash": 63, "cap": 63, "char": 63, "customtabclef": 63, "doubleflat": 63, "doublesharp": 63, "draw": 63, "hline": 63, "ellips": 63, "epsfil": 63, "eyeglass": 63, "fontcap": 63, "ters": 63, "fromproperti": 63, "halign": 63, "hbracket": 63, "justifi": 63, "magnifi": 63, "markalphabet": 63, "marklett": 63, "medium": 63, "sub": [63, 84, 113], "super": 63, "normals": 63, "null": [63, 67, 84], "fly": 63, "oval": 63, "ref": 63, "adjac": [63, 76], "semiflat": 63, "semisharp": 63, "sesquiflat": 63, "sesquisharp": 63, "smallcap": 63, "smaller": [63, 101, 103], "teeni": 63, "typewrit": 63, "underlin": 63, "vcenter": 63, "verbatim": 63, "vspace": 63, "dimens": 63, "url": 63, "wordwrap": 63, "list_known_music_funct": 63, "register_markup_funct": 63, "undo": [63, 76], "my": [63, 103], "baz": 63, "predic": [63, 67, 73, 74], "understood": [63, 94], "consult": 63, "travisci": 63, "available_languag": 63, "syntact": [63, 72], "yy": 63, "p_assignment__assignment_id__chr61__identifier_init": 63, "assignment_id": 63, "identifier_init": 63, "p_assignment__embedded_scm": 63, "embedded_scm": 63, "p_assignment_id__str": 63, "p_bare_number__real__number_identifi": 63, "bare_numb": 63, "number_identifi": 63, "p_bare_number__unsigned__number_identifi": 63, "unsign": 63, "p_bare_number__bare_number_clos": 63, "bare_number_clos": 63, "p_bare_number_closed__number_identifi": 63, "p_bare_number_closed__r": 63, "p_bare_number_closed__unsign": 63, "p_bare_unsigned__unsign": 63, "bare_unsign": 63, "p_braced_music_list__chr123__music_list__chr125": 63, "braced_music_list": 63, "music_list": 63, "p_chord_body__angle_open__chord_body_elements__angle_clos": 63, "chord_bodi": [63, 64], "angle_open": 63, "chord_body_el": 63, "angle_clos": 63, "p_chord_body_element__music_function_chord_bodi": 63, "music_function_chord_bodi": 63, "p_chord_body_element__pitch__exclamations__questions__octave_check__post_ev": 63, "exclam": 63, "octave_check": 63, "p_chord_body_elements__empti": 63, "p_chord_body_elements__chord_body_elements__chord_body_el": 63, "p_closed_music__complex_music_prefix__closed_mus": 63, "closed_mus": 63, "complex_music_prefix": 63, "p_closed_music__music_bar": 63, "music_bar": 63, "p_command_element__chr124": 63, "command_el": 63, "p_command_element__e_backslash": 63, "e_backslash": 63, "p_command_element__command_ev": 63, "command_ev": 63, "p_command_event__tempo_ev": 63, "tempo_ev": 63, "p_complex_music__complex_music_prefix__mus": 63, "complex_mus": 63, "p_complex_music__music_function_cal": 63, "music_function_cal": 63, "p_complex_music_prefix__context__simple_string__optional_id__optional_context_mod": 63, "simple_str": 63, "p_complex_music_prefix__newcontext__simple_string__optional_id__optional_context_mod": 63, "newcontext": 63, "p_composite_music__complex_mus": 63, "composite_mus": 63, "p_composite_music__music_bar": 63, "p_context_change__change__string__chr61__str": 63, "context_chang": 63, "p_context_def_spec_block__context__chr123__context_def_spec_body__chr125": 63, "context_def_spec_block": 63, "context_def_spec_bodi": 63, "p_context_def_spec_body__context_def_identifi": 63, "context_def_identifi": 63, "p_context_def_spec_body__empti": 63, "p_context_def_spec_body__context_def_spec_body__context_mod": 63, "context_mod": 63, "p_context_def_spec_body__context_def_spec_body__context_modif": 63, "context_modif": 63, "p_context_def_spec_body__context_def_spec_body__embedded_scm": 63, "p_context_mod__property_oper": 63, "property_oper": 63, "p_context_mod_list__empti": 63, "context_mod_list": 63, "p_context_mod_list__context_mod_list__context_mod_identifi": 63, "context_mod_identifi": 63, "p_context_mod_list__context_mod_list__context_mod": 63, "p_context_mod_list__context_mod_list__embedded_scm": 63, "p_context_modification__context_mod_identifi": 63, "p_context_modification__with__context_mod_identifi": 63, "WITH": 63, "p_context_modification__with__chr123__context_mod_list__chr125": 63, "p_context_modification__with__embedded_scm_clos": 63, "embedded_scm_clos": 63, "p_context_prop_spec__simple_str": 63, "context_prop_spec": 63, "p_context_prop_spec__simple_string__chr46__simple_str": 63, "p_direction_less_char__chr126": 63, "direction_less_char": 63, "p_direction_less_char__chr40": 63, "p_direction_less_char__chr41": 63, "p_direction_less_char__chr91": 63, "p_direction_less_char__chr93": 63, "p_direction_less_char__e_angle_clos": 63, "e_angle_clos": 63, "p_direction_less_char__e_angle_open": 63, "e_angle_open": 63, "p_direction_less_char__e_clos": 63, "e_clos": 63, "p_direction_less_char__e_exclam": 63, "e_exclam": 63, "p_direction_less_char__e_open": 63, "e_open": 63, "p_direction_less_event__event_identifi": 63, "direction_less_ev": 63, "event_identifi": 63, "p_direction_less_event__direction_less_char": 63, "p_direction_less_event__event_function_ev": 63, "event_function_ev": 63, "p_direction_less_event__tremolo_typ": 63, "tremolo_typ": 63, "p_direction_reqd_event__gen_text_def": 63, "direction_reqd_ev": 63, "gen_text_def": 63, "p_direction_reqd_event__script_abbrevi": 63, "script_abbrevi": 63, "p_dots__empti": [63, 64], "p_dots__dots__chr46": 63, "p_duration_length__multiplied_dur": 63, "duration_length": 63, "multiplied_dur": [63, 72, 101], "p_embedded_scm__embedded_scm_bar": 63, "embedded_scm_bar": 63, "p_embedded_scm__scm_function_cal": 63, "scm_function_cal": 63, "p_embedded_scm_arg__embedded_scm_bare_arg": 63, "embedded_scm_arg": 63, "embedded_scm_bare_arg": 63, "p_embedded_scm_arg__music_arg": 63, "music_arg": 63, "p_embedded_scm_arg__scm_function_cal": 63, "p_embedded_scm_arg_closed__closed_mus": 63, "embedded_scm_arg_clos": 63, "p_embedded_scm_arg_closed__embedded_scm_bare_arg": 63, "p_embedded_scm_arg_closed__scm_function_call_clos": 63, "scm_function_call_clos": 63, "p_embedded_scm_bare__scm_identifi": 63, "scm_identifi": 63, "p_embedded_scm_bare__scm_token": 63, "scm_token": 63, "p_embedded_scm_bare_arg__str": 63, "p_embedded_scm_bare_arg__string_identifi": 63, "string_identifi": 63, "p_embedded_scm_bare_arg__context_def_spec_block": 63, "p_embedded_scm_bare_arg__context_modif": 63, "p_embedded_scm_bare_arg__embedded_scm_bar": 63, "p_embedded_scm_bare_arg__full_markup": 63, "full_markup": 63, "p_embedded_scm_bare_arg__full_markup_list": 63, "full_markup_list": 63, "p_embedded_scm_bare_arg__output_def": 63, "output_def": 63, "p_embedded_scm_bare_arg__score_block": 63, "score_block": 63, "p_embedded_scm_chord_body__scm_function__music_function_chord_body_arglist": 63, "embedded_scm_chord_bodi": 63, "scm_function": 63, "music_function_chord_body_arglist": 63, "p_embedded_scm_chord_body__bare_numb": 63, "p_embedded_scm_chord_body__chord_body_el": 63, "p_embedded_scm_chord_body__embedded_scm_bare_arg": 63, "p_embedded_scm_chord_body__fract": 63, "p_embedded_scm_closed__embedded_scm_bar": 63, "p_embedded_scm_closed__scm_function_call_clos": 63, "p_error": [63, 64, 65, 71], "p_event_chord__chord_repetition__optional_notemode_duration__post_ev": 63, "event_chord": 63, "chord_repetit": 63, "optional_notemode_dur": 63, "p_event_chord__multi_measure_rest__optional_notemode_duration__post_ev": 63, "multi_measure_rest": 63, "p_event_chord__command_el": 63, "p_event_chord__note_chord_el": 63, "note_chord_el": 63, "p_event_chord__simple_chord_elements__post_ev": 63, "simple_chord_el": 63, "p_event_function_event__event_function__function_arglist_clos": 63, "event_funct": 63, "function_arglist_clos": 63, "p_exclamations__empti": 63, "p_exclamations__exclamations__chr33": 63, "p_fingering__unsign": 63, "p_fraction__fract": 63, "p_fraction__unsigned__chr47__unsign": 63, "p_full_markup__markup_identifi": 63, "markup_identifi": 63, "p_full_markup__markup__markup_top": 63, "markup_top": 63, "p_full_markup_list__markuplist_identifi": 63, "markuplist_identifi": 63, "p_full_markup_list__markuplist__markup_list": 63, "markuplist": 63, "markup_list": 63, "p_function_arglist__function_arglist_common": 63, "function_arglist": 63, "function_arglist_common": 63, "p_function_arglist__function_arglist_nonbackup": 63, "function_arglist_nonbackup": 63, "p_function_arglist_backup__expect_optional__expect_duration__function_arglist_closed_keep__duration_length": 63, "function_arglist_backup": 63, "expect_opt": 63, "expect_dur": 63, "function_arglist_closed_keep": 63, "p_function_arglist_backup__expect_optional__expect_pitch__function_arglist_keep__pitch_also_in_chord": 63, "expect_pitch": 63, "function_arglist_keep": 63, "pitch_also_in_chord": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_backup__backup": 63, "expect_scm": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__chr45__number_identifi": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__chr45__r": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__chr45__unsign": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__fract": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__number_identifi": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__r": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__unsign": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__post_event_nofing": 63, "post_event_nofing": 63, "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_keep__embedded_scm_arg_clos": 63, "p_function_arglist_backup__function_arglist_backup__reparse__bare_numb": 63, "repars": 63, "p_function_arglist_backup__function_arglist_backup__reparse__embedded_scm_arg_clos": 63, "p_function_arglist_backup__function_arglist_backup__reparse__fract": 63, "p_function_arglist_bare__expect_duration__function_arglist_closed_optional__duration_length": 63, "function_arglist_bar": 63, "function_arglist_closed_opt": 63, "p_function_arglist_bare__expect_no_more_arg": 63, "expect_no_more_arg": 63, "p_function_arglist_bare__expect_optional__expect_duration__function_arglist_skip__default": 63, "function_arglist_skip": 63, "p_function_arglist_bare__expect_optional__expect_pitch__function_arglist_skip__default": 63, "p_function_arglist_bare__expect_optional__expect_scm__function_arglist_skip__default": 63, "p_function_arglist_bare__expect_pitch__function_arglist_optional__pitch_also_in_chord": 63, "function_arglist_opt": 63, "p_function_arglist_closed__function_arglist_closed_common": 63, "function_arglist_closed_common": 63, "p_function_arglist_closed__function_arglist_nonbackup": 63, "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__chr45__number_identifi": 63, "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__chr45__r": 63, "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__chr45__unsign": 63, "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__bare_numb": 63, "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__fract": 63, "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__post_event_nofing": 63, "p_function_arglist_closed_common__expect_scm__function_arglist_optional__embedded_scm_arg_clos": 63, "p_function_arglist_closed_common__function_arglist_bar": 63, "p_function_arglist_closed_keep__function_arglist_backup": 63, "p_function_arglist_closed_keep__function_arglist_closed_common": 63, "p_function_arglist_closed_optional__expect_optional__expect_duration__function_arglist_closed_opt": 63, "p_function_arglist_closed_optional__expect_optional__expect_pitch__function_arglist_closed_opt": 63, "p_function_arglist_closed_optional__function_arglist_backup__backup": 63, "p_function_arglist_closed_optional__function_arglist_closed_keep": 63, "prec": 63, "p_function_arglist_common__expect_scm__function_arglist_closed_optional__bare_numb": 63, "p_function_arglist_common__expect_scm__function_arglist_closed_optional__fract": 63, "p_function_arglist_common__expect_scm__function_arglist_closed_optional__post_event_nofing": 63, "p_function_arglist_common__expect_scm__function_arglist_optional__embedded_scm_arg": 63, "p_function_arglist_common__function_arglist_bar": 63, "p_function_arglist_common__function_arglist_common_minu": 63, "function_arglist_common_minu": 63, "p_function_arglist_common_minus__expect_scm__function_arglist_closed_optional__chr45__number_identifi": 63, "p_function_arglist_common_minus__expect_scm__function_arglist_closed_optional__chr45__r": 63, "p_function_arglist_common_minus__expect_scm__function_arglist_closed_optional__chr45__unsign": 63, "p_function_arglist_common_minus__function_arglist_common_minus__reparse__bare_numb": 63, "p_function_arglist_keep__function_arglist_backup": 63, "p_function_arglist_keep__function_arglist_common": 63, "p_function_arglist_nonbackup__expect_optional__expect_duration__function_arglist_closed__duration_length": 63, "p_function_arglist_nonbackup__expect_optional__expect_pitch__function_arglist__pitch_also_in_chord": 63, "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist__embedded_scm_arg_clos": 63, "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__chr45__number_identifi": 63, "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__chr45__r": 63, "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__chr45__unsign": 63, "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__fract": 63, "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__bare_number_clos": 63, "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__post_event_nofing": 63, "p_function_arglist_optional__expect_optional__expect_duration__function_arglist_opt": 63, "p_function_arglist_optional__expect_optional__expect_pitch__function_arglist_opt": 63, "p_function_arglist_optional__function_arglist_backup__backup": 63, "p_function_arglist_optional__function_arglist_keep": 63, "p_function_arglist_skip__expect_optional__expect_duration__function_arglist_skip": 63, "p_function_arglist_skip__expect_optional__expect_pitch__function_arglist_skip": 63, "p_function_arglist_skip__expect_optional__expect_scm__function_arglist_skip": 63, "p_function_arglist_skip__function_arglist_common": 63, "p_gen_text_def__full_markup": 63, "p_gen_text_def__simple_str": 63, "p_grouped_music_list__sequential_mus": 63, "grouped_music_list": 63, "sequential_mus": 63, "p_grouped_music_list__simultaneous_mus": 63, "simultaneous_mus": 63, "p_identifier_init__context_def_spec_block": 63, "p_identifier_init__context_modif": 63, "p_identifier_init__embedded_scm": 63, "p_identifier_init__full_markup": 63, "p_identifier_init__full_markup_list": 63, "p_identifier_init__mus": 63, "p_identifier_init__number_express": 63, "number_express": 63, "p_identifier_init__output_def": 63, "p_identifier_init__post_event_nofing": 63, "p_identifier_init__score_block": 63, "p_identifier_init__str": 63, "p_lilypond__empti": 63, "p_lilypond__lilypond__assign": 63, "p_lilypond__lilypond__error": 63, "p_lilypond__lilypond__toplevel_express": 63, "toplevel_express": 63, "p_lilypond_header__header__chr123__lilypond_header_body__chr125": 63, "lilypond_head": 63, "lilypond_header_bodi": 63, "p_lilypond_header_body__empti": 63, "p_lilypond_header_body__lilypond_header_body__assign": 63, "p_markup__markup_head_1_list__simple_markup": 63, "markup_head_1_list": 63, "simple_markup": 63, "p_markup__simple_markup": 63, "p_markup_braced_list__chr123__markup_braced_list_body__chr125": 63, "markup_braced_list": 63, "markup_braced_list_bodi": 63, "p_markup_braced_list_body__empti": 63, "p_markup_braced_list_body__markup_braced_list_body__markup": 63, "p_markup_braced_list_body__markup_braced_list_body__markup_list": 63, "p_markup_command_basic_arguments__expect_markup_list__markup_command_list_arguments__markup_list": 63, "markup_command_basic_argu": 63, "expect_markup_list": 63, "markup_command_list_argu": 63, "p_markup_command_basic_arguments__expect_no_more_arg": 63, "p_markup_command_basic_arguments__expect_scm__markup_command_list_arguments__embedded_scm_clos": 63, "p_markup_command_list__markup_list_function__markup_command_list_argu": 63, "markup_command_list": 63, "markup_list_funct": 63, "p_markup_command_list_arguments__expect_markup__markup_command_list_arguments__markup": 63, "expect_markup": 63, "p_markup_command_list_arguments__markup_command_basic_argu": 63, "p_markup_composed_list__markup_head_1_list__markup_braced_list": 63, "markup_composed_list": 63, "p_markup_head_1_item__markup_function__expect_markup__markup_command_list_argu": 63, "markup_head_1_item": 63, "markup_funct": 63, "p_markup_head_1_list__markup_head_1_item": 63, "p_markup_head_1_list__markup_head_1_list__markup_head_1_item": 63, "p_markup_list__markuplist_identifi": 63, "p_markup_list__markup_braced_list": 63, "p_markup_list__markup_command_list": 63, "p_markup_list__markup_composed_list": 63, "p_markup_list__markup_scm__markuplist_identifi": 63, "markup_scm": 63, "p_markup_scm__embedded_scm_bare__backup": 63, "p_markup_top__markup_head_1_list__simple_markup": 63, "p_markup_top__markup_list": 63, "p_markup_top__simple_markup": 63, "p_multiplied_duration__multiplied_duration__chr42__fract": 63, "p_multiplied_duration__multiplied_duration__chr42__bare_unsign": 63, "p_multiplied_duration__steno_dur": 63, "steno_dur": 63, "p_music__composite_mus": 63, "p_music__simple_mus": 63, "simple_mus": 63, "p_music_arg__composite_mus": 63, "p_music_arg__simple_mus": 63, "p_music_bare__music_identifi": 63, "music_identifi": 63, "p_music_bare__grouped_music_list": 63, "p_music_function_call__music_function__function_arglist": 63, "music_funct": 63, "p_music_function_chord_body__music_function__music_function_chord_body_arglist": 63, "p_music_function_chord_body_arglist__expect_scm__music_function_chord_body_arglist__embedded_scm_chord_bodi": 63, "p_music_function_chord_body_arglist__function_arglist_bar": 63, "p_music_function_event__music_function__function_arglist_clos": 63, "music_function_ev": 63, "p_music_list__empti": 63, "p_music_list__music_list__embedded_scm": 63, "p_music_list__music_list__error": 63, "p_music_list__music_list__mus": 63, "p_music_property_def__simple_music_property_def": 63, "music_property_def": 63, "simple_music_property_def": 63, "p_note_chord_element__chord_body__optional_notemode_duration__post_ev": 63, "p_number_expression__number_expression__chr43__number_term": 63, "number_term": 63, "p_number_expression__number_expression__chr45__number_term": 63, "p_number_expression__number_term": 63, "p_number_factor__chr45__number_factor": 63, "number_factor": 63, "p_number_factor__bare_numb": 63, "p_number_term__number_factor": 63, "p_number_term__number_factor__chr42__number_factor": 63, "p_number_term__number_factor__chr47__number_factor": 63, "p_octave_check__chr61": 63, "p_octave_check__chr61__sub_quot": 63, "sub_quot": 63, "p_octave_check__chr61__sup_quot": 63, "sup_quot": 63, "p_octave_check__empti": 63, "p_optional_context_mod__empti": 63, "p_optional_context_mod__context_modif": 63, "p_optional_id__chr61__simple_str": 63, "p_optional_id__empti": 63, "p_optional_notemode_duration__empti": 63, "p_optional_notemode_duration__multiplied_dur": 63, "p_optional_rest__empti": 63, "optional_rest": 63, "p_optional_rest__rest": 63, "p_output_def__output_def_body__chr125": 63, "output_def_bodi": 63, "p_output_def_body__output_def_body__assign": 63, "p_output_def_body__output_def_head_with_mode_switch__chr123": 63, "output_def_head_with_mode_switch": 63, "p_output_def_body__output_def_head_with_mode_switch__chr123__output_def_identifi": 63, "output_def_identifi": 63, "p_output_def_head__layout": 63, "output_def_head": 63, "p_output_def_head__midi": 63, "p_output_def_head__pap": 63, "p_output_def_head_with_mode_switch__output_def_head": 63, "p_pitch__pitch_identifi": 63, "pitch_identifi": 63, "p_pitch__steno_pitch": 63, "steno_pitch": 63, "p_pitch_also_in_chords__pitch": 63, "p_pitch_also_in_chords__steno_tonic_pitch": 63, "steno_tonic_pitch": 63, "p_post_event__chr45__fing": 63, "p_post_event__post_event_nofing": 63, "p_post_event_nofinger__chr94__fing": 63, "p_post_event_nofinger__chr95__fing": 63, "p_post_event_nofinger__extend": 63, "p_post_event_nofinger__hyphen": 63, "p_post_event_nofinger__direction_less_ev": 63, "p_post_event_nofinger__script_dir__direction_less_ev": 63, "script_dir": 63, "p_post_event_nofinger__script_dir__direction_reqd_ev": 63, "p_post_event_nofinger__script_dir__music_function_ev": 63, "p_post_event_nofinger__string_number_ev": 63, "string_number_ev": 63, "p_post_events__empti": [63, 64], "p_post_events__post_events__post_ev": [63, 64], "p_property_operation__override__simple_string__property_path__chr61__scalar": 63, "scalar": 63, "p_property_operation__revert__simple_string__embedded_scm": 63, "p_property_operation__string__chr61__scalar": 63, "p_property_operation__unset__simple_str": 63, "p_property_path__property_path_revv": 63, "property_path_revv": 63, "p_property_path_revved__embedded_scm_clos": 63, "p_property_path_revved__property_path_revved__embedded_scm_clos": 63, "p_questions__empti": 63, "p_questions__questions__chr63": 63, "p_scalar__bare_numb": 63, "p_scalar__embedded_scm_arg": 63, "p_scalar_closed__bare_numb": 63, "scalar_clos": 63, "p_scalar_closed__embedded_scm_arg_clos": 63, "p_scm_function_call__scm_function__function_arglist": 63, "p_scm_function_call_closed__scm_function__function_arglist_clos": 63, "p_score_block__score__chr123__score_body__chr125": 63, "score_bodi": 63, "p_score_body__score_identifi": 63, "score_identifi": 63, "p_score_body__mus": 63, "p_score_body__score_body__lilypond_head": 63, "p_score_body__score_body__output_def": 63, "p_script_abbreviation__angle_clos": 63, "p_script_abbreviation__chr33": 63, "p_script_abbreviation__chr43": 63, "p_script_abbreviation__chr45": 63, "p_script_abbreviation__chr46": 63, "p_script_abbreviation__chr94": 63, "p_script_abbreviation__chr95": 63, "p_script_dir__chr45": 63, "p_script_dir__chr94": 63, "p_script_dir__chr95": 63, "p_sequential_music__sequential__braced_music_list": 63, "p_sequential_music__braced_music_list": 63, "p_simple_chord_elements__simple_el": 63, "simple_el": 63, "p_simple_element__restname__optional_notemode_dur": 63, "restnam": [63, 64], "p_simple_markup__markup_function__markup_command_basic_argu": 63, "p_simple_markup__markup_identifi": 63, "p_simple_markup__score__chr123__score_body__chr125": 63, "p_simple_markup__str": 63, "p_simple_markup__string_identifi": 63, "p_simple_music__context_chang": 63, "p_simple_music__event_chord": 63, "p_simple_music__music_property_def": 63, "p_simple_music_property_def__override__context_prop_spec__property_path__chr61__scalar": 63, "p_simple_music_property_def__revert__context_prop_spec__embedded_scm": 63, "p_simple_music_property_def__set__context_prop_spec__chr61__scalar": 63, "p_simple_music_property_def__unset__context_prop_spec": 63, "p_simple_string__str": 63, "p_simple_string__string_identifi": 63, "p_simultaneous_music__double_angle_open__music_list__double_angle_clos": 63, "double_angle_open": 63, "double_angle_clos": 63, "p_simultaneous_music__simultaneous__braced_music_list": 63, "p_start_symbol__lilypond": 63, "start_symbol": 63, "p_steno_duration__duration_identifier__dot": 63, "duration_identifi": 63, "p_steno_duration__bare_unsigned__dot": 63, "p_steno_pitch__notename_pitch": 63, "p_steno_pitch__notename_pitch__sub_quot": 63, "p_steno_pitch__notename_pitch__sup_quot": 63, "p_steno_tonic_pitch__tonicname_pitch": 63, "tonicname_pitch": 63, "p_steno_tonic_pitch__tonicname_pitch__sub_quot": 63, "p_steno_tonic_pitch__tonicname_pitch__sup_quot": 63, "p_string__str": [63, 65], "p_string__string_identifi": 63, "p_string__string__chr43__str": 63, "p_string_number_event__e_unsign": 63, "e_unsign": 63, "p_sub_quotes__chr44": 63, "p_sub_quotes__sub_quotes__chr44": 63, "p_sup_quotes__chr39": 63, "p_sup_quotes__sup_quotes__chr39": 63, "p_tempo_event__tempo__scalar": 63, "p_tempo_event__tempo__scalar_closed__steno_duration__chr61__tempo_rang": 63, "tempo_rang": 63, "p_tempo_event__tempo__steno_duration__chr61__tempo_rang": 63, "p_tempo_range__bare_unsign": 63, "p_tempo_range__bare_unsigned__chr45__bare_unsign": 63, "p_toplevel_expression__composite_mus": 63, "p_toplevel_expression__full_markup": 63, "p_toplevel_expression__full_markup_list": 63, "p_toplevel_expression__lilypond_head": 63, "p_toplevel_expression__output_def": 63, "p_toplevel_expression__score_block": 63, "p_tremolo_type__chr58": 63, "p_tremolo_type__chr58__bare_unsign": 63, "subset": [64, 116, 130], "greedi": 64, "variou": 64, "p_apostrophes__apostroph": 64, "apostroph": 64, "p_apostrophes__apostrophes__apostroph": 64, "p_beam__bracket_l": 64, "bracket_l": 64, "p_beam__bracket_r": 64, "bracket_r": 64, "p_chord_body__chord_pitch": 64, "chord_pitch": 64, "p_chord_body__chord_pitches__positive_leaf_dur": 64, "positive_leaf_dur": 64, "p_chord_pitches__carat_l__pitches__carat_r": 64, "carat_l": 64, "carat_r": 64, "p_commas__comma": 64, "comma": [64, 106], "p_commas__commas__comma": 64, "p_component__contain": 64, "p_component__fixed_duration_contain": 64, "fixed_duration_contain": 64, "p_component__leaf": 64, "p_component__tuplet": 64, "p_component_list__empti": 64, "component_list": [64, 71], "p_component_list__component_list__compon": 64, "p_container__brace_l__component_list__brace_r": 64, "brace_l": 64, "brace_r": 64, "p_dots__dots__dot": 64, "p_fixed_duration_container__brace_l__fraction__brace_r": 64, "p_leaf__leaf_body__post_ev": 64, "leaf_bodi": 64, "p_leaf_body__chord_bodi": 64, "p_leaf_body__note_bodi": 64, "note_bodi": 64, "p_leaf_body__rest_bodi": 64, "rest_bodi": 64, "p_measure__pipe__fraction__component_list__pip": 64, "p_negative_leaf_duration__integer_n__dot": 64, "negative_leaf_dur": 64, "integer_n": 64, "p_note_body__pitch": 64, "p_note_body__pitch__positive_leaf_dur": 64, "p_note_body__positive_leaf_dur": 64, "p_pitch__pitchnam": 64, "p_pitch__pitchname__apostroph": 64, "p_pitch__pitchname__comma": 64, "p_pitches__pitch": 64, "p_pitches__pitches__pitch": 64, "p_positive_leaf_duration__integer_p__dot": 64, "integer_p": 64, "p_post_event__beam": 64, "p_post_event__slur": 64, "p_post_event__ti": 64, "p_rest_body__restnam": 64, "p_rest_body__restname__positive_leaf_dur": 64, "p_rest_body__negative_leaf_dur": 64, "p_slur__paren_l": 64, "paren_l": 64, "p_slur__paren_r": 64, "paren_r": 64, "p_start__empti": 64, "p_start__start__compon": 64, "p_start__start__measur": 64, "p_tie__tild": 64, "tild": 64, "p_tuplet__fraction__contain": 64, "t_fraction": 64, "t_integer_n": 64, "t_integer_p": 64, "t_pitchnam": 64, "boolean": [64, 65, 66, 68, 85], "mimic": 65, "charact": [65, 77], "intend": [65, 97, 107], "conjunct": 65, "p_boolean__boolean": 65, "p_constant__boolean": 65, "p_constant__numb": 65, "p_constant__str": 65, "p_data__empti": 65, "p_data__data__datum": 65, "datum": 65, "p_datum__const": 65, "p_datum__list": 65, "p_datum__symbol": 65, "p_datum__vector": 65, "p_expression__quote__datum": 65, "p_expression__const": 65, "p_expression__vari": 65, "p_form__express": 65, "p_forms__empti": 65, "p_forms__forms__form": 65, "p_list__l_paren__data__r_paren": 65, "l_paren": 65, "r_paren": 65, "p_list__l_paren__data__datum__period__datum__r_paren": 65, "p_number__decim": 65, "p_number__hexadecim": 65, "hexadecim": 65, "p_number__integ": 65, "p_program__form": 65, "p_symbol__identifi": 65, "p_variable__identifi": 65, "p_vector__hash__l_paren__data__r_paren": 65, "t_boolean": 65, "t_decim": 65, "t_hash": 65, "t_hexadecim": 65, "t_identifi": 65, "t_integ": 65, "t_l_paren": 65, "t_r_paren": 65, "t_anyth": 65, "t_quot": 65, "nt": 65, "t_whitespac": 65, "payload": 66, "eight": [66, 110, 123], "total_length": 66, "sixteen": [66, 110], "improp": [66, 71, 92], "siev": 66, "psappha": 66, "sieve_1a": 66, "sieve_1b": 66, "sieve_1": 66, "sieve_2a": 66, "sieve_2b": 66, "sieve_2": 66, "sieve_3": 66, "sieve_4": 66, "sieve_5a": 66, "sieve_5b": 66, "sieve_5": 66, "sieve_6a": 66, "sieve_6b": 66, "sieve_6": 66, "sieve_7a": 66, "sieve_7b": 66, "sieve_7": 66, "get_boolean_vector": 66, "reject": [66, 105], "OR": [66, 79], "index_first": 66, "index_last": 66, "fourth": [66, 101], "fifth": 66, "acycl": 66, "__and__": [66, 67, 79], "AND": [66, 77, 79, 108], "pattern_3": 66, "__invert__": [66, 79], "plu": 66, "__or__": [66, 67, 79], "__xor__": [66, 67, 79], "xor": [66, 79], "780": 66, "ones": 66, "get_matching_item": 66, "mach": 66, "abcdefghijklmnopqrstuvwxyz": 66, "h": 66, "from_vector": 66, "index_al": [66, 74], "creation": [66, 103], "get_matching_pattern": 66, "get_matching_payload": 66, "fifteen": 66, "bqf": 67, "pc": 67, "set_": 67, "classic": 67, "set_1": 67, "set_2": 67, "__rand__": 67, "__ror__": 67, "__rxor__": 67, "get_normal_ord": 67, "pc_set": [67, 75], "degre": [67, 77, 99], "symmetri": 67, "get_prime_form": 67, "nonequival": 67, "intersect": [67, 79], "isdisjoint": 67, "issubset": 67, "report": [67, 72], "issuperset": 67, "symmetric_differ": 67, "symmetr": 67, "union": [67, 69, 73], "cardin": [67, 75], "inclus": 67, "c0": 67, "c12": 67, "850": 67, "range_1": 67, "range_2": 67, "range_3": 67, "from_octav": 67, "bqf1": 67, "gqs1": 67, "aq": [67, 69], "set_3": 67, "set_1_copi": 67, "twelv": 67, "row_": [67, 112], "row_2": 67, "row_3": 67, "voice_horizont": 67, "initial_octav": 67, "voice_vert": 67, "as_li": 68, "ly_file_path": 68, "illustrate_funct": 68, "as_midi": 68, "midi_file_path": 68, "remove_li": 68, "as_pdf": 68, "pdf_file_path": 68, "as_png": 68, "png_file_path": 68, "png": 68, "preview": 68, "resolut": 68, "autogener": 68, "ssss": 69, "accidental_1": 69, "accidental_2": 69, "accidental_3": 69, "ctq": 69, "pitch_carri": 69, "carrier": [69, 81], "cent": 69, "direction_numb": 69, "interval_class": 69, "ascend": [69, 72, 79, 111, 114], "ninth": 69, "qualiti": [69, 99], "diaton": 69, "m": [69, 74, 77, 107, 117, 118, 119, 124, 136, 137], "m10": 69, "interval_1": 69, "interval_2": 69, "interval_3": 69, "a25": 69, "from_pitch_carri": 69, "pitch_carrier_1": 69, "pitch_carrier_2": 69, "css": 69, "cff": 69, "aaaa1": 69, "d9": 69, "dd2": 69, "ddd": 69, "atq": 69, "dddd": 69, "dff": [69, 76], "dfff": 69, "dd9": 69, "dffff": 69, "ddd9": 69, "dim2": 69, "staff_spac": 69, "interval_class_1": 69, "interval_class_2": 69, "interval_class_3": 69, "perfect": 69, "quarterton": 69, "aqs3": 69, "correct": [69, 73, 105], "pitch_3": 69, "addit": [69, 103], "4777": 69, "notimplementederror": 69, "get_nam": [69, 114], "implicitli": 69, "simplifi": 69, "alter": [69, 84, 98], "maintain": [69, 72, 79, 103, 120], "cssq": 69, "cfffqf": 69, "from_hertz": 69, "hertz": 69, "440": 69, "519": 69, "displai": [69, 125], "frequenc": 69, "523": 69, "2511306011972": 69, "554": 69, "3652619537442": 69, "cs5": 69, "cqs5": 69, "named_interv": 69, "pitch_class_1": 69, "pitch_class_2": 69, "pitch_class_3": 69, "3686": 69, "pitch_class_label": 69, "signed_str": 69, "interpol": [69, 83, 100, 101], "tranpos": 69, "261": 69, "6255653005986": 69, "4056": 69, "octave_1": 69, "octave_2": 69, "octave_3": 69, "from_tick": 69, "One": [69, 77], "ratio_1": 70, "ratio_2": 70, "ratio_3": 70, "partition_integ": 70, "ircam": [71, 102], "forth": [71, 99], "leaf_a": 71, "leaf_b": 71, "is_pitch": [71, 73, 92], "another_contain": 71, "concaten": [71, 85, 92, 110], "commut": [71, 92], "operand": [71, 74, 92], "pulse_dur": [71, 92], "expr": [71, 92], "new_item": [71, 92], "depth_first": [71, 92], "top_down": [71, 92], "puls": [71, 92, 99, 112], "graph_ord": [71, 92], "root_contain": [71, 92], "outer_contain": [71, 92], "inner_contain": [71, 92], "inner": [71, 92, 112], "node_a": [71, 92], "node_b": [71, 92], "node_c": [71, 92], "node_d": [71, 92], "parentage_ratio": [71, 92], "sibl": [71, 92], "stop_offset": [71, 79, 92], "micro": 71, "resembl": 71, "lisp": 71, "maniupl": 71, "rhythm_tree_list": 71, "rhythm_tree_contain": 71, "base_dur": 71, "p_container__lparen__duration__node_list_closed__rparen": 71, "lparen": 71, "node_list_clos": 71, "rparen": 71, "p_leaf__integ": 71, "p_node__contain": 71, "p_node__leaf": 71, "p_node_list__node_list__node_list_item": 71, "node_list": 71, "node_list_item": 71, "p_node_list__node_list_item": 71, "p_node_list_closed__lparen__node_list__rparen": 71, "p_node_list_item__nod": 71, "p_toplevel__empti": 71, "toplevel": 71, "p_toplevel__toplevel__nod": 71, "t_durat": 71, "parse_rtm_syntax": 71, "baseclass": 72, "aftergracefract": 72, "loos": 72, "main": [72, 73], "1074": 72, "contrast": 72, "typograph": [72, 124, 134, 137], "vanilla": [72, 128], "likewis": [72, 110], "longstand": 72, "sugar": 72, "supportsindex": 72, "tremolo_contain": [72, 101], "force_fract": [72, 101], "second_tuplet": 72, "doubli": 72, "third_tuplet": 72, "dod": 72, "tuplet_3": 72, "shrink": 72, "encompass": 72, "preserve_dur": 72, "diminut": [72, 101], "normalize_multipli": 72, "rest_fil": 72, "rewrite_dot": [72, 101], "set_minimum_denomin": 72, "toggle_prol": 72, "necessari": [72, 97, 107], "diminsh": 72, "trivializ": [72, 101], "rewritten": [72, 101], "redud": 72, "nontrivializ": 72, "from_dur": 72, "from_pitch_and_dur": 72, "scaledur": [72, 112], "colon_str": 72, "colon": 72, "globalcontext": 72, "meter_voic": 72, "violinstaff": 72, "myviolinstaff": 72, "unord": 72, "customcontext": 72, "affect": [72, 101], "mezzofort": 72, "mi": [72, 125], "fa": [72, 125], "new_chord": 72, "global_multimeasure_rest": 72, "1049": [72, 79], "multimeasure_rest": 72, "new_not": 72, "s4": 72, "global_skip": 72, "snare": 72, "is_cautionari": 72, "is_forc": 72, "is_parenthes": 72, "drum": 72, "suviv": 72, "cautionari": 72, "named_pitch": 72, "__iadd__": [72, 79], "__imul__": [72, 79], "kwarg": [72, 79], "9223372036854775807": [72, 79], "stabl": [72, 79], "is_trivi": 73, "tail": 73, "lambda": [73, 74, 76, 79], "group_bi": [73, 74], "group_by_contigu": 73, "regroup": [73, 92], "group_by_pitch": 73, "group_by_dur": 73, "group_by_length": 73, "group_by_measur": [73, 101, 110], "partition_by_count": [73, 74, 124, 135, 137], "pickup": 73, "nonhead": 73, "enchain": [73, 74, 76, 82], "fuse_overhang": 73, "overhang": [73, 74], "cyan": 73, "noncycl": [73, 101], "partition_by_dur": 73, "partition_by_ratio": 73, "with_next_leaf": [73, 101], "piano_ped": [73, 76], "with_previous_leaf": 73, "cd": [74, 107], "gh": 74, "ij": 74, "kl": 74, "has_dupl": 74, "is_decreas": 74, "is_increas": 74, "is_permut": 74, "is_repetition_fre": 74, "repetit": 74, "nwise": 74, "indefinit": [74, 78], "reversed_": 74, "partition_by_ratio_of_length": 74, "partition_by_ratio_of_weight": 74, "partition_by_weight": 74, "allow_part_weight": 74, "1825": 74, "97": [74, 79], "98": 74, "remove_repeat": 74, "repeat_to_length": 74, "repeat_to_weight": 74, "allow_tot": 74, "replace_at": 74, "new_materi": 74, "congruent": 74, "retain": 74, "segment_1": 74, "segment_2": 74, "sum_by_sign": 74, "sum_": 74, "sg2": 75, "set_class": 75, "sg1": 75, "tetrachord": 75, "pentachord": 75, "list_set_class": 75, "46": [75, 79], "352": 75, "224": [75, 79], "from_pitch_class_set": 75, "pitch_class_set": 75, "is_inversion_equival": 75, "prime_form": 75, "inverted_pitch_class_set": 75, "inverted_set_class": 75, "etc": [76, 94, 102], "beam_lone_not": [76, 101], "beam_rest": [76, 101], "span_beam_count": 76, "stemlet_length": [76, 101], "hide_middle_note_head": 76, "hide_middle_stem": 76, "hide_stem_selector": 76, "left_broken": 76, "right_broken": 76, "right_broken_show_next": 76, "show_to_join_broken_spann": 76, "hide_to_join_broken_spann": 76, "broken": 76, "descriptor": [76, 88], "start_ottava": 76, "stop_ottava": 76, "phrasing_slur": 76, "bs4": 76, "threshold": [76, 101], "trill_spann": 76, "capitalize_start": 77, "capit": 77, "noniniti": 77, "lowercas": [77, 108], "delimit_word": 77, "separate_cap": 77, "word": [77, 78], "4and5": 77, "scaledegrees4and5": 77, "scaledegrees4and": 77, "scale_degrees_4_and_5": 77, "mrm": 77, "mrhm": 77, "mrh": 77, "from_roman": 77, "ix": 77, "143": 77, "fromroman": 77, "venv": [77, 117, 118, 119, 124, 136, 137], "lib": 77, "python3": 77, "invalidromannumeralerror": 77, "invalid": 77, "is_lilypond_identifi": 77, "underscor": 77, "violinon": 77, "violin_on": 77, "violini": 77, "violin_i": 77, "violin1": 77, "1_1": 77, "1_music_voic": 77, "music_voice_1": 77, "is_roman": 77, "xi": 77, "ci": [77, 105], "is_shout_cas": 77, "shoutcas": 77, "foo_bar": 77, "foobar": [77, 91], "plural": 77, "catenari": 77, "brush": 77, "sort_roman": 77, "tromboneii": 77, "tromboneiii": 77, "trombonei": 77, "violinxi": 77, "violinx": 77, "violinix": 77, "strip_roman": 77, "strip": [77, 78, 101], "trombon": 77, "tromboneiv": 77, "to_shout_cas": 77, "shout": 77, "to_tridirectional_lilypond_symbol": 77, "tridirect": 77, "to_tridirectional_ordinal_const": 77, "to_upper_camel_cas": 77, "camel": 77, "196": 78, "205": 78, "only_edition_tag": 78, "209": 78, "forbidden": [78, 101], "only_edit": 78, "invert_edition_tag": 78, "not_edit": 78, "prefix": 78, "red_markup": 78, "left_shift_tag": 78, "toggl": 78, "prepend_empty_chord": 78, "double_tag": 78, "tag_": 78, "shift": 78, "remove_tag": 78, "item_class": [79, 94, 96], "timespan_operand": 79, "offset_count": 79, "overlai": 79, "setdash": 79, "666666666666668": 79, "33333333333334": 79, "66666666666667": 79, "00000000000001": 79, "151": 79, "timespan_1": 79, "timespan_2": 79, "timespan_3": 79, "timespan_4": 79, "annotated_timespan": 79, "split_at_offset": 79, "divide_by_ratio": 79, "get_overlap_with_timespan": 79, "reflect": 79, "round_offset": 79, "must_be_wellform": 79, "set_dur": 79, "set_offset": 79, "translate_offset": 79, "start_offset_transl": 79, "stop_offset_transl": 79, "prece": 79, "91": [79, 101], "149": 79, "setgrai": 79, "01": [79, 104, 108], "375": 79, "8125": 79, "875": 79, "625": 79, "6875": 79, "85": [79, 98, 101], "122": 79, "130": [79, 89, 99], "449": 79, "113": 79, "299": [79, 80], "82": 79, "33333333333333": 79, "clip_timespan_dur": 79, "28571428571428": 79, "compute_logical_and": 79, "428571428571427": 79, "108": 79, "14285714285714": 79, "129": 79, "57142857142856": 79, "150": [79, 99], "99999999999997": 79, "649": 79, "setwis": 79, "compute_logical_or": 79, "857142857142854": 79, "106": 79, "14285714285712": 79, "81818181818183": 79, "72727272727273": 79, "compute_logical_xor": 79, "89": [79, 80], "compute_overlap_factor": 79, "across": [79, 101, 103], "compute_overlap_factor_map": 79, "overlap_factor": 79, "explod": 79, "inventory_count": 79, "densiti": 79, "evenli": 79, "162162162162163": 79, "270270270270274": 79, "324324324324326": 79, "432432432432435": 79, "48648648648649": 79, "54054054054055": 79, "70270270270271": 79, "810810810810814": 79, "86486486486487": 79, "69": [79, 101], "91891891891892": 79, "02702702702703": 79, "0810810810811": 79, "13513513513514": 79, "24324324324326": 79, "35135135135135": 79, "40540540540542": 79, "118": 79, "56756756756758": 79, "62162162162163": 79, "72972972972974": 79, "138": 79, "83783783783784": 79, "136": 79, "optim": [79, 84, 86, 103], "timespan_list": 79, "exploded_timespan_list": 79, "get_timespan_that_satisfies_time_rel": 79, "time_rel": 79, "satisifi": 79, "satisfi": 79, "get_timespans_that_satisfy_time_rel": 79, "277": 79, "has_timespan_that_satisfies_time_rel": 79, "include_tangent_timespan": 79, "tangent": 79, "indexerror": 79, "749": 79, "remove_degenerate_timespan": 79, "degener": 79, "repeat_to_stop_offset": 79, "131": 79, "rounded_timespan": 79, "42857142857142": 79, "95": 79, "61538461538461": 79, "69230769230769": 79, "23076923076923": 79, "84615384615384": 79, "76923076923077": 79, "349": 79, "599": 79, "1649": 79, "all_are_contigu": 79, "all_are_nonoverlap": 79, "nonoverlap": 79, "all_are_wellform": 79, "is_sort": 79, "latest": 79, "get_attribut": 80, "bundle_1": 80, "bundle_2": 80, "bundle_3": 80, "unless": 80, "313": 80, "iterate_vertical_mo": 81, "hase": 81, "vm": 81, "tandem": 81, "attack_count": 81, "overlap_compon": 81, "start_compon": 81, "governor": 81, "evalu": [81, 103], "notes_and_chord": 81, "overlap_leav": 81, "overlap_not": 81, "start_leav": 81, "start_not": 81, "iterate_leaf_pair": 81, "leaf_pair": 81, "iterate_pitch_pair": 81, "check_beamed_long_not": 82, "tabulate_wellformed": 82, "wrong": 82, "unmatch": 82, "untermin": 82, "check_duplicate_id": 82, "check_empty_contain": 82, "violat": [82, 105], "check_missing_par": 82, "check_notes_on_wrong_clef": 82, "check_out_of_range_pitch": 82, "allow_ind": 82, "allow_out_of_rang": 82, "check_overlapping_text_spann": 82, "iff": 82, "check_unmatched_stop_text_span": 82, "check_unterminated_hairpin": 82, "bang": 82, "check_unterminated_text_spann": 82, "tabul": 82, "wellformed": 82, "attackpointoptim": [83, 87, 98, 102], "measurewiseattackpointoptim": [83, 84, 85, 87, 98], "naiveattackpointoptim": [83, 84, 87, 98], "nullattackpointoptim": [83, 84, 87, 98], "gracehandl": [83, 87, 98, 102], "collapsinggracehandl": [83, 85, 87, 98], "concatenatinggracehandl": [83, 85, 87, 98], "discardinggracehandl": [83, 85, 87, 98], "heurist": [83, 87, 95, 96, 98, 102], "distanceheurist": [83, 86, 87, 98], "jobhandl": [83, 87, 98, 102], "paralleljobhandl": [83, 87, 88, 98], "paralleljobhandlerwork": [83, 87, 88], "serialjobhandl": [83, 87, 88, 98], "qeventproxi": [83, 87, 92, 95, 97, 99, 102], "qevent": [83, 85, 87, 89, 91, 95, 99, 102], "pitchedqev": [83, 87, 89, 90, 91, 92, 97, 99], "silentqev": [83, 87, 90, 91, 97], "terminalqev": [83, 87, 90, 91], "qeventsequ": [83, 84, 85, 86, 87, 90, 98, 102], "qgrid": [83, 85, 86, 87, 90, 95, 97, 99, 102], "qgridcontain": [83, 87, 92], "qgridleaf": [83, 87, 92], "qschemaitem": [83, 87, 94, 102], "beatwiseqschemaitem": [83, 87, 93, 94], "measurewiseqschemaitem": [83, 87, 93, 94], "qschema": [83, 87, 96, 98, 102], "beatwiseqschema": [83, 87, 94, 98], "measurewiseqschema": [83, 84, 85, 87, 94, 98], "qtargetitem": [83, 87, 102], "qtargetbeat": [83, 86, 87, 94, 95, 96], "qtargetmeasur": [83, 87, 94, 95, 96], "qtarget": [83, 87, 94, 98, 102], "beatwiseqtarget": [83, 87, 94, 96, 98], "measurewiseqtarget": [83, 87, 94, 96], "quantizationjob": [83, 87, 88, 95, 102], "searchtre": [83, 87, 93, 94, 95, 97, 98, 102], "unweightedsearchtre": [83, 85, 87, 94, 95, 97, 99], "weightedsearchtre": [83, 87, 99], "rmaker": [83, 102], "incis": [83, 100, 101], "spell": [83, 100, 101], "talea": [83, 100, 101], "multiprocess": [83, 87, 88, 97], "baseprocess": [83, 87, 88], "abjadext": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "attack": [84, 85, 90, 92, 98, 101], "individu": [84, 105], "post": 84, "quantiz": [84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102], "measurewis": [84, 93, 94, 95, 96], "regard": 84, "act": 84, "source_tempo": 84, "q_event": [84, 85, 89, 90, 91, 92, 95, 97], "from_tempo_scaled_leav": [84, 91], "target_tempo": 84, "q_schema": [84, 85, 94, 98], "wise": [84, 98], "attack_point_optim": [84, 85, 96, 98], "naiv": 84, "handler": [85, 88], "collaps": [85, 92], "997": 85, "q_event_sequ": [85, 86, 96, 98], "from_millisecond_pitch_pair": [85, 86, 91, 98], "grace_handl": [85, 96, 98], "discard_grace_rest": 85, "grace_dur": 85, "replace_rest_with_final_grace_not": 85, "999": 85, "handle_orphaned_q_event_proxi": 85, "last_leaf": 85, "q_event_proxi": [85, 92, 97], "emb": 85, "400": 85, "search_tre": [85, 93, 94, 95, 97, 99], "use_full_measur": [85, 93, 94, 95], "attach_tempo": [85, 96, 98], "concanten": 85, "criteria": 86, "q_target_beat": [86, 95], "smallest": 86, "fewest": [86, 101], "abstact": 88, "job": [88, 95, 97], "serial": 88, "cpu": 88, "job_queu": 88, "result_queu": 88, "worker": 88, "releas": [88, 104, 107], "resourc": 88, "held": 88, "is_al": 88, "aliv": 88, "timeout": 88, "wait": 88, "kill": 88, "send": 88, "sigkil": 88, "signal": 88, "terminateprocess": 88, "sigterm": 88, "authkei": 88, "daemon": 88, "exitcod": 88, "pid": 88, "sentinel": [88, 99], "window": 88, "beatspan": [89, 92, 93, 94, 95, 98], "possess": 90, "epxr": 90, "onset": 90, "silent": [90, 91], "signific": 90, "conveni": 91, "assist": 91, "500": [91, 97], "1250": 91, "750": [91, 92, 97], "from_millisecond_dur": 91, "2750": 91, "3250": 91, "4000": [91, 95], "fuse_sil": 91, "250": [91, 92, 97], "1750": 91, "3000": [91, 95], "from_millisecond_offset": 91, "from_millisecond_pitch_attachment_tupl": 91, "from_tempo_scaled_dur": 91, "174": 91, "17500": 91, "20000": 91, "40000": 91, "2500": 91, "4375": 91, "5000": 91, "duration_in_m": [91, 95, 96], "next_downbeat": 92, "onto": 92, "q_grid": [92, 95, 97, 99], "is_divis": 92, "downbeat": 92, "occur": 92, "virtual": [92, 107, 124, 136, 137], "q_event_a": [92, 97, 99], "q_event_b": [92, 97, 99], "proxy_a": [92, 97, 99], "proxy_b": [92, 97, 99], "fit_q_ev": [92, 99], "fit": 92, "regroup_leaves_with_unencessary_divis": 92, "q_event_prox": 92, "sort_q_events_by_index": 92, "subdivide_leaf": 92, "subdivis": [92, 99], "qgridleav": 92, "subdivide_leav": 92, "thu": [92, 99], "further": [92, 99, 101], "preceding_q_event_proxi": 92, "preced": 92, "succeeding_q_event_proxi": 92, "succeed": 92, "schema": [93, 94], "beatwis": [93, 94, 96], "unmet": 93, "q_schema_item": 93, "diachron": 94, "step": 94, "templat": 94, "ultim": 94, "concret": [94, 96, 129], "target_class": 94, "target_item_class": 94, "timestep": 94, "unit": [94, 101, 103], "smart": 94, "subscript": 94, "varieti": [94, 111], "similarli": 94, "descript": 94, "offset_in_m": 95, "job_id": [95, 97], "3750": 95, "q_target_measur": 95, "another_q_target_measur": 95, "mold": 96, "timepoint": 96, "qsequenc": 96, "job_handl": [96, 98], "copiabl": 97, "picklabl": 97, "q_event_c": 97, "proxy_c": 97, "enabl": 97, "environ": [97, 107, 124, 136, 137], "meaning": 97, "reconstruct": 97, "macro": 98, "tempi": 98, "measurewise_q_schema": 98, "beatwise_q_schema": 98, "tiechain": 98, "pleas": [98, 105], "issu": 98, "futur": 98, "280": 98, "q_target": 98, "suppos": 98, "pool": 98, "candid": 98, "strategi": 99, "default_definit": 99, "unweight": 99, "actual": [99, 103, 110], "rescal": 99, "permiss": 99, "obei": 99, "667": 99, "permit": 99, "pprint": 99, "max_depth": 99, "max_divis": 99, "all_composit": 99, "accelerando": 101, "previous_st": 101, "accelerandi": 101, "make_rhythm": 101, "nested_mus": 101, "feather_beam": 101, "duration_bracket": 101, "115": 101, "ritardandi": 101, "feather": 101, "beam_group": 101, "stemleftbeamcount": 101, "stemrightbeamcount": 101, "off": 101, "conjoint": 101, "poorli": 101, "force_rest": 101, "stemlet": 101, "rewrite_rest_fil": 101, "extract_trivi": 101, "consum": [101, 116], "make_statal_accelerandi": 101, "divisions_consum": 101, "logical_ties_produc": 101, "accelerando_rhythm_mak": 101, "beam_and_slash": 101, "end_count": 101, "even_divis": 101, "extra_count": 101, "32nd": 101, "64th": 101, "durtaion": 101, "from_count": 101, "force_diminut": 101, "force_augment": 101, "nonlast": 101, "earlier": 101, "ealier": 101, "silenc": 101, "rewrite_sustain": 101, "16th": 101, "8th": 101, "unprolated_note_count": 101, "modular_count": 101, "formula": 101, "ensur": 101, "force_not": 101, "force_repeat_ti": 101, "body_ratio": 101, "fill_with_rest": 101, "outer_divisions_onli": 101, "prefix_talea": 101, "prefix_count": 101, "suffix_talea": 101, "suffix_count": 101, "talea_denomin": 101, "cut": [101, 103], "nonfirst": 101, "glyph": 101, "wrap_in_time_signature_staff": 101, "incised_rhythm_mak": 101, "start_dur": 101, "stop_dur": 101, "invisible_mus": 101, "nongrace_leaves_in_each_tuplet": 101, "unti": 101, "rhythmmak": 101, "reduce_multipli": 101, "recip": 101, "reference_met": 101, "qualifi": 101, "noninti": 101, "rearticul": 101, "midwai": 101, "split_measur": 101, "tri": 101, "read_talea_once_onli": 101, "907a": 101, "907b": 101, "mononton": 101, "14642": 101, "_make_talea_rhythm_maker_mus": 101, "856": 101, "numeric_map": 101, "expanded_talea": 101, "_make_numeric_map": 101, "673": 101, "_split_talea_extended_to_weight": 101, "1026": 101, "incomplete_last_not": 101, "talea_weight_consum": 101, "talea_rhythm_mak": 101, "tact": 101, "tuplet_ratio": 101, "untuplet": 101, "mask": 101, "tuplet_rhythm_mak": 101, "unbeam": 101, "deatch": 101, "ritardando": 101, "monot": 101, "incorpor": 103, "matter": [103, 110], "textedit": 103, "notepad": 103, "jupyt": 103, "notebook": 103, "handi": 103, "spend": 103, "lot": [103, 110], "wonder": 103, "upper_voic": 103, "violin_staff": [103, 131], "gui": 103, "past": [103, 104], "lower_voic": 103, "moto": 103, "proportional_notation_dur": 103, "spacing_spann": 103, "strict_grace_spac": 103, "uniform_stretch": 103, "github": [103, 104, 105, 107, 121, 122, 123], "forgo": 103, "safekeep": 103, "repositori": [103, 105], "programmerli": 103, "consensu": 103, "favor": 103, "git": [103, 107], "workflow": [103, 108], "rope": 103, "hang": 103, "seemingli": 103, "mental": 103, "programm": [103, 116], "seem": 103, "enjoi": 103, "commit": 103, "push": 103, "pull": 103, "clone": 103, "dedic": [103, 123], "often": 103, "crucial": 103, "Such": 103, "refactor": 103, "bother": 103, "typehint": 103, "fact": 103, "worth": 103, "codebas": 103, "benefit": 103, "mypi": 103, "ecosystem": 103, "easier": [103, 108], "tradeoff": 103, "unnecessari": 103, "advis": 103, "java": 103, "architectur": 103, "namespac": 103, "incredibli": 103, "inher": 103, "role": 103, "mechan": 103, "acknowledg": [103, 105], "frustrat": 103, "circular": 103, "whatev": 103, "asymmetri": 103, "ok": 103, "tend": [103, 116], "chronolog": 103, "manifestli": 103, "ask": [103, 105, 108], "reimport": 103, "stackoverflow": 103, "serious": 103, "lai": 103, "v3": 104, "2022": [104, 117, 118, 119], "03": [104, 108], "2021": 104, "2019": [104, 109], "07": 104, "v2": [104, 116, 129], "2017": 104, "08": [104, 106], "2016": 104, "2014": [104, 106], "mail": 105, "googl": 105, "moder": 105, "instruct": [105, 120], "peopl": 105, "regardless": 105, "gender": 105, "race": 105, "sexual": 105, "disabl": 105, "religion": 105, "veteran": 105, "socioeconom": 105, "nation": 105, "friendli": 105, "patient": 105, "welcom": [105, 107, 117, 118, 119, 137], "especi": 105, "viewpoint": 105, "harass": 105, "belittl": 105, "mind": 105, "particularli": 105, "assumpt": 105, "being": [105, 116], "apolog": 105, "contact": 105, "baca": 105, "gmail": 105, "notic": 105, "confidenti": 105, "proud": 105, "overwhelm": 105, "contributor": 105, "everywher": 105, "gratefulli": 105, "music21": 105, "whom": 105, "adapt": 105, "travi": 105, "januari": 106, "configobj": 106, "ini": 106, "save": 106, "usernam": 106, "lilypond_includ": 106, "lilypond_languag": 106, "midi_play": 106, "pdf_viewer": 106, "en": 106, "wikipedia": 106, "wiki": 106, "ini_fil": 106, "maco": [106, 107, 120], "itun": 106, "linux": [106, 107, 120], "evinc": 106, "timid": 106, "view": 107, "offlin": 107, "first_step": 107, "html": [107, 117, 118, 119, 124, 136, 137], "dev": 107, "texliv": 107, "homebrew": 107, "brew": 107, "debian": 107, "ubuntu": 107, "apt": 107, "callabl": [107, 117, 118, 119], "commandlin": [107, 117, 118, 119], "20161225": 107, "0304": 107, "_imag": 107, "_static": 107, "galleri": 107, "2010": 107, "inv": 107, "sidebar": 107, "_modul": 107, "_mothbal": 107, "appendic": 107, "2020": 107, "modindex": 107, "_pend": 107, "genindex": 107, "_sourc": 107, "searchindex": 107, "brows": 107, "naviag": 107, "glue": 108, "chunk": 108, "shorter": 108, "semgent": 108, "faster": 108, "preliminari": 108, "simplest": 108, "vioin": 108, "glu": 108, "suffix": 108, "multifil": 108, "arab": 108, "download": 109, "confer": 109, "technologi": 109, "davancen": 109, "joseph": [109, 130], "heav": 109, "swai": 109, "surg": 109, "santa": 109, "cruz": 109, "gregori": [109, 123], "rowland": [109, 123], "thesi": 109, "random": 110, "mozart": 110, "dice": 110, "game": 110, "aleator": 110, "minuet": 110, "roll": 110, "fragment": [110, 111], "pen": 110, "At": 110, "heart": 110, "tradition": 110, "notabl": 110, "machin": 110, "readabl": 110, "measure_1_choic": 110, "measure_2_choic": 110, "measure_3_choic": 110, "measure_4_choic": 110, "measure_5_choic": 110, "measure_6_choic": 110, "measure_7_choic": 110, "d8": 110, "measure_8_choic": 110, "measure_9_choic": 110, "measure_10_choic": 110, "measure_11_choic": 110, "measure_12_choic": 110, "measure_13_choic": 110, "measure_14_choic": 110, "measure_15_choic": 110, "f8": 110, "measure_16_choic": 110, "make_corpu": 110, "measure_choice_list": 110, "choic": 110, "bass_str": 110, "treble_str": 110, "catch": 110, "intercept": 110, "easiest": 110, "seventeen": 110, "choose_measur": 110, "measure_poss": 110, "raw": 110, "rh_voic": [110, 115, 125, 127, 130], "lh_voic": 110, "treble_volta_contain": 110, "bass_volta_contain": 110, "treble_alternative_ending_contain": 110, "bass_alternative_ending_contain": 110, "make_subtitl": 110, "subtitl": [110, 131], "ein": 110, "musikalisch": 110, "wuerfelspiel": 110, "seed": 110, "randint": 110, "attr": 110, "w": 110, "halv": 111, "flip": 111, "regular": 111, "chromat": 111, "tranform": 111, "interval": 111, "luigi": 111, "nono": 111, "reproduc": 111, "diotima": 111, "2a": 111, "2b": 111, "2c": 111, "2d": 111, "mikh\u00efal": 112, "analyz": 112, "unsichtbar": 112, "farben": 112, "1999": 112, "openmus": [112, 116], "exhaust": 112, "catalogu": 112, "condit": [112, 117, 118, 119], "met": 112, "recreat": 112, "make_tuplet": 112, "outer_str": 112, "lone_note_denomin": 112, "lone_note_dur": 112, "lone_not": 112, "inner_tuplet": 112, "outer_tuplet": 112, "column_count": 112, "row_count": 112, "row_numb": 112, "row_1_staff": 112, "row_1_voic": 112, "row_2_staff": 112, "row_2_voic": 112, "row_3_staff": 112, "row_3_voic": 112, "row_4_staff": 112, "row_4_voic": 112, "row_5_staff": 112, "row_5_voic": 112, "row_6_staff": 112, "row_6_voic": 112, "row_7_staff": 112, "row_7_voic": 112, "row_8_staff": 112, "row_8_voic": 112, "row_9_staff": 112, "row_9_voic": 112, "row_10_staff": 112, "row_10_voic": 112, "row_11_staff": 112, "row_11_voic": 112, "accumul": 113, "1950": 113, "conclud": 113, "make_transposit": 113, "voice_": 113, "staff_": 113, "voice_0": 113, "IT": 113, "sub7": 113, "sub11": 113, "sub6": 113, "voice_3": 113, "sub9": 113, "staff_4": 113, "voice_4": 113, "sub10": 113, "staff_5": 113, "voice_5": 113, "sub8": 113, "staff_6": 113, "voice_6": 113, "sub2": 113, "staff_7": 113, "voice_7": 113, "sub4": 113, "staff_8": 113, "voice_8": 113, "sub3": 113, "staff_9": 113, "voice_9": 113, "sub0": 113, "staff_10": 113, "voice_10": 113, "sub5": 113, "staff_11": 113, "voice_11": 113, "sub1": 113, "karlheinz": 113, "stockhausen": 113, "gr\u00fcppen": 113, "1955": 113, "koblyakov": 113, "analysi": 113, "pierr": 113, "boulez": 113, "marteau": 113, "ma\u00eetr": 113, "screw": 113, "1954": 113, "example_voic": [114, 128], "example_staff": [114, 128, 132], "make_scal": 114, "mode_to_interv": 114, "mode_nam": 114, "eb4": 114, "gb4": 114, "db": 114, "bff": 114, "eff": 114, "lh_voice_1": 115, "lh_voice_2": 115, "lh_1": 115, "lh_2": 115, "to_barlin": 115, "b\u00e9la": 115, "bart\u00f3k": 115, "wander": 115, "mikrokosmo": 115, "unlik": 116, "max": 116, "graphic": 116, "audio": 116, "human": 116, "musician": 116, "abl": 116, "ye": 116, "expert": 116, "tutori": [116, 117, 118, 119, 124, 136, 137], "gnu": [117, 118, 119], "copyright": [117, 118, 119], "1996": [117, 118, 119], "hanwen": [117, 118, 119], "xs4all": [117, 118, 119], "nl": [117, 118, 119], "jannek": [117, 118, 119], "licens": [117, 118, 119], "invok": [117, 118, 119], "warranti": [117, 118, 119], "touch": 120, "corrado": 121, "rojac": 121, "rabbit": 121, "ensembl": [121, 122, 123], "infrequ": 121, "reiko": 121, "manab": 121, "carin": [121, 122], "levin": [121, 122], "percussionist": [121, 123], "trevorbaca": [121, 122, 123], "recursif": 121, "jack": [122, 123], "richard": 122, "hayn": 122, "chamber": 122, "pickford": 122, "elizabeth": 122, "weisser": 122, "carillon": 122, "tiffani": 122, "ng": 122, "jefftrevino": 122, "toda": 122, "ambara": 122, "mosaik": 122, "bariton": 122, "saxophon": [122, 123], "electr": 122, "nikel": 122, "plague_wat": 122, "prepar": 122, "wild": 122, "rumpu": 122, "theworldallaround": 122, "s\u00e9verin": 122, "ballon": 122, "malletkat": 122, "fredrik": 122, "wallberg": 122, "chronophoni": 122, "kaleidoskop": 122, "j\u00fcrgen": 122, "ruck": 122, "stefan": 122, "hussong": 122, "marta": 122, "klimasara": 122, "port": 123, "gilberto": 123, "agostinho": 123, "ryszard": 123, "lubieniecki": 123, "iowa": 123, "gregoryrevan": 123, "solo": 123, "mizzi": 123, "chalk_lin": 123, "hamon_shu": 123, "narrat": 123, "griffith": 123, "jonathan": 123, "hepfer": 123, "commiss": 123, "lo": 123, "angel": 123, "mondai": 123, "concert": 123, "recherch": 123, "faberg": 123, "ashlei": 123, "walter": 123, "naeht": 123, "frost": 123, "jare": 123, "redmond": 123, "mraz": 123, "eleven": 123, "50th": 123, "anniversari": 123, "boston": 123, "tanglewood": 123, "institut": 123, "nico": 123, "couck": 123, "distractfold": 123, "systemat": [124, 134, 137], "loop": [124, 130, 135, 137], "slur_part": [124, 135, 137], "last_not": [124, 135, 137], "tupletize_not": [124, 135, 137], "doul": [124, 135, 137], "tuplet_bracket": [124, 132, 135, 137], "happi": [124, 137], "newcom": 125, "sold": 125, "si": 125, "assembl": 127, "example_contain": 128, "example_staff_group": 128, "example_scor": [128, 132], "go": 128, "preload": 129, "predefin": 129, "woodblock_staff": 129, "migrat": 130, "tightli": 130, "coupl": 130, "haydn": 130, "sonata": 130, "hob": 130, "xvi": 130, "violin_voic": 131, "josquin": 131, "agnu": 131, "dei": 131, "missa": 131, "sexti": 131, "toni": 131, "click": 131, "scene": 131, "dynamicup": 132, "gustav": 132, "mahler": 132, "symphoni": 132, "movt": 132}, "objects": {"": [[43, 0, 0, "-", "abjad"], [83, 0, 0, "-", "abjadext"]], "abjad": [[27, 0, 0, "-", "bind"], [28, 0, 0, "-", "configuration"], [29, 0, 0, "-", "contextmanagers"], [30, 0, 0, "-", "contributions"], [31, 0, 0, "-", "cyclictuple"], [32, 0, 0, "-", "duration"], [33, 0, 0, "-", "dynamic"], [34, 0, 0, "-", "enumerate"], [35, 0, 0, "-", "enums"], [36, 0, 0, "-", "exceptions"], [37, 0, 0, "-", "ext"], [39, 0, 0, "-", "format"], [40, 0, 0, "-", "get"], [41, 0, 0, "-", "grace_corner_cases"], [42, 0, 0, "-", "illustrators"], [44, 0, 0, "-", "indicators"], [45, 0, 0, "-", "instruments"], [46, 0, 0, "-", "io"], [47, 0, 0, "-", "iterate"], [48, 0, 0, "-", "iterpitches"], [49, 0, 0, "-", "label"], [50, 0, 0, "-", "lilypondfile"], [51, 0, 0, "-", "lyproxy"], [52, 0, 0, "-", "makers"], [53, 0, 0, "-", "math"], [54, 0, 0, "-", "meter"], [55, 0, 0, "-", "metricmodulation"], [56, 0, 0, "-", "mutate"], [57, 0, 0, "-", "obgc"], [58, 0, 0, "-", "overrides"], [59, 0, 0, "-", "parentage"], [61, 0, 0, "-", "parsers"], [66, 0, 0, "-", "pattern"], [67, 0, 0, "-", "pcollections"], [68, 0, 0, "-", "persist"], [69, 0, 0, "-", "pitch"], [70, 0, 0, "-", "ratio"], [71, 0, 0, "-", "rhythmtrees"], [72, 0, 0, "-", "score"], [73, 0, 0, "-", "select"], [74, 0, 0, "-", "sequence"], [75, 0, 0, "-", "setclass"], [76, 0, 0, "-", "spanners"], [77, 0, 0, "-", "string"], [78, 0, 0, "-", "tag"], [79, 0, 0, "-", "timespan"], [80, 0, 0, "-", "tweaks"], [81, 0, 0, "-", "verticalmoment"], [82, 0, 0, "-", "wf"]], "abjad.bind": [[27, 1, 1, "", "Wrapper"], [27, 4, 1, "", "annotate"], [27, 4, 1, "", "attach"], [27, 4, 1, "", "detach"]], "abjad.bind.Wrapper": [[27, 2, 1, "", "__copy__"], [27, 2, 1, "", "__eq__"], [27, 2, 1, "", "__hash__"], [27, 2, 1, "", "__repr__"], [27, 3, 1, "", "annotation"], [27, 2, 1, "", "bundled"], [27, 3, 1, "", "component"], [27, 3, 1, "", "context"], [27, 3, 1, "", "deactivate"], [27, 3, 1, "", "direction"], [27, 2, 1, "", "get_item"], [27, 3, 1, "", "indicator"], [27, 3, 1, "", "leaked_start_offset"], [27, 3, 1, "", "start_offset"], [27, 3, 1, "", "synthetic_offset"], [27, 3, 1, "", "tag"], [27, 2, 1, "", "unbundle_indicator"]], "abjad.configuration": [[28, 1, 1, "", "Configuration"], [28, 4, 1, "", "list_all_classes"], [28, 4, 1, "", "list_all_functions"], [28, 4, 1, "", "yield_all_modules"]], "abjad.configuration.Configuration": [[28, 2, 1, "", "__delitem__"], [28, 2, 1, "", "__getitem__"], [28, 2, 1, "", "__iter__"], [28, 2, 1, "", "__setitem__"], [28, 3, 1, "", "abjad_directory"], [28, 3, 1, "", "abjad_output_directory"], [28, 3, 1, "", "boilerplate_directory"], [28, 3, 1, "", "configuration_directory"], [28, 3, 1, "", "configuration_file_path"], [28, 2, 1, "", "get"], [28, 2, 1, "", "get_lilypond_version_string"], [28, 3, 1, "", "home_directory"], [28, 3, 1, "", "lilypond_log_file_path"]], "abjad.contextmanagers": [[29, 1, 1, "", "ContextManager"], [29, 1, 1, "", "FilesystemState"], [29, 1, 1, "", "ForbidUpdate"], [29, 1, 1, "", "NullContextManager"], [29, 1, 1, "", "ProgressIndicator"], [29, 1, 1, "", "RedirectedStreams"], [29, 1, 1, "", "TemporaryDirectory"], [29, 1, 1, "", "TemporaryDirectoryChange"], [29, 1, 1, "", "Timer"]], "abjad.contextmanagers.ContextManager": [[29, 2, 1, "", "__repr__"]], "abjad.contextmanagers.FilesystemState": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"], [29, 3, 1, "", "keep"], [29, 3, 1, "", "remove"]], "abjad.contextmanagers.ForbidUpdate": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"], [29, 3, 1, "", "component"], [29, 3, 1, "", "update_on_enter"], [29, 3, 1, "", "update_on_exit"]], "abjad.contextmanagers.NullContextManager": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"]], "abjad.contextmanagers.ProgressIndicator": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"], [29, 2, 1, "", "advance"], [29, 3, 1, "", "is_warning"], [29, 3, 1, "", "message"], [29, 3, 1, "", "progress"], [29, 3, 1, "", "total"], [29, 3, 1, "", "verbose"]], "abjad.contextmanagers.RedirectedStreams": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"], [29, 3, 1, "", "stderr"], [29, 3, 1, "", "stdout"]], "abjad.contextmanagers.TemporaryDirectory": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"], [29, 3, 1, "", "parent_directory"], [29, 3, 1, "", "temporary_directory"]], "abjad.contextmanagers.TemporaryDirectoryChange": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"], [29, 3, 1, "", "directory"], [29, 3, 1, "", "original_directory"], [29, 3, 1, "", "verbose"]], "abjad.contextmanagers.Timer": [[29, 2, 1, "", "__enter__"], [29, 2, 1, "", "__exit__"], [29, 2, 1, "", "__repr__"], [29, 3, 1, "", "elapsed_time"], [29, 3, 1, "", "enter_message"], [29, 3, 1, "", "exit_message"], [29, 3, 1, "", "print_continuously_from_background"], [29, 3, 1, "", "start_time"], [29, 3, 1, "", "stop_time"], [29, 3, 1, "", "total_time_message"], [29, 3, 1, "", "verbose"]], "abjad.contributions": [[30, 1, 1, "", "ContributionsBySite"], [30, 1, 1, "", "Sites"], [30, 1, 1, "", "Types"]], "abjad.contributions.ContributionsBySite": [[30, 2, 1, "", "__eq__"], [30, 2, 1, "", "__iter__"], [30, 2, 1, "", "__repr__"], [30, 2, 1, "", "alphabetize"], [30, 2, 1, "", "freeze_overrides"], [30, 2, 1, "", "get_contribution_lists"], [30, 2, 1, "", "tag_contributions"], [30, 2, 1, "", "update"]], "abjad.contributions.Sites": [[30, 3, 1, "", "ABSOLUTE_AFTER"], [30, 3, 1, "", "ABSOLUTE_BEFORE"], [30, 3, 1, "", "AFTER"], [30, 3, 1, "", "BEFORE"], [30, 3, 1, "", "CLOSE_BRACKETS"], [30, 3, 1, "", "CLOSING"], [30, 3, 1, "", "CONTENTS"], [30, 3, 1, "", "OPENING"], [30, 3, 1, "", "OPEN_BRACKETS"], [30, 2, 1, "", "__contains__"], [30, 2, 1, "", "__getitem__"], [30, 2, 1, "", "__iter__"], [30, 2, 1, "", "__len__"]], "abjad.contributions.Types": [[30, 3, 1, "", "ARTICULATIONS"], [30, 3, 1, "", "COMMANDS"], [30, 3, 1, "", "CONTEXT_SETTINGS"], [30, 3, 1, "", "GROB_OVERRIDES"], [30, 3, 1, "", "GROB_REVERTS"], [30, 3, 1, "", "LEAK"], [30, 3, 1, "", "LEAKS"], [30, 3, 1, "", "MARKUP"], [30, 3, 1, "", "PITCHED_TRILL"], [30, 3, 1, "", "SPANNER_STARTS"], [30, 3, 1, "", "SPANNER_STOPS"], [30, 3, 1, "", "START_BEAM"], [30, 3, 1, "", "STEM_TREMOLOS"], [30, 3, 1, "", "STOP_BEAM"], [30, 3, 1, "", "TRILL_SPANNER_STARTS"], [30, 2, 1, "", "__contains__"], [30, 2, 1, "", "__getitem__"], [30, 2, 1, "", "__iter__"], [30, 2, 1, "", "__len__"]], "abjad.cyclictuple": [[31, 1, 1, "", "CyclicTuple"]], "abjad.cyclictuple.CyclicTuple": [[31, 2, 1, "", "__contains__"], [31, 2, 1, "", "__eq__"], [31, 2, 1, "", "__getitem__"], [31, 2, 1, "", "__hash__"], [31, 2, 1, "", "__iter__"], [31, 2, 1, "", "__len__"], [31, 2, 1, "", "__post_init__"], [31, 2, 1, "", "__repr__"]], "abjad.duration": [[32, 1, 1, "", "Duration"], [32, 1, 1, "", "Multiplier"], [32, 1, 1, "", "NonreducedFraction"], [32, 1, 1, "", "Offset"]], "abjad.duration.Duration": [[32, 2, 1, "", "__abs__"], [32, 2, 1, "", "__add__"], [32, 2, 1, "", "__bool__"], [32, 2, 1, "", "__ceil__"], [32, 2, 1, "", "__complex__"], [32, 2, 1, "", "__copy__"], [32, 2, 1, "", "__deepcopy__"], [32, 2, 1, "", "__div__"], [32, 2, 1, "", "__divmod__"], [32, 2, 1, "", "__eq__"], [32, 2, 1, "", "__float__"], [32, 2, 1, "", "__floor__"], [32, 2, 1, "", "__floordiv__"], [32, 2, 1, "", "__ge__"], [32, 2, 1, "", "__gt__"], [32, 2, 1, "", "__hash__"], [32, 2, 1, "", "__int__"], [32, 2, 1, "", "__le__"], [32, 2, 1, "", "__lt__"], [32, 2, 1, "", "__mod__"], [32, 2, 1, "", "__mul__"], [32, 2, 1, "", "__ne__"], [32, 2, 1, "", "__neg__"], [32, 2, 1, "", "__new__"], [32, 2, 1, "", "__pos__"], [32, 2, 1, "", "__pow__"], [32, 2, 1, "", "__radd__"], [32, 2, 1, "", "__rdiv__"], [32, 2, 1, "", "__rdivmod__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "__rfloordiv__"], [32, 2, 1, "", "__rmod__"], [32, 2, 1, "", "__rmul__"], [32, 2, 1, "", "__round__"], [32, 2, 1, "", "__rpow__"], [32, 2, 1, "", "__rsub__"], [32, 2, 1, "", "__rtruediv__"], [32, 2, 1, "", "__str__"], [32, 2, 1, "", "__sub__"], [32, 2, 1, "", "__truediv__"], [32, 2, 1, "", "__trunc__"], [32, 2, 1, "", "as_integer_ratio"], [32, 2, 1, "", "conjugate"], [32, 3, 1, "", "denominator"], [32, 3, 1, "", "dot_count"], [32, 2, 1, "", "durations_to_nonreduced_fractions"], [32, 3, 1, "", "equal_or_greater_assignable"], [32, 3, 1, "", "equal_or_greater_power_of_two"], [32, 3, 1, "", "equal_or_lesser_assignable"], [32, 3, 1, "", "equal_or_lesser_power_of_two"], [32, 3, 1, "", "exponent"], [32, 3, 1, "", "flag_count"], [32, 2, 1, "", "from_clock_string"], [32, 2, 1, "", "from_decimal"], [32, 2, 1, "", "from_float"], [32, 2, 1, "", "from_lilypond_duration_string"], [32, 3, 1, "", "imag"], [32, 3, 1, "", "implied_prolation"], [32, 3, 1, "", "is_assignable"], [32, 3, 1, "", "is_dyadic_rational"], [32, 2, 1, "", "is_token"], [32, 3, 1, "", "lilypond_duration_string"], [32, 2, 1, "", "limit_denominator"], [32, 3, 1, "", "numerator"], [32, 3, 1, "", "pair"], [32, 3, 1, "", "prolation_string"], [32, 3, 1, "", "real"], [32, 3, 1, "", "reciprocal"], [32, 2, 1, "", "to_clock_string"], [32, 2, 1, "", "with_denominator"]], "abjad.duration.Multiplier": [[32, 2, 1, "", "__abs__"], [32, 2, 1, "", "__add__"], [32, 2, 1, "", "__bool__"], [32, 2, 1, "", "__ceil__"], [32, 2, 1, "", "__complex__"], [32, 2, 1, "", "__copy__"], [32, 2, 1, "", "__deepcopy__"], [32, 2, 1, "", "__div__"], [32, 2, 1, "", "__divmod__"], [32, 2, 1, "", "__eq__"], [32, 2, 1, "", "__float__"], [32, 2, 1, "", "__floor__"], [32, 2, 1, "", "__floordiv__"], [32, 2, 1, "", "__ge__"], [32, 2, 1, "", "__gt__"], [32, 2, 1, "", "__hash__"], [32, 2, 1, "", "__int__"], [32, 2, 1, "", "__le__"], [32, 2, 1, "", "__lt__"], [32, 2, 1, "", "__mod__"], [32, 2, 1, "", "__mul__"], [32, 2, 1, "", "__ne__"], [32, 2, 1, "", "__neg__"], [32, 2, 1, "", "__new__"], [32, 2, 1, "", "__pos__"], [32, 2, 1, "", "__pow__"], [32, 2, 1, "", "__radd__"], [32, 2, 1, "", "__rdiv__"], [32, 2, 1, "", "__rdivmod__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "__rfloordiv__"], [32, 2, 1, "", "__rmod__"], [32, 2, 1, "", "__rmul__"], [32, 2, 1, "", "__round__"], [32, 2, 1, "", "__rpow__"], [32, 2, 1, "", "__rsub__"], [32, 2, 1, "", "__rtruediv__"], [32, 2, 1, "", "__str__"], [32, 2, 1, "", "__sub__"], [32, 2, 1, "", "__truediv__"], [32, 2, 1, "", "__trunc__"], [32, 2, 1, "", "as_integer_ratio"], [32, 2, 1, "", "conjugate"], [32, 3, 1, "", "denominator"], [32, 3, 1, "", "dot_count"], [32, 2, 1, "", "durations_to_nonreduced_fractions"], [32, 3, 1, "", "equal_or_greater_assignable"], [32, 3, 1, "", "equal_or_greater_power_of_two"], [32, 3, 1, "", "equal_or_lesser_assignable"], [32, 3, 1, "", "equal_or_lesser_power_of_two"], [32, 3, 1, "", "exponent"], [32, 3, 1, "", "flag_count"], [32, 2, 1, "", "from_clock_string"], [32, 2, 1, "", "from_decimal"], [32, 2, 1, "", "from_dot_count"], [32, 2, 1, "", "from_float"], [32, 2, 1, "", "from_lilypond_duration_string"], [32, 3, 1, "", "imag"], [32, 3, 1, "", "implied_prolation"], [32, 3, 1, "", "is_assignable"], [32, 3, 1, "", "is_dyadic_rational"], [32, 2, 1, "", "is_token"], [32, 3, 1, "", "lilypond_duration_string"], [32, 2, 1, "", "limit_denominator"], [32, 2, 1, "", "normalized"], [32, 3, 1, "", "numerator"], [32, 3, 1, "", "pair"], [32, 3, 1, "", "prolation_string"], [32, 3, 1, "", "real"], [32, 3, 1, "", "reciprocal"], [32, 2, 1, "", "to_clock_string"], [32, 2, 1, "", "with_denominator"]], "abjad.duration.NonreducedFraction": [[32, 2, 1, "", "__abs__"], [32, 2, 1, "", "__add__"], [32, 2, 1, "", "__bool__"], [32, 2, 1, "", "__ceil__"], [32, 2, 1, "", "__complex__"], [32, 2, 1, "", "__copy__"], [32, 2, 1, "", "__deepcopy__"], [32, 2, 1, "", "__div__"], [32, 2, 1, "", "__divmod__"], [32, 2, 1, "", "__eq__"], [32, 2, 1, "", "__float__"], [32, 2, 1, "", "__floor__"], [32, 2, 1, "", "__floordiv__"], [32, 2, 1, "", "__ge__"], [32, 2, 1, "", "__gt__"], [32, 2, 1, "", "__hash__"], [32, 2, 1, "", "__int__"], [32, 2, 1, "", "__le__"], [32, 2, 1, "", "__lt__"], [32, 2, 1, "", "__mod__"], [32, 2, 1, "", "__mul__"], [32, 2, 1, "", "__neg__"], [32, 2, 1, "", "__new__"], [32, 2, 1, "", "__pos__"], [32, 2, 1, "", "__pow__"], [32, 2, 1, "", "__radd__"], [32, 2, 1, "", "__rdiv__"], [32, 2, 1, "", "__rdivmod__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "__rfloordiv__"], [32, 2, 1, "", "__rmod__"], [32, 2, 1, "", "__rmul__"], [32, 2, 1, "", "__round__"], [32, 2, 1, "", "__rpow__"], [32, 2, 1, "", "__rsub__"], [32, 2, 1, "", "__rtruediv__"], [32, 2, 1, "", "__str__"], [32, 2, 1, "", "__sub__"], [32, 2, 1, "", "__truediv__"], [32, 2, 1, "", "__trunc__"], [32, 2, 1, "", "as_integer_ratio"], [32, 2, 1, "", "conjugate"], [32, 3, 1, "", "denominator"], [32, 2, 1, "", "durations_to_nonreduced_fractions"], [32, 2, 1, "", "from_decimal"], [32, 2, 1, "", "from_float"], [32, 3, 1, "", "imag"], [32, 2, 1, "", "limit_denominator"], [32, 2, 1, "", "multiply"], [32, 2, 1, "", "multiply_with_cross_cancelation"], [32, 2, 1, "", "multiply_without_reducing"], [32, 3, 1, "", "numerator"], [32, 3, 1, "", "pair"], [32, 3, 1, "", "real"], [32, 2, 1, "", "reduce"], [32, 2, 1, "", "with_denominator"], [32, 2, 1, "", "with_multiple_of_denominator"]], "abjad.duration.Offset": [[32, 2, 1, "", "__abs__"], [32, 2, 1, "", "__add__"], [32, 2, 1, "", "__bool__"], [32, 2, 1, "", "__ceil__"], [32, 2, 1, "", "__complex__"], [32, 2, 1, "", "__copy__"], [32, 2, 1, "", "__deepcopy__"], [32, 2, 1, "", "__div__"], [32, 2, 1, "", "__divmod__"], [32, 2, 1, "", "__eq__"], [32, 2, 1, "", "__float__"], [32, 2, 1, "", "__floor__"], [32, 2, 1, "", "__floordiv__"], [32, 2, 1, "", "__ge__"], [32, 2, 1, "", "__gt__"], [32, 2, 1, "", "__hash__"], [32, 2, 1, "", "__int__"], [32, 2, 1, "", "__le__"], [32, 2, 1, "", "__lt__"], [32, 2, 1, "", "__mod__"], [32, 2, 1, "", "__mul__"], [32, 2, 1, "", "__ne__"], [32, 2, 1, "", "__neg__"], [32, 2, 1, "", "__new__"], [32, 2, 1, "", "__pos__"], [32, 2, 1, "", "__pow__"], [32, 2, 1, "", "__radd__"], [32, 2, 1, "", "__rdiv__"], [32, 2, 1, "", "__rdivmod__"], [32, 2, 1, "", "__repr__"], [32, 2, 1, "", "__rfloordiv__"], [32, 2, 1, "", "__rmod__"], [32, 2, 1, "", "__rmul__"], [32, 2, 1, "", "__round__"], [32, 2, 1, "", "__rpow__"], [32, 2, 1, "", "__rsub__"], [32, 2, 1, "", "__rtruediv__"], [32, 2, 1, "", "__str__"], [32, 2, 1, "", "__sub__"], [32, 2, 1, "", "__truediv__"], [32, 2, 1, "", "__trunc__"], [32, 2, 1, "", "as_integer_ratio"], [32, 2, 1, "", "conjugate"], [32, 3, 1, "", "denominator"], [32, 3, 1, "", "displacement"], [32, 3, 1, "", "dot_count"], [32, 2, 1, "", "durations_to_nonreduced_fractions"], [32, 3, 1, "", "equal_or_greater_assignable"], [32, 3, 1, "", "equal_or_greater_power_of_two"], [32, 3, 1, "", "equal_or_lesser_assignable"], [32, 3, 1, "", "equal_or_lesser_power_of_two"], [32, 3, 1, "", "exponent"], [32, 3, 1, "", "flag_count"], [32, 2, 1, "", "from_clock_string"], [32, 2, 1, "", "from_decimal"], [32, 2, 1, "", "from_float"], [32, 2, 1, "", "from_lilypond_duration_string"], [32, 3, 1, "", "imag"], [32, 3, 1, "", "implied_prolation"], [32, 3, 1, "", "is_assignable"], [32, 3, 1, "", "is_dyadic_rational"], [32, 2, 1, "", "is_token"], [32, 3, 1, "", "lilypond_duration_string"], [32, 2, 1, "", "limit_denominator"], [32, 3, 1, "", "numerator"], [32, 3, 1, "", "pair"], [32, 3, 1, "", "prolation_string"], [32, 3, 1, "", "real"], [32, 3, 1, "", "reciprocal"], [32, 2, 1, "", "to_clock_string"], [32, 2, 1, "", "with_denominator"]], "abjad.dynamic": [[33, 1, 1, "", "Dynamic"]], "abjad.dynamic.Dynamic": [[33, 2, 1, "", "__eq__"], [33, 2, 1, "", "__hash__"], [33, 2, 1, "", "__post_init__"], [33, 2, 1, "", "__repr__"], [33, 2, 1, "", "composite_dynamic_name_to_steady_state_dynamic_name"], [33, 2, 1, "", "dynamic_name_to_dynamic_ordinal"], [33, 2, 1, "", "dynamic_ordinal_to_dynamic_name"], [33, 3, 1, "", "effort"], [33, 2, 1, "", "is_dynamic_name"], [33, 3, 1, "", "sforzando"]], "abjad.enumerate": [[34, 4, 1, "", "outer_product"], [34, 4, 1, "", "yield_combinations"], [34, 4, 1, "", "yield_pairs"], [34, 4, 1, "", "yield_partitions"], [34, 4, 1, "", "yield_permutations"], [34, 4, 1, "", "yield_set_partitions"], [34, 4, 1, "", "yield_subsequences"]], "abjad.enums": [[35, 1, 1, "", "Comparison"], [35, 1, 1, "", "Horizontal"], [35, 1, 1, "", "Vertical"]], "abjad.enums.Comparison": [[35, 3, 1, "", "EXACT"], [35, 3, 1, "", "LESS"], [35, 3, 1, "", "MORE"], [35, 2, 1, "", "__contains__"], [35, 2, 1, "", "__getitem__"], [35, 2, 1, "", "__iter__"], [35, 2, 1, "", "__len__"]], "abjad.enums.Horizontal": [[35, 3, 1, "", "LEFT"], [35, 3, 1, "", "MIDDLE"], [35, 3, 1, "", "RIGHT"], [35, 2, 1, "", "__contains__"], [35, 2, 1, "", "__getitem__"], [35, 2, 1, "", "__iter__"], [35, 2, 1, "", "__len__"]], "abjad.enums.Vertical": [[35, 3, 1, "", "CENTER"], [35, 3, 1, "", "DOWN"], [35, 3, 1, "", "UP"], [35, 2, 1, "", "__contains__"], [35, 2, 1, "", "__getitem__"], [35, 2, 1, "", "__iter__"], [35, 2, 1, "", "__len__"]], "abjad.exceptions": [[36, 5, 1, "", "AssignabilityError"], [36, 5, 1, "", "ImpreciseMetronomeMarkError"], [36, 5, 1, "", "LilyPondParserError"], [36, 5, 1, "", "MissingMetronomeMarkError"], [36, 5, 1, "", "ParentageError"], [36, 5, 1, "", "PersistentIndicatorError"], [36, 5, 1, "", "SchemeParserFinishedError"], [36, 5, 1, "", "UnboundedTimeIntervalError"], [36, 5, 1, "", "WellformednessError"]], "abjad.ext": [[38, 0, 0, "-", "sphinx"]], "abjad.ext.sphinx": [[38, 1, 1, "", "HiddenDoctestDirective"], [38, 1, 1, "", "LilyPondExtension"], [38, 1, 1, "", "ShellDirective"], [38, 1, 1, "", "ThumbnailDirective"], [38, 4, 1, "", "embed_images"], [38, 4, 1, "", "install_lightbox_static_files"], [38, 4, 1, "", "on_builder_inited"], [38, 4, 1, "", "on_html_collect_pages"], [38, 4, 1, "", "setup"], [38, 1, 1, "", "thumbnail_block"], [38, 4, 1, "", "visit_thumbnail_block_html"], [38, 4, 1, "", "visit_thumbnail_block_latex"]], "abjad.ext.sphinx.HiddenDoctestDirective": [[38, 2, 1, "", "run"]], "abjad.ext.sphinx.LilyPondExtension": [[38, 2, 1, "", "add_option"], [38, 2, 1, "", "depart_block_text"], [38, 2, 1, "", "setup_console"], [38, 2, 1, "", "setup_sphinx"], [38, 2, 1, "", "teardown_console"], [38, 2, 1, "", "to_docutils"], [38, 2, 1, "", "visit_block_html"], [38, 2, 1, "", "visit_block_latex"], [38, 2, 1, "", "visit_block_text"]], "abjad.ext.sphinx.ShellDirective": [[38, 2, 1, "", "run"]], "abjad.ext.sphinx.ThumbnailDirective": [[38, 2, 1, "", "run"]], "abjad.format": [[39, 4, 1, "", "format_component"], [39, 4, 1, "", "remove_site_comments"]], "abjad.get": [[40, 1, 1, "", "Lineage"], [40, 4, 1, "", "after_grace_container"], [40, 4, 1, "", "annotation"], [40, 4, 1, "", "annotation_wrappers"], [40, 4, 1, "", "bar_line_crossing"], [40, 4, 1, "", "before_grace_container"], [40, 4, 1, "", "contents"], [40, 4, 1, "", "descendants"], [40, 4, 1, "", "duration"], [40, 4, 1, "", "effective"], [40, 4, 1, "", "effective_staff"], [40, 4, 1, "", "effective_wrapper"], [40, 4, 1, "", "grace"], [40, 4, 1, "", "has_effective_indicator"], [40, 4, 1, "", "has_indicator"], [40, 4, 1, "", "indicator"], [40, 4, 1, "", "indicators"], [40, 4, 1, "", "leaf"], [40, 4, 1, "", "lineage"], [40, 4, 1, "", "logical_tie"], [40, 4, 1, "", "markup"], [40, 4, 1, "", "measure_number"], [40, 4, 1, "", "parentage"], [40, 4, 1, "", "pitches"], [40, 4, 1, "", "sounding_pitch"], [40, 4, 1, "", "sounding_pitches"], [40, 4, 1, "", "sustained"], [40, 4, 1, "", "timespan"], [40, 4, 1, "", "wrapper"], [40, 4, 1, "", "wrappers"]], "abjad.get.Lineage": [[40, 2, 1, "", "__class_getitem__"], [40, 2, 1, "", "__contains__"], [40, 2, 1, "", "__getitem__"], [40, 2, 1, "", "__iter__"], [40, 2, 1, "", "__len__"], [40, 2, 1, "", "__reversed__"], [40, 3, 1, "", "component"], [40, 3, 1, "", "components"], [40, 2, 1, "", "count"], [40, 2, 1, "", "index"]], "abjad.grace_corner_cases": [[41, 4, 1, "", "grace_corner_cases"]], "abjad.illustrators": [[42, 4, 1, "", "attach_markup_struts"], [42, 4, 1, "", "illustrate"], [42, 4, 1, "", "lilypond"], [42, 4, 1, "", "make_piano_score"], [42, 4, 1, "", "selection"], [42, 4, 1, "", "selection_to_score_markup_string"]], "abjad.indicators": [[44, 1, 1, "", "Arpeggio"], [44, 1, 1, "", "Articulation"], [44, 1, 1, "", "BarLine"], [44, 1, 1, "", "BeamCount"], [44, 1, 1, "", "BendAfter"], [44, 1, 1, "", "BreathMark"], [44, 1, 1, "", "Clef"], [44, 1, 1, "", "ColorFingering"], [44, 1, 1, "", "Fermata"], [44, 1, 1, "", "Glissando"], [44, 1, 1, "", "InstrumentName"], [44, 1, 1, "", "KeyCluster"], [44, 1, 1, "", "KeySignature"], [44, 1, 1, "", "LaissezVibrer"], [44, 1, 1, "", "LilyPondLiteral"], [44, 1, 1, "", "Markup"], [44, 1, 1, "", "MetronomeMark"], [44, 1, 1, "", "Mode"], [44, 1, 1, "", "Ottava"], [44, 1, 1, "", "RehearsalMark"], [44, 1, 1, "", "Repeat"], [44, 1, 1, "", "RepeatTie"], [44, 1, 1, "", "ShortInstrumentName"], [44, 1, 1, "", "StaffChange"], [44, 1, 1, "", "StartBeam"], [44, 1, 1, "", "StartGroup"], [44, 1, 1, "", "StartHairpin"], [44, 1, 1, "", "StartPhrasingSlur"], [44, 1, 1, "", "StartPianoPedal"], [44, 1, 1, "", "StartSlur"], [44, 1, 1, "", "StartTextSpan"], [44, 1, 1, "", "StartTrillSpan"], [44, 1, 1, "", "StemTremolo"], [44, 1, 1, "", "StopBeam"], [44, 1, 1, "", "StopGroup"], [44, 1, 1, "", "StopHairpin"], [44, 1, 1, "", "StopPhrasingSlur"], [44, 1, 1, "", "StopPianoPedal"], [44, 1, 1, "", "StopSlur"], [44, 1, 1, "", "StopTextSpan"], [44, 1, 1, "", "StopTrillSpan"], [44, 1, 1, "", "Tie"], [44, 1, 1, "", "TimeSignature"]], "abjad.indicators.Arpeggio": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.Articulation": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.BarLine": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 3, 1, "", "context"]], "abjad.indicators.BeamCount": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.BendAfter": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.BreathMark": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.Clef": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 2, 1, "", "from_pitches"], [44, 2, 1, "", "middle_c_position"], [44, 2, 1, "", "to_pitch"], [44, 2, 1, "", "to_staff_position"]], "abjad.indicators.ColorFingering": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 3, 1, "", "markup"]], "abjad.indicators.Fermata": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.Glissando": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.InstrumentName": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.KeyCluster": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.KeySignature": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 3, 1, "", "name"]], "abjad.indicators.LaissezVibrer": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.LilyPondLiteral": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 3, 1, "", "post_event"]], "abjad.indicators.Markup": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.MetronomeMark": [[44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "duration_to_milliseconds"], [44, 3, 1, "", "is_imprecise"], [44, 2, 1, "", "make_tempo_equation_markup"], [44, 3, 1, "", "quarters_per_minute"]], "abjad.indicators.Mode": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 2, 1, "", "intervals"]], "abjad.indicators.Ottava": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.RehearsalMark": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 2, 1, "", "from_string"]], "abjad.indicators.Repeat": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.RepeatTie": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.ShortInstrumentName": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StaffChange": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StartBeam": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StartGroup": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StartHairpin": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"], [44, 3, 1, "", "known_shapes"]], "abjad.indicators.StartPhrasingSlur": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StartPianoPedal": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StartSlur": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StartTextSpan": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StartTrillSpan": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StemTremolo": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopBeam": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopGroup": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopHairpin": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopPhrasingSlur": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopPianoPedal": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopSlur": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopTextSpan": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.StopTrillSpan": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.Tie": [[44, 2, 1, "", "__delattr__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__repr__"], [44, 2, 1, "", "__setattr__"]], "abjad.indicators.TimeSignature": [[44, 2, 1, "", "__copy__"], [44, 2, 1, "", "__eq__"], [44, 2, 1, "", "__ge__"], [44, 2, 1, "", "__gt__"], [44, 2, 1, "", "__hash__"], [44, 2, 1, "", "__le__"], [44, 2, 1, "", "__lt__"], [44, 2, 1, "", "__post_init__"], [44, 2, 1, "", "__repr__"], [44, 3, 1, "", "denominator"], [44, 3, 1, "", "duration"], [44, 2, 1, "", "from_string"], [44, 3, 1, "", "implied_prolation"], [44, 2, 1, "", "is_dyadic_rational"], [44, 3, 1, "", "is_non_dyadic_rational"], [44, 3, 1, "", "numerator"]], "abjad.instruments": [[45, 1, 1, "", "Accordion"], [45, 1, 1, "", "AltoFlute"], [45, 1, 1, "", "AltoSaxophone"], [45, 1, 1, "", "AltoTrombone"], [45, 1, 1, "", "AltoVoice"], [45, 1, 1, "", "BaritoneSaxophone"], [45, 1, 1, "", "BaritoneVoice"], [45, 1, 1, "", "BassClarinet"], [45, 1, 1, "", "BassFlute"], [45, 1, 1, "", "BassSaxophone"], [45, 1, 1, "", "BassTrombone"], [45, 1, 1, "", "BassVoice"], [45, 1, 1, "", "Bassoon"], [45, 1, 1, "", "Cello"], [45, 1, 1, "", "ClarinetInA"], [45, 1, 1, "", "ClarinetInBFlat"], [45, 1, 1, "", "ClarinetInEFlat"], [45, 1, 1, "", "Contrabass"], [45, 1, 1, "", "ContrabassClarinet"], [45, 1, 1, "", "ContrabassFlute"], [45, 1, 1, "", "ContrabassSaxophone"], [45, 1, 1, "", "Contrabassoon"], [45, 1, 1, "", "EnglishHorn"], [45, 1, 1, "", "Flute"], [45, 1, 1, "", "FrenchHorn"], [45, 1, 1, "", "Glockenspiel"], [45, 1, 1, "", "Guitar"], [45, 1, 1, "", "Harp"], [45, 1, 1, "", "Harpsichord"], [45, 1, 1, "", "Instrument"], [45, 1, 1, "", "Marimba"], [45, 1, 1, "", "MezzoSopranoVoice"], [45, 1, 1, "", "Oboe"], [45, 1, 1, "", "Percussion"], [45, 1, 1, "", "Piano"], [45, 1, 1, "", "Piccolo"], [45, 1, 1, "", "SopraninoSaxophone"], [45, 1, 1, "", "SopranoSaxophone"], [45, 1, 1, "", "SopranoVoice"], [45, 1, 1, "", "StringNumber"], [45, 1, 1, "", "TenorSaxophone"], [45, 1, 1, "", "TenorTrombone"], [45, 1, 1, "", "TenorVoice"], [45, 1, 1, "", "Trumpet"], [45, 1, 1, "", "Tuba"], [45, 1, 1, "", "Tuning"], [45, 1, 1, "", "Vibraphone"], [45, 1, 1, "", "Viola"], [45, 1, 1, "", "Violin"], [45, 1, 1, "", "Xylophone"]], "abjad.instruments.Accordion": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.AltoFlute": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.AltoSaxophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.AltoTrombone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.AltoVoice": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.BaritoneSaxophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.BaritoneVoice": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.BassClarinet": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.BassFlute": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.BassSaxophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.BassTrombone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.BassVoice": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Bassoon": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Cello": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.ClarinetInA": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.ClarinetInBFlat": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.ClarinetInEFlat": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Contrabass": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.ContrabassClarinet": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.ContrabassFlute": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.ContrabassSaxophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Contrabassoon": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.EnglishHorn": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Flute": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.FrenchHorn": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Glockenspiel": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Guitar": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Harp": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Harpsichord": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Instrument": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Marimba": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.MezzoSopranoVoice": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Oboe": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Percussion": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Piano": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Piccolo": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.SopraninoSaxophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.SopranoSaxophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.SopranoVoice": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.StringNumber": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "roman_numerals"]], "abjad.instruments.TenorSaxophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.TenorTrombone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.TenorVoice": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Trumpet": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Tuba": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Tuning": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 2, 1, "", "get_pitch_ranges_by_string_number"], [45, 2, 1, "", "get_pitches_by_string_number"], [45, 3, 1, "", "pitch_ranges"], [45, 2, 1, "", "voice_pitch_classes"]], "abjad.instruments.Vibraphone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Viola": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Violin": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.instruments.Xylophone": [[45, 2, 1, "", "__delattr__"], [45, 2, 1, "", "__eq__"], [45, 2, 1, "", "__ge__"], [45, 2, 1, "", "__gt__"], [45, 2, 1, "", "__hash__"], [45, 2, 1, "", "__le__"], [45, 2, 1, "", "__lt__"], [45, 2, 1, "", "__post_init__"], [45, 2, 1, "", "__repr__"], [45, 2, 1, "", "__setattr__"], [45, 3, 1, "", "latent"], [45, 3, 1, "", "persistent"], [45, 3, 1, "", "redraw"]], "abjad.io": [[46, 1, 1, "", "AbjadGrapher"], [46, 1, 1, "", "Illustrator"], [46, 1, 1, "", "LilyPondIO"], [46, 1, 1, "", "Player"], [46, 4, 1, "", "compare_files"], [46, 4, 1, "", "count_function_calls"], [46, 4, 1, "", "execute_file"], [46, 4, 1, "", "execute_string"], [46, 4, 1, "", "find_executable"], [46, 4, 1, "", "graph"], [46, 4, 1, "", "make_subprocess"], [46, 4, 1, "", "open_file"], [46, 4, 1, "", "open_last_log"], [46, 4, 1, "", "profile"], [46, 4, 1, "", "run_command"], [46, 4, 1, "", "run_lilypond"], [46, 4, 1, "", "show"], [46, 4, 1, "", "spawn_subprocess"]], "abjad.io.AbjadGrapher": [[46, 2, 1, "", "__call__"], [46, 2, 1, "", "get_format"], [46, 2, 1, "", "get_layout"], [46, 2, 1, "", "get_openable_paths"], [46, 2, 1, "", "get_output_directory"], [46, 2, 1, "", "get_render_command"], [46, 2, 1, "", "get_render_directory"], [46, 2, 1, "", "get_render_prefix"], [46, 2, 1, "", "get_string"], [46, 2, 1, "", "migrate_assets"], [46, 2, 1, "", "open_output_path"], [46, 2, 1, "", "persist_log"], [46, 2, 1, "", "persist_string"], [46, 2, 1, "", "run_command"]], "abjad.io.Illustrator": [[46, 2, 1, "", "__call__"], [46, 2, 1, "", "copy_stylesheets"], [46, 2, 1, "", "get_lilypond_path"], [46, 2, 1, "", "get_openable_paths"], [46, 2, 1, "", "get_output_directory"], [46, 2, 1, "", "get_render_command"], [46, 2, 1, "", "get_render_directory"], [46, 2, 1, "", "get_render_prefix"], [46, 2, 1, "", "get_string"], [46, 2, 1, "", "get_stylesheets_directories"], [46, 2, 1, "", "migrate_assets"], [46, 2, 1, "", "open_output_path"], [46, 2, 1, "", "persist_log"], [46, 2, 1, "", "persist_string"], [46, 2, 1, "", "run_command"]], "abjad.io.LilyPondIO": [[46, 2, 1, "", "__call__"], [46, 2, 1, "", "copy_stylesheets"], [46, 2, 1, "", "get_lilypond_path"], [46, 2, 1, "", "get_openable_paths"], [46, 2, 1, "", "get_output_directory"], [46, 2, 1, "", "get_render_command"], [46, 2, 1, "", "get_render_directory"], [46, 2, 1, "", "get_render_prefix"], [46, 2, 1, "", "get_string"], [46, 2, 1, "", "get_stylesheets_directories"], [46, 2, 1, "", "migrate_assets"], [46, 2, 1, "", "open_output_path"], [46, 2, 1, "", "persist_log"], [46, 2, 1, "", "persist_string"], [46, 2, 1, "", "run_command"]], "abjad.io.Player": [[46, 2, 1, "", "__call__"], [46, 2, 1, "", "copy_stylesheets"], [46, 2, 1, "", "get_lilypond_path"], [46, 2, 1, "", "get_openable_paths"], [46, 2, 1, "", "get_output_directory"], [46, 2, 1, "", "get_render_command"], [46, 2, 1, "", "get_render_directory"], [46, 2, 1, "", "get_render_prefix"], [46, 2, 1, "", "get_string"], [46, 2, 1, "", "get_stylesheets_directories"], [46, 2, 1, "", "migrate_assets"], [46, 2, 1, "", "open_output_path"], [46, 2, 1, "", "persist_log"], [46, 2, 1, "", "persist_string"], [46, 2, 1, "", "run_command"]], "abjad.iterate": [[47, 4, 1, "", "components"], [47, 4, 1, "", "leaves"], [47, 4, 1, "", "logical_ties"], [47, 4, 1, "", "pitches"], [47, 4, 1, "", "timeline"]], "abjad.iterpitches": [[48, 4, 1, "", "iterate_out_of_range"], [48, 4, 1, "", "respell_with_flats"], [48, 4, 1, "", "respell_with_sharps"], [48, 4, 1, "", "sounding_pitches_are_in_range"], [48, 4, 1, "", "transpose_from_sounding_pitch"], [48, 4, 1, "", "transpose_from_written_pitch"]], "abjad.label": [[49, 1, 1, "", "ColorMap"], [49, 4, 1, "", "by_selector"], [49, 4, 1, "", "color_container"], [49, 4, 1, "", "color_leaves"], [49, 4, 1, "", "color_note_heads"], [49, 4, 1, "", "remove_markup"], [49, 4, 1, "", "vertical_moments"], [49, 4, 1, "", "with_durations"], [49, 4, 1, "", "with_indices"], [49, 4, 1, "", "with_intervals"], [49, 4, 1, "", "with_pitches"], [49, 4, 1, "", "with_set_classes"], [49, 4, 1, "", "with_start_offsets"]], "abjad.label.ColorMap": [[49, 2, 1, "", "__eq__"], [49, 2, 1, "", "__getitem__"], [49, 2, 1, "", "__hash__"], [49, 2, 1, "", "__post_init__"], [49, 2, 1, "", "__repr__"], [49, 2, 1, "", "get"], [49, 3, 1, "", "is_twelve_tone_complete"], [49, 3, 1, "", "is_twenty_four_tone_complete"], [49, 3, 1, "", "pairs"]], "abjad.lilypondfile": [[50, 1, 1, "", "Block"], [50, 1, 1, "", "LilyPondFile"]], "abjad.lilypondfile.Block": [[50, 2, 1, "", "__eq__"], [50, 2, 1, "", "__post_init__"], [50, 2, 1, "", "__repr__"]], "abjad.lilypondfile.LilyPondFile": [[50, 2, 1, "", "__contains__"], [50, 2, 1, "", "__eq__"], [50, 2, 1, "", "__getitem__"], [50, 2, 1, "", "__repr__"], [50, 2, 1, "", "get_tag"]], "abjad.lyproxy": [[51, 1, 1, "", "LilyPondContext"], [51, 1, 1, "", "LilyPondEngraver"], [51, 1, 1, "", "LilyPondGrob"], [51, 1, 1, "", "LilyPondGrobInterface"]], "abjad.lyproxy.LilyPondContext": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "__repr__"], [51, 3, 1, "", "accepted_by"], [51, 3, 1, "", "accepts"], [51, 3, 1, "", "alias"], [51, 3, 1, "", "default_child"], [51, 3, 1, "", "engravers"], [51, 3, 1, "", "grobs"], [51, 3, 1, "", "is_bottom_context"], [51, 3, 1, "", "is_custom"], [51, 3, 1, "", "is_global_context"], [51, 3, 1, "", "is_score_context"], [51, 3, 1, "", "is_staff_context"], [51, 3, 1, "", "is_staff_group_context"], [51, 2, 1, "", "list_all_contexts"], [51, 3, 1, "", "name"], [51, 3, 1, "", "property_names"], [51, 2, 1, "", "register"], [51, 2, 1, "", "unregister"]], "abjad.lyproxy.LilyPondEngraver": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "__repr__"], [51, 3, 1, "", "grobs"], [51, 2, 1, "", "list_all_engravers"], [51, 3, 1, "", "name"], [51, 3, 1, "", "property_names"]], "abjad.lyproxy.LilyPondGrob": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "__repr__"], [51, 3, 1, "", "interfaces"], [51, 2, 1, "", "list_all_grobs"], [51, 3, 1, "", "name"], [51, 3, 1, "", "property_names"]], "abjad.lyproxy.LilyPondGrobInterface": [[51, 2, 1, "", "__new__"], [51, 2, 1, "", "__repr__"], [51, 2, 1, "", "list_all_interfaces"], [51, 3, 1, "", "name"], [51, 3, 1, "", "property_names"]], "abjad.makers": [[52, 4, 1, "", "make_leaves"], [52, 4, 1, "", "make_notes"], [52, 4, 1, "", "tuplet_from_duration_and_ratio"], [52, 4, 1, "", "tuplet_from_leaf_and_ratio"], [52, 4, 1, "", "tuplet_from_ratio_and_pair"]], "abjad.math": [[53, 1, 1, "", "Infinity"], [53, 1, 1, "", "NegativeInfinity"], [53, 4, 1, "", "all_are_equal"], [53, 4, 1, "", "all_are_integer_equivalent"], [53, 4, 1, "", "all_are_integer_equivalent_numbers"], [53, 4, 1, "", "all_are_nonnegative_integer_equivalent_numbers"], [53, 4, 1, "", "all_are_nonnegative_integer_powers_of_two"], [53, 4, 1, "", "all_are_nonnegative_integers"], [53, 4, 1, "", "all_are_pairs_of_types"], [53, 4, 1, "", "all_are_positive_integers"], [53, 4, 1, "", "are_relatively_prime"], [53, 4, 1, "", "arithmetic_mean"], [53, 4, 1, "", "binomial_coefficient"], [53, 4, 1, "", "cumulative_products"], [53, 4, 1, "", "cumulative_sums"], [53, 4, 1, "", "difference_series"], [53, 4, 1, "", "divisors"], [53, 4, 1, "", "factors"], [53, 4, 1, "", "fraction_to_proper_fraction"], [53, 4, 1, "", "greatest_common_divisor"], [53, 4, 1, "", "greatest_power_of_two_less_equal"], [53, 4, 1, "", "integer_equivalent_number_to_integer"], [53, 4, 1, "", "integer_to_base_k_tuple"], [53, 4, 1, "", "integer_to_binary_string"], [53, 4, 1, "", "is_assignable_integer"], [53, 4, 1, "", "is_integer_equivalent"], [53, 4, 1, "", "is_integer_equivalent_n_tuple"], [53, 4, 1, "", "is_integer_equivalent_number"], [53, 4, 1, "", "is_nonnegative_integer"], [53, 4, 1, "", "is_nonnegative_integer_equivalent_number"], [53, 4, 1, "", "is_nonnegative_integer_power_of_two"], [53, 4, 1, "", "is_positive_integer"], [53, 4, 1, "", "is_positive_integer_equivalent_number"], [53, 4, 1, "", "is_positive_integer_power_of_two"], [53, 4, 1, "", "least_common_multiple"], [53, 4, 1, "", "partition_integer_into_canonic_parts"], [53, 4, 1, "", "sign"], [53, 4, 1, "", "weight"], [53, 4, 1, "", "yield_all_compositions_of_integer"]], "abjad.math.Infinity": [[53, 2, 1, "", "__eq__"], [53, 2, 1, "", "__float__"], [53, 2, 1, "", "__ge__"], [53, 2, 1, "", "__gt__"], [53, 2, 1, "", "__hash__"], [53, 2, 1, "", "__le__"], [53, 2, 1, "", "__lt__"], [53, 2, 1, "", "__repr__"], [53, 2, 1, "", "__sub__"]], "abjad.math.NegativeInfinity": [[53, 2, 1, "", "__eq__"], [53, 2, 1, "", "__float__"], [53, 2, 1, "", "__ge__"], [53, 2, 1, "", "__gt__"], [53, 2, 1, "", "__hash__"], [53, 2, 1, "", "__le__"], [53, 2, 1, "", "__lt__"], [53, 2, 1, "", "__repr__"], [53, 2, 1, "", "__sub__"]], "abjad.meter": [[54, 1, 1, "", "Meter"], [54, 1, 1, "", "MetricAccentKernel"], [54, 4, 1, "", "illustrate_meter_list"]], "abjad.meter.Meter": [[54, 2, 1, "", "__eq__"], [54, 2, 1, "", "__graph__"], [54, 2, 1, "", "__hash__"], [54, 2, 1, "", "__iter__"], [54, 2, 1, "", "__repr__"], [54, 3, 1, "", "denominator"], [54, 3, 1, "", "depthwise_offset_inventory"], [54, 3, 1, "", "duration"], [54, 2, 1, "", "fit_meters"], [54, 3, 1, "", "fraction"], [54, 2, 1, "", "generate_offset_kernel_to_denominator"], [54, 3, 1, "", "implied_time_signature"], [54, 3, 1, "", "increase_monotonic"], [54, 3, 1, "", "is_compound"], [54, 3, 1, "", "is_simple"], [54, 3, 1, "", "numerator"], [54, 3, 1, "", "pair"], [54, 3, 1, "", "preferred_boundary_depth"], [54, 3, 1, "", "pretty_rtm_format"], [54, 2, 1, "", "rewrite_meter"], [54, 3, 1, "", "root_node"], [54, 3, 1, "", "rtm_format"]], "abjad.meter.MetricAccentKernel": [[54, 2, 1, "", "__call__"], [54, 2, 1, "", "__eq__"], [54, 2, 1, "", "__hash__"], [54, 2, 1, "", "__repr__"], [54, 2, 1, "", "count_offsets"], [54, 3, 1, "", "duration"], [54, 2, 1, "", "from_meter"], [54, 3, 1, "", "kernel"]], "abjad.metricmodulation": [[55, 1, 1, "", "MetricModulation"]], "abjad.metricmodulation.MetricModulation": [[55, 2, 1, "", "__eq__"], [55, 2, 1, "", "__hash__"], [55, 2, 1, "", "__repr__"], [55, 3, 1, "", "hide"], [55, 3, 1, "", "left_markup"], [55, 3, 1, "", "left_rhythm"], [55, 3, 1, "", "ratio"], [55, 3, 1, "", "right_markup"], [55, 3, 1, "", "right_rhythm"], [55, 3, 1, "", "scale"], [55, 3, 1, "", "tweaks"]], "abjad.mutate": [[56, 4, 1, "", "copy"], [56, 4, 1, "", "eject_contents"], [56, 4, 1, "", "extract"], [56, 4, 1, "", "fuse"], [56, 4, 1, "", "logical_tie_to_tuplet"], [56, 4, 1, "", "replace"], [56, 4, 1, "", "scale"], [56, 4, 1, "", "split"], [56, 4, 1, "", "swap"], [56, 4, 1, "", "transpose"], [56, 4, 1, "", "wrap"]], "abjad.obgc": [[57, 1, 1, "", "OnBeatGraceContainer"], [57, 4, 1, "", "on_beat_grace_container"]], "abjad.obgc.OnBeatGraceContainer": [[57, 2, 1, "", "__contains__"], [57, 2, 1, "", "__copy__"], [57, 2, 1, "", "__delitem__"], [57, 2, 1, "", "__getitem__"], [57, 2, 1, "", "__iter__"], [57, 2, 1, "", "__len__"], [57, 2, 1, "", "__repr__"], [57, 2, 1, "", "__setitem__"], [57, 2, 1, "", "append"], [57, 3, 1, "", "components"], [57, 2, 1, "", "extend"], [57, 3, 1, "", "identifier"], [57, 2, 1, "", "index"], [57, 2, 1, "", "insert"], [57, 3, 1, "", "leaf_duration"], [57, 3, 1, "", "name"], [57, 2, 1, "", "pop"], [57, 2, 1, "", "remove"], [57, 3, 1, "", "simultaneous"], [57, 3, 1, "", "tag"]], "abjad.overrides": [[58, 1, 1, "", "Interface"], [58, 1, 1, "", "LilyPondOverride"], [58, 1, 1, "", "LilyPondSetting"], [58, 1, 1, "", "OverrideInterface"], [58, 1, 1, "", "SettingInterface"], [58, 4, 1, "", "override"], [58, 4, 1, "", "setting"]], "abjad.overrides.Interface": [[58, 2, 1, "", "__eq__"], [58, 2, 1, "", "__hash__"], [58, 2, 1, "", "__repr__"]], "abjad.overrides.LilyPondOverride": [[58, 2, 1, "", "__eq__"], [58, 2, 1, "", "__ge__"], [58, 2, 1, "", "__gt__"], [58, 2, 1, "", "__hash__"], [58, 2, 1, "", "__le__"], [58, 2, 1, "", "__lt__"], [58, 2, 1, "", "__post_init__"], [58, 2, 1, "", "__repr__"], [58, 3, 1, "", "override_format_pieces"], [58, 3, 1, "", "override_string"], [58, 3, 1, "", "revert_format_pieces"], [58, 3, 1, "", "revert_string"], [58, 2, 1, "", "tweak_string"]], "abjad.overrides.LilyPondSetting": [[58, 2, 1, "", "__eq__"], [58, 2, 1, "", "__ge__"], [58, 2, 1, "", "__gt__"], [58, 2, 1, "", "__hash__"], [58, 2, 1, "", "__le__"], [58, 2, 1, "", "__lt__"], [58, 2, 1, "", "__post_init__"], [58, 2, 1, "", "__repr__"], [58, 3, 1, "", "format_pieces"]], "abjad.overrides.OverrideInterface": [[58, 2, 1, "", "__eq__"], [58, 2, 1, "", "__getattr__"], [58, 2, 1, "", "__hash__"], [58, 2, 1, "", "__repr__"], [58, 2, 1, "", "__setattr__"]], "abjad.overrides.SettingInterface": [[58, 2, 1, "", "__eq__"], [58, 2, 1, "", "__getattr__"], [58, 2, 1, "", "__hash__"], [58, 2, 1, "", "__repr__"]], "abjad.parentage": [[59, 1, 1, "", "Parentage"]], "abjad.parentage.Parentage": [[59, 2, 1, "", "__class_getitem__"], [59, 2, 1, "", "__contains__"], [59, 2, 1, "", "__getitem__"], [59, 2, 1, "", "__iter__"], [59, 2, 1, "", "__len__"], [59, 2, 1, "", "__repr__"], [59, 2, 1, "", "__reversed__"], [59, 3, 1, "", "component"], [59, 3, 1, "", "components"], [59, 2, 1, "", "count"], [59, 2, 1, "", "get"], [59, 2, 1, "", "index"], [59, 2, 1, "", "logical_voice"], [59, 3, 1, "", "orphan"], [59, 3, 1, "", "parent"], [59, 3, 1, "", "prolation"], [59, 3, 1, "", "root"], [59, 2, 1, "", "score_index"]], "abjad.parsers": [[60, 0, 0, "-", "base"], [62, 0, 0, "-", "parse"], [63, 0, 0, "-", "parser"], [64, 0, 0, "-", "reduced"], [65, 0, 0, "-", "scheme"]], "abjad.parsers.base": [[60, 1, 1, "", "Parser"]], "abjad.parsers.base.Parser": [[60, 2, 1, "", "__call__"], [60, 3, 1, "", "debug"], [60, 3, 1, "", "lexer"], [60, 3, 1, "", "logger"], [60, 3, 1, "", "logger_path"], [60, 3, 1, "", "output_path"], [60, 3, 1, "", "parser"], [60, 3, 1, "", "pickle_path"], [60, 2, 1, "", "tokenize"]], "abjad.parsers.parse": [[62, 4, 1, "", "parse"]], "abjad.parsers.parser": [[63, 1, 1, "", "ContextSpeccedMusic"], [63, 1, 1, "", "GuileProxy"], [63, 1, 1, "", "LilyPondDuration"], [63, 1, 1, "", "LilyPondEvent"], [63, 1, 1, "", "LilyPondFraction"], [63, 1, 1, "", "LilyPondGrammarGenerator"], [63, 1, 1, "", "LilyPondLexicalDefinition"], [63, 1, 1, "", "LilyPondParser"], [63, 1, 1, "", "LilyPondSyntacticalDefinition"], [63, 1, 1, "", "MarkupCommand"], [63, 1, 1, "", "Music"], [63, 1, 1, "", "SequentialMusic"], [63, 1, 1, "", "SimultaneousMusic"], [63, 1, 1, "", "SyntaxNode"]], "abjad.parsers.parser.ContextSpeccedMusic": [[63, 2, 1, "", "construct"], [63, 3, 1, "", "known_contexts"]], "abjad.parsers.parser.GuileProxy": [[63, 2, 1, "", "__call__"], [63, 2, 1, "", "acciaccatura"], [63, 2, 1, "", "appoggiatura"], [63, 2, 1, "", "bar"], [63, 2, 1, "", "breathe"], [63, 2, 1, "", "clef"], [63, 2, 1, "", "grace"], [63, 2, 1, "", "key"], [63, 2, 1, "", "language"], [63, 2, 1, "", "makeClusters"], [63, 2, 1, "", "mark"], [63, 2, 1, "", "oneVoice"], [63, 2, 1, "", "relative"], [63, 2, 1, "", "skip"], [63, 2, 1, "", "slashed_grace_container"], [63, 2, 1, "", "time"], [63, 2, 1, "", "times"], [63, 2, 1, "", "transpose"], [63, 2, 1, "", "tuplet"], [63, 2, 1, "", "voiceFour"], [63, 2, 1, "", "voiceOne"], [63, 2, 1, "", "voiceThree"], [63, 2, 1, "", "voiceTwo"]], "abjad.parsers.parser.LilyPondEvent": [[63, 2, 1, "", "__repr__"]], "abjad.parsers.parser.LilyPondGrammarGenerator": [[63, 2, 1, "", "__call__"]], "abjad.parsers.parser.LilyPondLexicalDefinition": [[63, 2, 1, "", "push_signature"], [63, 2, 1, "", "scan_bare_word"], [63, 2, 1, "", "scan_escaped_word"], [63, 2, 1, "", "t_651_a"], [63, 2, 1, "", "t_651_b"], [63, 2, 1, "", "t_661"], [63, 2, 1, "", "t_666"], [63, 2, 1, "", "t_ANY_165"], [63, 2, 1, "", "t_INITIAL_643"], [63, 2, 1, "", "t_INITIAL_646"], [63, 2, 1, "", "t_INITIAL_markup_notes_210"], [63, 2, 1, "", "t_INITIAL_markup_notes_214"], [63, 2, 1, "", "t_INITIAL_markup_notes_214_EOF"], [63, 2, 1, "", "t_INITIAL_markup_notes_216"], [63, 2, 1, "", "t_INITIAL_markup_notes_218"], [63, 2, 1, "", "t_INITIAL_markup_notes_220"], [63, 2, 1, "", "t_INITIAL_markup_notes_222"], [63, 2, 1, "", "t_INITIAL_markup_notes_227"], [63, 2, 1, "", "t_INITIAL_markup_notes_353"], [63, 2, 1, "", "t_INITIAL_notes_233"], [63, 2, 1, "", "t_INITIAL_notes_387"], [63, 2, 1, "", "t_INITIAL_notes_390"], [63, 2, 1, "", "t_INITIAL_notes_396"], [63, 2, 1, "", "t_INITIAL_notes_399"], [63, 2, 1, "", "t_INITIAL_notes_686"], [63, 2, 1, "", "t_error"], [63, 2, 1, "", "t_longcomment_291"], [63, 2, 1, "", "t_longcomment_293"], [63, 2, 1, "", "t_longcomment_296"], [63, 2, 1, "", "t_longcomment_error"], [63, 2, 1, "", "t_markup_545"], [63, 2, 1, "", "t_markup_548"], [63, 2, 1, "", "t_markup_601"], [63, 2, 1, "", "t_markup_error"], [63, 2, 1, "", "t_newline"], [63, 2, 1, "", "t_notes_417"], [63, 2, 1, "", "t_notes_421"], [63, 2, 1, "", "t_notes_424"], [63, 2, 1, "", "t_notes_428"], [63, 2, 1, "", "t_notes_428b"], [63, 2, 1, "", "t_notes_433"], [63, 2, 1, "", "t_notes_error"], [63, 2, 1, "", "t_quote_440"], [63, 2, 1, "", "t_quote_443"], [63, 2, 1, "", "t_quote_446"], [63, 2, 1, "", "t_quote_456"], [63, 2, 1, "", "t_quote_XXX"], [63, 2, 1, "", "t_quote_error"], [63, 2, 1, "", "t_scheme_error"], [63, 2, 1, "", "t_version_242"], [63, 2, 1, "", "t_version_278"], [63, 2, 1, "", "t_version_341"], [63, 2, 1, "", "t_version_error"]], "abjad.parsers.parser.LilyPondParser": [[63, 2, 1, "", "__call__"], [63, 3, 1, "", "available_languages"], [63, 3, 1, "", "debug"], [63, 3, 1, "", "default_language"], [63, 3, 1, "", "lexer"], [63, 3, 1, "", "lexer_rules_object"], [63, 2, 1, "", "list_known_contexts"], [63, 2, 1, "", "list_known_dynamics"], [63, 2, 1, "", "list_known_grobs"], [63, 2, 1, "", "list_known_languages"], [63, 2, 1, "", "list_known_markup_functions"], [63, 2, 1, "", "list_known_music_functions"], [63, 3, 1, "", "logger"], [63, 3, 1, "", "logger_path"], [63, 3, 1, "", "output_path"], [63, 3, 1, "", "parser"], [63, 3, 1, "", "parser_rules_object"], [63, 3, 1, "", "pickle_path"], [63, 2, 1, "", "register_markup_function"], [63, 2, 1, "", "tokenize"]], "abjad.parsers.parser.LilyPondSyntacticalDefinition": [[63, 2, 1, "", "p_assignment__assignment_id__Chr61__identifier_init"], [63, 2, 1, "", "p_assignment__embedded_scm"], [63, 2, 1, "", "p_assignment_id__STRING"], [63, 2, 1, "", "p_bare_number__REAL__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_bare_number__UNSIGNED__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_bare_number__bare_number_closed"], [63, 2, 1, "", "p_bare_number_closed__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_bare_number_closed__REAL"], [63, 2, 1, "", "p_bare_number_closed__UNSIGNED"], [63, 2, 1, "", "p_bare_unsigned__UNSIGNED"], [63, 2, 1, "", "p_braced_music_list__Chr123__music_list__Chr125"], [63, 2, 1, "", "p_chord_body__ANGLE_OPEN__chord_body_elements__ANGLE_CLOSE"], [63, 2, 1, "", "p_chord_body_element__music_function_chord_body"], [63, 2, 1, "", "p_chord_body_element__pitch__exclamations__questions__octave_check__post_events"], [63, 2, 1, "", "p_chord_body_elements__Empty"], [63, 2, 1, "", "p_chord_body_elements__chord_body_elements__chord_body_element"], [63, 2, 1, "", "p_closed_music__complex_music_prefix__closed_music"], [63, 2, 1, "", "p_closed_music__music_bare"], [63, 2, 1, "", "p_command_element__Chr124"], [63, 2, 1, "", "p_command_element__E_BACKSLASH"], [63, 2, 1, "", "p_command_element__command_event"], [63, 2, 1, "", "p_command_event__tempo_event"], [63, 2, 1, "", "p_complex_music__complex_music_prefix__music"], [63, 2, 1, "", "p_complex_music__music_function_call"], [63, 2, 1, "", "p_complex_music_prefix__CONTEXT__simple_string__optional_id__optional_context_mod"], [63, 2, 1, "", "p_complex_music_prefix__NEWCONTEXT__simple_string__optional_id__optional_context_mod"], [63, 2, 1, "", "p_composite_music__complex_music"], [63, 2, 1, "", "p_composite_music__music_bare"], [63, 2, 1, "", "p_context_change__CHANGE__STRING__Chr61__STRING"], [63, 2, 1, "", "p_context_def_spec_block__CONTEXT__Chr123__context_def_spec_body__Chr125"], [63, 2, 1, "", "p_context_def_spec_body__CONTEXT_DEF_IDENTIFIER"], [63, 2, 1, "", "p_context_def_spec_body__Empty"], [63, 2, 1, "", "p_context_def_spec_body__context_def_spec_body__context_mod"], [63, 2, 1, "", "p_context_def_spec_body__context_def_spec_body__context_modification"], [63, 2, 1, "", "p_context_def_spec_body__context_def_spec_body__embedded_scm"], [63, 2, 1, "", "p_context_mod__property_operation"], [63, 2, 1, "", "p_context_mod_list__Empty"], [63, 2, 1, "", "p_context_mod_list__context_mod_list__CONTEXT_MOD_IDENTIFIER"], [63, 2, 1, "", "p_context_mod_list__context_mod_list__context_mod"], [63, 2, 1, "", "p_context_mod_list__context_mod_list__embedded_scm"], [63, 2, 1, "", "p_context_modification__CONTEXT_MOD_IDENTIFIER"], [63, 2, 1, "", "p_context_modification__WITH__CONTEXT_MOD_IDENTIFIER"], [63, 2, 1, "", "p_context_modification__WITH__Chr123__context_mod_list__Chr125"], [63, 2, 1, "", "p_context_modification__WITH__embedded_scm_closed"], [63, 2, 1, "", "p_context_prop_spec__simple_string"], [63, 2, 1, "", "p_context_prop_spec__simple_string__Chr46__simple_string"], [63, 2, 1, "", "p_direction_less_char__Chr126"], [63, 2, 1, "", "p_direction_less_char__Chr40"], [63, 2, 1, "", "p_direction_less_char__Chr41"], [63, 2, 1, "", "p_direction_less_char__Chr91"], [63, 2, 1, "", "p_direction_less_char__Chr93"], [63, 2, 1, "", "p_direction_less_char__E_ANGLE_CLOSE"], [63, 2, 1, "", "p_direction_less_char__E_ANGLE_OPEN"], [63, 2, 1, "", "p_direction_less_char__E_CLOSE"], [63, 2, 1, "", "p_direction_less_char__E_EXCLAMATION"], [63, 2, 1, "", "p_direction_less_char__E_OPEN"], [63, 2, 1, "", "p_direction_less_event__EVENT_IDENTIFIER"], [63, 2, 1, "", "p_direction_less_event__direction_less_char"], [63, 2, 1, "", "p_direction_less_event__event_function_event"], [63, 2, 1, "", "p_direction_less_event__tremolo_type"], [63, 2, 1, "", "p_direction_reqd_event__gen_text_def"], [63, 2, 1, "", "p_direction_reqd_event__script_abbreviation"], [63, 2, 1, "", "p_dots__Empty"], [63, 2, 1, "", "p_dots__dots__Chr46"], [63, 2, 1, "", "p_duration_length__multiplied_duration"], [63, 2, 1, "", "p_embedded_scm__embedded_scm_bare"], [63, 2, 1, "", "p_embedded_scm__scm_function_call"], [63, 2, 1, "", "p_embedded_scm_arg__embedded_scm_bare_arg"], [63, 2, 1, "", "p_embedded_scm_arg__music_arg"], [63, 2, 1, "", "p_embedded_scm_arg__scm_function_call"], [63, 2, 1, "", "p_embedded_scm_arg_closed__closed_music"], [63, 2, 1, "", "p_embedded_scm_arg_closed__embedded_scm_bare_arg"], [63, 2, 1, "", "p_embedded_scm_arg_closed__scm_function_call_closed"], [63, 2, 1, "", "p_embedded_scm_bare__SCM_IDENTIFIER"], [63, 2, 1, "", "p_embedded_scm_bare__SCM_TOKEN"], [63, 2, 1, "", "p_embedded_scm_bare_arg__STRING"], [63, 2, 1, "", "p_embedded_scm_bare_arg__STRING_IDENTIFIER"], [63, 2, 1, "", "p_embedded_scm_bare_arg__context_def_spec_block"], [63, 2, 1, "", "p_embedded_scm_bare_arg__context_modification"], [63, 2, 1, "", "p_embedded_scm_bare_arg__embedded_scm_bare"], [63, 2, 1, "", "p_embedded_scm_bare_arg__full_markup"], [63, 2, 1, "", "p_embedded_scm_bare_arg__full_markup_list"], [63, 2, 1, "", "p_embedded_scm_bare_arg__output_def"], [63, 2, 1, "", "p_embedded_scm_bare_arg__score_block"], [63, 2, 1, "", "p_embedded_scm_chord_body__SCM_FUNCTION__music_function_chord_body_arglist"], [63, 2, 1, "", "p_embedded_scm_chord_body__bare_number"], [63, 2, 1, "", "p_embedded_scm_chord_body__chord_body_element"], [63, 2, 1, "", "p_embedded_scm_chord_body__embedded_scm_bare_arg"], [63, 2, 1, "", "p_embedded_scm_chord_body__fraction"], [63, 2, 1, "", "p_embedded_scm_closed__embedded_scm_bare"], [63, 2, 1, "", "p_embedded_scm_closed__scm_function_call_closed"], [63, 2, 1, "", "p_error"], [63, 2, 1, "", "p_event_chord__CHORD_REPETITION__optional_notemode_duration__post_events"], [63, 2, 1, "", "p_event_chord__MULTI_MEASURE_REST__optional_notemode_duration__post_events"], [63, 2, 1, "", "p_event_chord__command_element"], [63, 2, 1, "", "p_event_chord__note_chord_element"], [63, 2, 1, "", "p_event_chord__simple_chord_elements__post_events"], [63, 2, 1, "", "p_event_function_event__EVENT_FUNCTION__function_arglist_closed"], [63, 2, 1, "", "p_exclamations__Empty"], [63, 2, 1, "", "p_exclamations__exclamations__Chr33"], [63, 2, 1, "", "p_fingering__UNSIGNED"], [63, 2, 1, "", "p_fraction__FRACTION"], [63, 2, 1, "", "p_fraction__UNSIGNED__Chr47__UNSIGNED"], [63, 2, 1, "", "p_full_markup__MARKUP_IDENTIFIER"], [63, 2, 1, "", "p_full_markup__MARKUP__markup_top"], [63, 2, 1, "", "p_full_markup_list__MARKUPLIST_IDENTIFIER"], [63, 2, 1, "", "p_full_markup_list__MARKUPLIST__markup_list"], [63, 2, 1, "", "p_function_arglist__function_arglist_common"], [63, 2, 1, "", "p_function_arglist__function_arglist_nonbackup"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_closed_keep__duration_length"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_keep__pitch_also_in_chords"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_backup__BACKUP"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__Chr45__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__Chr45__REAL"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__Chr45__UNSIGNED"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__FRACTION"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__REAL"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__UNSIGNED"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__post_event_nofinger"], [63, 2, 1, "", "p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_keep__embedded_scm_arg_closed"], [63, 2, 1, "", "p_function_arglist_backup__function_arglist_backup__REPARSE__bare_number"], [63, 2, 1, "", "p_function_arglist_backup__function_arglist_backup__REPARSE__embedded_scm_arg_closed"], [63, 2, 1, "", "p_function_arglist_backup__function_arglist_backup__REPARSE__fraction"], [63, 2, 1, "", "p_function_arglist_bare__EXPECT_DURATION__function_arglist_closed_optional__duration_length"], [63, 2, 1, "", "p_function_arglist_bare__EXPECT_NO_MORE_ARGS"], [63, 2, 1, "", "p_function_arglist_bare__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_skip__DEFAULT"], [63, 2, 1, "", "p_function_arglist_bare__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_skip__DEFAULT"], [63, 2, 1, "", "p_function_arglist_bare__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_skip__DEFAULT"], [63, 2, 1, "", "p_function_arglist_bare__EXPECT_PITCH__function_arglist_optional__pitch_also_in_chords"], [63, 2, 1, "", "p_function_arglist_closed__function_arglist_closed_common"], [63, 2, 1, "", "p_function_arglist_closed__function_arglist_nonbackup"], [63, 2, 1, "", "p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__Chr45__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__Chr45__REAL"], [63, 2, 1, "", "p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__Chr45__UNSIGNED"], [63, 2, 1, "", "p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__bare_number"], [63, 2, 1, "", "p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__fraction"], [63, 2, 1, "", "p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__post_event_nofinger"], [63, 2, 1, "", "p_function_arglist_closed_common__EXPECT_SCM__function_arglist_optional__embedded_scm_arg_closed"], [63, 2, 1, "", "p_function_arglist_closed_common__function_arglist_bare"], [63, 2, 1, "", "p_function_arglist_closed_keep__function_arglist_backup"], [63, 2, 1, "", "p_function_arglist_closed_keep__function_arglist_closed_common"], [63, 2, 1, "", "p_function_arglist_closed_optional__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_closed_optional"], [63, 2, 1, "", "p_function_arglist_closed_optional__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_closed_optional"], [63, 2, 1, "", "p_function_arglist_closed_optional__function_arglist_backup__BACKUP"], [63, 2, 1, "", "p_function_arglist_closed_optional__function_arglist_closed_keep"], [63, 2, 1, "", "p_function_arglist_common__EXPECT_SCM__function_arglist_closed_optional__bare_number"], [63, 2, 1, "", "p_function_arglist_common__EXPECT_SCM__function_arglist_closed_optional__fraction"], [63, 2, 1, "", "p_function_arglist_common__EXPECT_SCM__function_arglist_closed_optional__post_event_nofinger"], [63, 2, 1, "", "p_function_arglist_common__EXPECT_SCM__function_arglist_optional__embedded_scm_arg"], [63, 2, 1, "", "p_function_arglist_common__function_arglist_bare"], [63, 2, 1, "", "p_function_arglist_common__function_arglist_common_minus"], [63, 2, 1, "", "p_function_arglist_common_minus__EXPECT_SCM__function_arglist_closed_optional__Chr45__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_function_arglist_common_minus__EXPECT_SCM__function_arglist_closed_optional__Chr45__REAL"], [63, 2, 1, "", "p_function_arglist_common_minus__EXPECT_SCM__function_arglist_closed_optional__Chr45__UNSIGNED"], [63, 2, 1, "", "p_function_arglist_common_minus__function_arglist_common_minus__REPARSE__bare_number"], [63, 2, 1, "", "p_function_arglist_keep__function_arglist_backup"], [63, 2, 1, "", "p_function_arglist_keep__function_arglist_common"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_closed__duration_length"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist__pitch_also_in_chords"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist__embedded_scm_arg_closed"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__Chr45__NUMBER_IDENTIFIER"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__Chr45__REAL"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__Chr45__UNSIGNED"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__FRACTION"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__bare_number_closed"], [63, 2, 1, "", "p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__post_event_nofinger"], [63, 2, 1, "", "p_function_arglist_optional__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_optional"], [63, 2, 1, "", "p_function_arglist_optional__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_optional"], [63, 2, 1, "", "p_function_arglist_optional__function_arglist_backup__BACKUP"], [63, 2, 1, "", "p_function_arglist_optional__function_arglist_keep"], [63, 2, 1, "", "p_function_arglist_skip__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_skip"], [63, 2, 1, "", "p_function_arglist_skip__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_skip"], [63, 2, 1, "", "p_function_arglist_skip__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_skip"], [63, 2, 1, "", "p_function_arglist_skip__function_arglist_common"], [63, 2, 1, "", "p_gen_text_def__full_markup"], [63, 2, 1, "", "p_gen_text_def__simple_string"], [63, 2, 1, "", "p_grouped_music_list__sequential_music"], [63, 2, 1, "", "p_grouped_music_list__simultaneous_music"], [63, 2, 1, "", "p_identifier_init__context_def_spec_block"], [63, 2, 1, "", "p_identifier_init__context_modification"], [63, 2, 1, "", "p_identifier_init__embedded_scm"], [63, 2, 1, "", "p_identifier_init__full_markup"], [63, 2, 1, "", "p_identifier_init__full_markup_list"], [63, 2, 1, "", "p_identifier_init__music"], [63, 2, 1, "", "p_identifier_init__number_expression"], [63, 2, 1, "", "p_identifier_init__output_def"], [63, 2, 1, "", "p_identifier_init__post_event_nofinger"], [63, 2, 1, "", "p_identifier_init__score_block"], [63, 2, 1, "", "p_identifier_init__string"], [63, 2, 1, "", "p_lilypond__Empty"], [63, 2, 1, "", "p_lilypond__lilypond__assignment"], [63, 2, 1, "", "p_lilypond__lilypond__error"], [63, 2, 1, "", "p_lilypond__lilypond__toplevel_expression"], [63, 2, 1, "", "p_lilypond_header__HEADER__Chr123__lilypond_header_body__Chr125"], [63, 2, 1, "", "p_lilypond_header_body__Empty"], [63, 2, 1, "", "p_lilypond_header_body__lilypond_header_body__assignment"], [63, 2, 1, "", "p_markup__markup_head_1_list__simple_markup"], [63, 2, 1, "", "p_markup__simple_markup"], [63, 2, 1, "", "p_markup_braced_list__Chr123__markup_braced_list_body__Chr125"], [63, 2, 1, "", "p_markup_braced_list_body__Empty"], [63, 2, 1, "", "p_markup_braced_list_body__markup_braced_list_body__markup"], [63, 2, 1, "", "p_markup_braced_list_body__markup_braced_list_body__markup_list"], [63, 2, 1, "", "p_markup_command_basic_arguments__EXPECT_MARKUP_LIST__markup_command_list_arguments__markup_list"], [63, 2, 1, "", "p_markup_command_basic_arguments__EXPECT_NO_MORE_ARGS"], [63, 2, 1, "", "p_markup_command_basic_arguments__EXPECT_SCM__markup_command_list_arguments__embedded_scm_closed"], [63, 2, 1, "", "p_markup_command_list__MARKUP_LIST_FUNCTION__markup_command_list_arguments"], [63, 2, 1, "", "p_markup_command_list_arguments__EXPECT_MARKUP__markup_command_list_arguments__markup"], [63, 2, 1, "", "p_markup_command_list_arguments__markup_command_basic_arguments"], [63, 2, 1, "", "p_markup_composed_list__markup_head_1_list__markup_braced_list"], [63, 2, 1, "", "p_markup_head_1_item__MARKUP_FUNCTION__EXPECT_MARKUP__markup_command_list_arguments"], [63, 2, 1, "", "p_markup_head_1_list__markup_head_1_item"], [63, 2, 1, "", "p_markup_head_1_list__markup_head_1_list__markup_head_1_item"], [63, 2, 1, "", "p_markup_list__MARKUPLIST_IDENTIFIER"], [63, 2, 1, "", "p_markup_list__markup_braced_list"], [63, 2, 1, "", "p_markup_list__markup_command_list"], [63, 2, 1, "", "p_markup_list__markup_composed_list"], [63, 2, 1, "", "p_markup_list__markup_scm__MARKUPLIST_IDENTIFIER"], [63, 2, 1, "", "p_markup_scm__embedded_scm_bare__BACKUP"], [63, 2, 1, "", "p_markup_top__markup_head_1_list__simple_markup"], [63, 2, 1, "", "p_markup_top__markup_list"], [63, 2, 1, "", "p_markup_top__simple_markup"], [63, 2, 1, "", "p_multiplied_duration__multiplied_duration__Chr42__FRACTION"], [63, 2, 1, "", "p_multiplied_duration__multiplied_duration__Chr42__bare_unsigned"], [63, 2, 1, "", "p_multiplied_duration__steno_duration"], [63, 2, 1, "", "p_music__composite_music"], [63, 2, 1, "", "p_music__simple_music"], [63, 2, 1, "", "p_music_arg__composite_music"], [63, 2, 1, "", "p_music_arg__simple_music"], [63, 2, 1, "", "p_music_bare__MUSIC_IDENTIFIER"], [63, 2, 1, "", "p_music_bare__grouped_music_list"], [63, 2, 1, "", "p_music_function_call__MUSIC_FUNCTION__function_arglist"], [63, 2, 1, "", "p_music_function_chord_body__MUSIC_FUNCTION__music_function_chord_body_arglist"], [63, 2, 1, "", "p_music_function_chord_body_arglist__EXPECT_SCM__music_function_chord_body_arglist__embedded_scm_chord_body"], [63, 2, 1, "", "p_music_function_chord_body_arglist__function_arglist_bare"], [63, 2, 1, "", "p_music_function_event__MUSIC_FUNCTION__function_arglist_closed"], [63, 2, 1, "", "p_music_list__Empty"], [63, 2, 1, "", "p_music_list__music_list__embedded_scm"], [63, 2, 1, "", "p_music_list__music_list__error"], [63, 2, 1, "", "p_music_list__music_list__music"], [63, 2, 1, "", "p_music_property_def__simple_music_property_def"], [63, 2, 1, "", "p_note_chord_element__chord_body__optional_notemode_duration__post_events"], [63, 2, 1, "", "p_number_expression__number_expression__Chr43__number_term"], [63, 2, 1, "", "p_number_expression__number_expression__Chr45__number_term"], [63, 2, 1, "", "p_number_expression__number_term"], [63, 2, 1, "", "p_number_factor__Chr45__number_factor"], [63, 2, 1, "", "p_number_factor__bare_number"], [63, 2, 1, "", "p_number_term__number_factor"], [63, 2, 1, "", "p_number_term__number_factor__Chr42__number_factor"], [63, 2, 1, "", "p_number_term__number_factor__Chr47__number_factor"], [63, 2, 1, "", "p_octave_check__Chr61"], [63, 2, 1, "", "p_octave_check__Chr61__sub_quotes"], [63, 2, 1, "", "p_octave_check__Chr61__sup_quotes"], [63, 2, 1, "", "p_octave_check__Empty"], [63, 2, 1, "", "p_optional_context_mod__Empty"], [63, 2, 1, "", "p_optional_context_mod__context_modification"], [63, 2, 1, "", "p_optional_id__Chr61__simple_string"], [63, 2, 1, "", "p_optional_id__Empty"], [63, 2, 1, "", "p_optional_notemode_duration__Empty"], [63, 2, 1, "", "p_optional_notemode_duration__multiplied_duration"], [63, 2, 1, "", "p_optional_rest__Empty"], [63, 2, 1, "", "p_optional_rest__REST"], [63, 2, 1, "", "p_output_def__output_def_body__Chr125"], [63, 2, 1, "", "p_output_def_body__output_def_body__assignment"], [63, 2, 1, "", "p_output_def_body__output_def_head_with_mode_switch__Chr123"], [63, 2, 1, "", "p_output_def_body__output_def_head_with_mode_switch__Chr123__OUTPUT_DEF_IDENTIFIER"], [63, 2, 1, "", "p_output_def_head__LAYOUT"], [63, 2, 1, "", "p_output_def_head__MIDI"], [63, 2, 1, "", "p_output_def_head__PAPER"], [63, 2, 1, "", "p_output_def_head_with_mode_switch__output_def_head"], [63, 2, 1, "", "p_pitch__PITCH_IDENTIFIER"], [63, 2, 1, "", "p_pitch__steno_pitch"], [63, 2, 1, "", "p_pitch_also_in_chords__pitch"], [63, 2, 1, "", "p_pitch_also_in_chords__steno_tonic_pitch"], [63, 2, 1, "", "p_post_event__Chr45__fingering"], [63, 2, 1, "", "p_post_event__post_event_nofinger"], [63, 2, 1, "", "p_post_event_nofinger__Chr94__fingering"], [63, 2, 1, "", "p_post_event_nofinger__Chr95__fingering"], [63, 2, 1, "", "p_post_event_nofinger__EXTENDER"], [63, 2, 1, "", "p_post_event_nofinger__HYPHEN"], [63, 2, 1, "", "p_post_event_nofinger__direction_less_event"], [63, 2, 1, "", "p_post_event_nofinger__script_dir__direction_less_event"], [63, 2, 1, "", "p_post_event_nofinger__script_dir__direction_reqd_event"], [63, 2, 1, "", "p_post_event_nofinger__script_dir__music_function_event"], [63, 2, 1, "", "p_post_event_nofinger__string_number_event"], [63, 2, 1, "", "p_post_events__Empty"], [63, 2, 1, "", "p_post_events__post_events__post_event"], [63, 2, 1, "", "p_property_operation__OVERRIDE__simple_string__property_path__Chr61__scalar"], [63, 2, 1, "", "p_property_operation__REVERT__simple_string__embedded_scm"], [63, 2, 1, "", "p_property_operation__STRING__Chr61__scalar"], [63, 2, 1, "", "p_property_operation__UNSET__simple_string"], [63, 2, 1, "", "p_property_path__property_path_revved"], [63, 2, 1, "", "p_property_path_revved__embedded_scm_closed"], [63, 2, 1, "", "p_property_path_revved__property_path_revved__embedded_scm_closed"], [63, 2, 1, "", "p_questions__Empty"], [63, 2, 1, "", "p_questions__questions__Chr63"], [63, 2, 1, "", "p_scalar__bare_number"], [63, 2, 1, "", "p_scalar__embedded_scm_arg"], [63, 2, 1, "", "p_scalar_closed__bare_number"], [63, 2, 1, "", "p_scalar_closed__embedded_scm_arg_closed"], [63, 2, 1, "", "p_scm_function_call__SCM_FUNCTION__function_arglist"], [63, 2, 1, "", "p_scm_function_call_closed__SCM_FUNCTION__function_arglist_closed"], [63, 2, 1, "", "p_score_block__SCORE__Chr123__score_body__Chr125"], [63, 2, 1, "", "p_score_body__SCORE_IDENTIFIER"], [63, 2, 1, "", "p_score_body__music"], [63, 2, 1, "", "p_score_body__score_body__lilypond_header"], [63, 2, 1, "", "p_score_body__score_body__output_def"], [63, 2, 1, "", "p_script_abbreviation__ANGLE_CLOSE"], [63, 2, 1, "", "p_script_abbreviation__Chr33"], [63, 2, 1, "", "p_script_abbreviation__Chr43"], [63, 2, 1, "", "p_script_abbreviation__Chr45"], [63, 2, 1, "", "p_script_abbreviation__Chr46"], [63, 2, 1, "", "p_script_abbreviation__Chr94"], [63, 2, 1, "", "p_script_abbreviation__Chr95"], [63, 2, 1, "", "p_script_dir__Chr45"], [63, 2, 1, "", "p_script_dir__Chr94"], [63, 2, 1, "", "p_script_dir__Chr95"], [63, 2, 1, "", "p_sequential_music__SEQUENTIAL__braced_music_list"], [63, 2, 1, "", "p_sequential_music__braced_music_list"], [63, 2, 1, "", "p_simple_chord_elements__simple_element"], [63, 2, 1, "", "p_simple_element__RESTNAME__optional_notemode_duration"], [63, 2, 1, "", "p_simple_element__pitch__exclamations__questions__octave_check__optional_notemode_duration__optional_rest"], [63, 2, 1, "", "p_simple_markup__MARKUP_FUNCTION__markup_command_basic_arguments"], [63, 2, 1, "", "p_simple_markup__MARKUP_IDENTIFIER"], [63, 2, 1, "", "p_simple_markup__SCORE__Chr123__score_body__Chr125"], [63, 2, 1, "", "p_simple_markup__STRING"], [63, 2, 1, "", "p_simple_markup__STRING_IDENTIFIER"], [63, 2, 1, "", "p_simple_music__context_change"], [63, 2, 1, "", "p_simple_music__event_chord"], [63, 2, 1, "", "p_simple_music__music_property_def"], [63, 2, 1, "", "p_simple_music_property_def__OVERRIDE__context_prop_spec__property_path__Chr61__scalar"], [63, 2, 1, "", "p_simple_music_property_def__REVERT__context_prop_spec__embedded_scm"], [63, 2, 1, "", "p_simple_music_property_def__SET__context_prop_spec__Chr61__scalar"], [63, 2, 1, "", "p_simple_music_property_def__UNSET__context_prop_spec"], [63, 2, 1, "", "p_simple_string__STRING"], [63, 2, 1, "", "p_simple_string__STRING_IDENTIFIER"], [63, 2, 1, "", "p_simultaneous_music__DOUBLE_ANGLE_OPEN__music_list__DOUBLE_ANGLE_CLOSE"], [63, 2, 1, "", "p_simultaneous_music__SIMULTANEOUS__braced_music_list"], [63, 2, 1, "", "p_start_symbol__lilypond"], [63, 2, 1, "", "p_steno_duration__DURATION_IDENTIFIER__dots"], [63, 2, 1, "", "p_steno_duration__bare_unsigned__dots"], [63, 2, 1, "", "p_steno_pitch__NOTENAME_PITCH"], [63, 2, 1, "", "p_steno_pitch__NOTENAME_PITCH__sub_quotes"], [63, 2, 1, "", "p_steno_pitch__NOTENAME_PITCH__sup_quotes"], [63, 2, 1, "", "p_steno_tonic_pitch__TONICNAME_PITCH"], [63, 2, 1, "", "p_steno_tonic_pitch__TONICNAME_PITCH__sub_quotes"], [63, 2, 1, "", "p_steno_tonic_pitch__TONICNAME_PITCH__sup_quotes"], [63, 2, 1, "", "p_string__STRING"], [63, 2, 1, "", "p_string__STRING_IDENTIFIER"], [63, 2, 1, "", "p_string__string__Chr43__string"], [63, 2, 1, "", "p_string_number_event__E_UNSIGNED"], [63, 2, 1, "", "p_sub_quotes__Chr44"], [63, 2, 1, "", "p_sub_quotes__sub_quotes__Chr44"], [63, 2, 1, "", "p_sup_quotes__Chr39"], [63, 2, 1, "", "p_sup_quotes__sup_quotes__Chr39"], [63, 2, 1, "", "p_tempo_event__TEMPO__scalar"], [63, 2, 1, "", "p_tempo_event__TEMPO__scalar_closed__steno_duration__Chr61__tempo_range"], [63, 2, 1, "", "p_tempo_event__TEMPO__steno_duration__Chr61__tempo_range"], [63, 2, 1, "", "p_tempo_range__bare_unsigned"], [63, 2, 1, "", "p_tempo_range__bare_unsigned__Chr45__bare_unsigned"], [63, 2, 1, "", "p_toplevel_expression__composite_music"], [63, 2, 1, "", "p_toplevel_expression__full_markup"], [63, 2, 1, "", "p_toplevel_expression__full_markup_list"], [63, 2, 1, "", "p_toplevel_expression__lilypond_header"], [63, 2, 1, "", "p_toplevel_expression__output_def"], [63, 2, 1, "", "p_toplevel_expression__score_block"], [63, 2, 1, "", "p_tremolo_type__Chr58"], [63, 2, 1, "", "p_tremolo_type__Chr58__bare_unsigned"]], "abjad.parsers.parser.MarkupCommand": [[63, 2, 1, "", "__eq__"], [63, 2, 1, "", "__hash__"], [63, 2, 1, "", "__repr__"]], "abjad.parsers.parser.SequentialMusic": [[63, 2, 1, "", "construct"]], "abjad.parsers.parser.SyntaxNode": [[63, 2, 1, "", "__getitem__"], [63, 2, 1, "", "__len__"], [63, 2, 1, "", "__repr__"]], "abjad.parsers.reduced": [[64, 1, 1, "", "ReducedLyParser"], [64, 4, 1, "", "parse_reduced_ly_syntax"]], "abjad.parsers.reduced.ReducedLyParser": [[64, 2, 1, "", "__call__"], [64, 3, 1, "", "debug"], [64, 3, 1, "", "lexer"], [64, 3, 1, "", "lexer_rules_object"], [64, 3, 1, "", "logger"], [64, 3, 1, "", "logger_path"], [64, 3, 1, "", "output_path"], [64, 2, 1, "", "p_apostrophes__APOSTROPHE"], [64, 2, 1, "", "p_apostrophes__apostrophes__APOSTROPHE"], [64, 2, 1, "", "p_beam__BRACKET_L"], [64, 2, 1, "", "p_beam__BRACKET_R"], [64, 2, 1, "", "p_chord_body__chord_pitches"], [64, 2, 1, "", "p_chord_body__chord_pitches__positive_leaf_duration"], [64, 2, 1, "", "p_chord_pitches__CARAT_L__pitches__CARAT_R"], [64, 2, 1, "", "p_commas__COMMA"], [64, 2, 1, "", "p_commas__commas__commas"], [64, 2, 1, "", "p_component__container"], [64, 2, 1, "", "p_component__fixed_duration_container"], [64, 2, 1, "", "p_component__leaf"], [64, 2, 1, "", "p_component__tuplet"], [64, 2, 1, "", "p_component_list__EMPTY"], [64, 2, 1, "", "p_component_list__component_list__component"], [64, 2, 1, "", "p_container__BRACE_L__component_list__BRACE_R"], [64, 2, 1, "", "p_dots__EMPTY"], [64, 2, 1, "", "p_dots__dots__DOT"], [64, 2, 1, "", "p_error"], [64, 2, 1, "", "p_fixed_duration_container__BRACE_L__FRACTION__BRACE_R"], [64, 2, 1, "", "p_leaf__leaf_body__post_events"], [64, 2, 1, "", "p_leaf_body__chord_body"], [64, 2, 1, "", "p_leaf_body__note_body"], [64, 2, 1, "", "p_leaf_body__rest_body"], [64, 2, 1, "", "p_measure__PIPE__FRACTION__component_list__PIPE"], [64, 2, 1, "", "p_negative_leaf_duration__INTEGER_N__dots"], [64, 2, 1, "", "p_note_body__pitch"], [64, 2, 1, "", "p_note_body__pitch__positive_leaf_duration"], [64, 2, 1, "", "p_note_body__positive_leaf_duration"], [64, 2, 1, "", "p_pitch__PITCHNAME"], [64, 2, 1, "", "p_pitch__PITCHNAME__apostrophes"], [64, 2, 1, "", "p_pitch__PITCHNAME__commas"], [64, 2, 1, "", "p_pitches__pitch"], [64, 2, 1, "", "p_pitches__pitches__pitch"], [64, 2, 1, "", "p_positive_leaf_duration__INTEGER_P__dots"], [64, 2, 1, "", "p_post_event__beam"], [64, 2, 1, "", "p_post_event__slur"], [64, 2, 1, "", "p_post_event__tie"], [64, 2, 1, "", "p_post_events__EMPTY"], [64, 2, 1, "", "p_post_events__post_events__post_event"], [64, 2, 1, "", "p_rest_body__RESTNAME"], [64, 2, 1, "", "p_rest_body__RESTNAME__positive_leaf_duration"], [64, 2, 1, "", "p_rest_body__negative_leaf_duration"], [64, 2, 1, "", "p_slur__PAREN_L"], [64, 2, 1, "", "p_slur__PAREN_R"], [64, 2, 1, "", "p_start__EMPTY"], [64, 2, 1, "", "p_start__start__component"], [64, 2, 1, "", "p_start__start__measure"], [64, 2, 1, "", "p_tie__TILDE"], [64, 2, 1, "", "p_tuplet__FRACTION__container"], [64, 3, 1, "", "parser"], [64, 3, 1, "", "parser_rules_object"], [64, 3, 1, "", "pickle_path"], [64, 2, 1, "", "t_FRACTION"], [64, 2, 1, "", "t_INTEGER_N"], [64, 2, 1, "", "t_INTEGER_P"], [64, 2, 1, "", "t_PITCHNAME"], [64, 2, 1, "", "t_error"], [64, 2, 1, "", "t_newline"], [64, 2, 1, "", "tokenize"]], "abjad.parsers.scheme": [[65, 1, 1, "", "Scheme"], [65, 1, 1, "", "SchemeParser"]], "abjad.parsers.scheme.Scheme": [[65, 2, 1, "", "__eq__"], [65, 2, 1, "", "__repr__"]], "abjad.parsers.scheme.SchemeParser": [[65, 2, 1, "", "__call__"], [65, 3, 1, "", "debug"], [65, 3, 1, "", "lexer"], [65, 3, 1, "", "lexer_rules_object"], [65, 3, 1, "", "logger"], [65, 3, 1, "", "logger_path"], [65, 3, 1, "", "output_path"], [65, 2, 1, "", "p_boolean__BOOLEAN"], [65, 2, 1, "", "p_constant__boolean"], [65, 2, 1, "", "p_constant__number"], [65, 2, 1, "", "p_constant__string"], [65, 2, 1, "", "p_data__EMPTY"], [65, 2, 1, "", "p_data__data__datum"], [65, 2, 1, "", "p_datum__constant"], [65, 2, 1, "", "p_datum__list"], [65, 2, 1, "", "p_datum__symbol"], [65, 2, 1, "", "p_datum__vector"], [65, 2, 1, "", "p_error"], [65, 2, 1, "", "p_expression__QUOTE__datum"], [65, 2, 1, "", "p_expression__constant"], [65, 2, 1, "", "p_expression__variable"], [65, 2, 1, "", "p_form__expression"], [65, 2, 1, "", "p_forms__EMPTY"], [65, 2, 1, "", "p_forms__forms__form"], [65, 2, 1, "", "p_list__L_PAREN__data__R_PAREN"], [65, 2, 1, "", "p_list__L_PAREN__data__datum__PERIOD__datum__R_PAREN"], [65, 2, 1, "", "p_number__DECIMAL"], [65, 2, 1, "", "p_number__HEXADECIMAL"], [65, 2, 1, "", "p_number__INTEGER"], [65, 2, 1, "", "p_program__forms"], [65, 2, 1, "", "p_string__STRING"], [65, 2, 1, "", "p_symbol__IDENTIFIER"], [65, 2, 1, "", "p_variable__IDENTIFIER"], [65, 2, 1, "", "p_vector__HASH__L_PAREN__data__R_PAREN"], [65, 3, 1, "", "parser"], [65, 3, 1, "", "parser_rules_object"], [65, 3, 1, "", "pickle_path"], [65, 2, 1, "", "t_BOOLEAN"], [65, 2, 1, "", "t_DECIMAL"], [65, 2, 1, "", "t_HASH"], [65, 2, 1, "", "t_HEXADECIMAL"], [65, 2, 1, "", "t_IDENTIFIER"], [65, 2, 1, "", "t_INTEGER"], [65, 2, 1, "", "t_L_PAREN"], [65, 2, 1, "", "t_R_PAREN"], [65, 2, 1, "", "t_anything"], [65, 2, 1, "", "t_error"], [65, 2, 1, "", "t_newline"], [65, 2, 1, "", "t_quote"], [65, 2, 1, "", "t_quote_440"], [65, 2, 1, "", "t_quote_443"], [65, 2, 1, "", "t_quote_446"], [65, 2, 1, "", "t_quote_456"], [65, 2, 1, "", "t_quote_error"], [65, 2, 1, "", "t_whitespace"], [65, 2, 1, "", "tokenize"]], "abjad.pattern": [[66, 1, 1, "", "Pattern"], [66, 1, 1, "", "PatternTuple"]], "abjad.pattern.Pattern": [[66, 2, 1, "", "__and__"], [66, 2, 1, "", "__eq__"], [66, 2, 1, "", "__invert__"], [66, 2, 1, "", "__len__"], [66, 2, 1, "", "__or__"], [66, 2, 1, "", "__post_init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "__xor__"], [66, 2, 1, "", "advance"], [66, 2, 1, "", "from_vector"], [66, 2, 1, "", "get_boolean_vector"], [66, 2, 1, "", "get_matching_items"], [66, 2, 1, "", "index"], [66, 2, 1, "", "index_all"], [66, 2, 1, "", "index_first"], [66, 2, 1, "", "index_last"], [66, 2, 1, "", "matches_index"], [66, 2, 1, "", "reverse"], [66, 2, 1, "", "rotate"], [66, 3, 1, "", "weight"]], "abjad.pattern.PatternTuple": [[66, 2, 1, "", "__eq__"], [66, 2, 1, "", "__hash__"], [66, 2, 1, "", "__post_init__"], [66, 2, 1, "", "__repr__"], [66, 2, 1, "", "get_matching_pattern"], [66, 2, 1, "", "get_matching_payload"]], "abjad.pcollections": [[67, 1, 1, "", "PitchClassSegment"], [67, 1, 1, "", "PitchClassSet"], [67, 1, 1, "", "PitchRange"], [67, 1, 1, "", "PitchSegment"], [67, 1, 1, "", "PitchSet"], [67, 1, 1, "", "TwelveToneRow"], [67, 4, 1, "", "make_interval_class_vector"], [67, 4, 1, "", "voice_horizontally"], [67, 4, 1, "", "voice_vertically"]], "abjad.pcollections.PitchClassSegment": [[67, 2, 1, "", "__add__"], [67, 2, 1, "", "__contains__"], [67, 2, 1, "", "__eq__"], [67, 2, 1, "", "__getitem__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__len__"], [67, 2, 1, "", "__mul__"], [67, 2, 1, "", "__post_init__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "__rmul__"], [67, 2, 1, "", "__str__"], [67, 2, 1, "", "invert"], [67, 2, 1, "", "multiply"], [67, 2, 1, "", "retrograde"], [67, 2, 1, "", "rotate"], [67, 2, 1, "", "transpose"]], "abjad.pcollections.PitchClassSet": [[67, 2, 1, "", "__and__"], [67, 2, 1, "", "__class_getitem__"], [67, 2, 1, "", "__contains__"], [67, 2, 1, "", "__eq__"], [67, 2, 1, "", "__ge__"], [67, 2, 1, "", "__gt__"], [67, 2, 1, "", "__hash__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__le__"], [67, 2, 1, "", "__len__"], [67, 2, 1, "", "__lt__"], [67, 2, 1, "", "__ne__"], [67, 2, 1, "", "__new__"], [67, 2, 1, "", "__or__"], [67, 2, 1, "", "__rand__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "__ror__"], [67, 2, 1, "", "__rsub__"], [67, 2, 1, "", "__rxor__"], [67, 2, 1, "", "__str__"], [67, 2, 1, "", "__sub__"], [67, 2, 1, "", "__xor__"], [67, 3, 1, "", "cardinality"], [67, 2, 1, "", "copy"], [67, 2, 1, "", "difference"], [67, 2, 1, "", "get_normal_order"], [67, 2, 1, "", "get_prime_form"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "invert"], [67, 2, 1, "", "isdisjoint"], [67, 2, 1, "", "issubset"], [67, 2, 1, "", "issuperset"], [67, 2, 1, "", "multiply"], [67, 2, 1, "", "symmetric_difference"], [67, 2, 1, "", "transpose"], [67, 2, 1, "", "union"]], "abjad.pcollections.PitchRange": [[67, 2, 1, "", "__contains__"], [67, 2, 1, "", "__eq__"], [67, 2, 1, "", "__ge__"], [67, 2, 1, "", "__gt__"], [67, 2, 1, "", "__hash__"], [67, 2, 1, "", "__le__"], [67, 2, 1, "", "__lt__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "from_octave"], [67, 3, 1, "", "range_string"], [67, 3, 1, "", "start_pitch"], [67, 3, 1, "", "stop_pitch"], [67, 2, 1, "", "voice_pitch_class"]], "abjad.pcollections.PitchSegment": [[67, 2, 1, "", "__contains__"], [67, 2, 1, "", "__eq__"], [67, 2, 1, "", "__getitem__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__len__"], [67, 2, 1, "", "__post_init__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "__str__"], [67, 2, 1, "", "invert"], [67, 2, 1, "", "multiply"], [67, 2, 1, "", "retrograde"], [67, 2, 1, "", "rotate"], [67, 2, 1, "", "transpose"]], "abjad.pcollections.PitchSet": [[67, 2, 1, "", "__and__"], [67, 2, 1, "", "__class_getitem__"], [67, 2, 1, "", "__contains__"], [67, 2, 1, "", "__eq__"], [67, 2, 1, "", "__ge__"], [67, 2, 1, "", "__gt__"], [67, 2, 1, "", "__hash__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__le__"], [67, 2, 1, "", "__len__"], [67, 2, 1, "", "__lt__"], [67, 2, 1, "", "__ne__"], [67, 2, 1, "", "__new__"], [67, 2, 1, "", "__or__"], [67, 2, 1, "", "__rand__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "__ror__"], [67, 2, 1, "", "__rsub__"], [67, 2, 1, "", "__rxor__"], [67, 2, 1, "", "__str__"], [67, 2, 1, "", "__sub__"], [67, 2, 1, "", "__xor__"], [67, 2, 1, "", "copy"], [67, 2, 1, "", "difference"], [67, 2, 1, "", "intersection"], [67, 2, 1, "", "isdisjoint"], [67, 2, 1, "", "issubset"], [67, 2, 1, "", "issuperset"], [67, 2, 1, "", "symmetric_difference"], [67, 2, 1, "", "union"]], "abjad.pcollections.TwelveToneRow": [[67, 2, 1, "", "__add__"], [67, 2, 1, "", "__call__"], [67, 2, 1, "", "__contains__"], [67, 2, 1, "", "__eq__"], [67, 2, 1, "", "__getitem__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__len__"], [67, 2, 1, "", "__mul__"], [67, 2, 1, "", "__post_init__"], [67, 2, 1, "", "__repr__"], [67, 2, 1, "", "__rmul__"], [67, 2, 1, "", "__str__"], [67, 2, 1, "", "count"], [67, 2, 1, "", "index"], [67, 2, 1, "", "invert"], [67, 2, 1, "", "multiply"], [67, 2, 1, "", "retrograde"], [67, 2, 1, "", "rotate"], [67, 2, 1, "", "transpose"]], "abjad.persist": [[68, 4, 1, "", "as_ly"], [68, 4, 1, "", "as_midi"], [68, 4, 1, "", "as_pdf"], [68, 4, 1, "", "as_png"]], "abjad.pitch": [[69, 1, 1, "", "Accidental"], [69, 1, 1, "", "Interval"], [69, 1, 1, "", "IntervalClass"], [69, 1, 1, "", "NamedInterval"], [69, 1, 1, "", "NamedIntervalClass"], [69, 1, 1, "", "NamedInversionEquivalentIntervalClass"], [69, 1, 1, "", "NamedPitch"], [69, 1, 1, "", "NamedPitchClass"], [69, 1, 1, "", "NumberedInterval"], [69, 1, 1, "", "NumberedIntervalClass"], [69, 1, 1, "", "NumberedInversionEquivalentIntervalClass"], [69, 1, 1, "", "NumberedPitch"], [69, 1, 1, "", "NumberedPitchClass"], [69, 1, 1, "", "Octave"], [69, 1, 1, "", "Pitch"], [69, 1, 1, "", "PitchClass"], [69, 1, 1, "", "StaffPosition"]], "abjad.pitch.Accidental": [[69, 2, 1, "", "__add__"], [69, 2, 1, "", "__call__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__neg__"], [69, 2, 1, "", "__post_init__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__str__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "symbol"]], "abjad.pitch.Interval": [[69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 3, 1, "", "cents"], [69, 3, 1, "", "direction_number"], [69, 3, 1, "", "interval_class"], [69, 3, 1, "", "number"], [69, 3, 1, "", "octaves"], [69, 3, 1, "", "semitones"], [69, 2, 1, "", "transpose"]], "abjad.pitch.IntervalClass": [[69, 2, 1, "", "__abs__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 3, 1, "", "number"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NamedInterval": [[69, 2, 1, "", "__abs__"], [69, 2, 1, "", "__add__"], [69, 2, 1, "", "__copy__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__mul__"], [69, 2, 1, "", "__neg__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__rmul__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "cents"], [69, 3, 1, "", "direction_number"], [69, 2, 1, "", "from_pitch_carriers"], [69, 3, 1, "", "interval_class"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "octaves"], [69, 3, 1, "", "quality"], [69, 3, 1, "", "semitones"], [69, 3, 1, "", "staff_spaces"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NamedIntervalClass": [[69, 2, 1, "", "__abs__"], [69, 2, 1, "", "__add__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "direction_number"], [69, 2, 1, "", "from_pitch_carriers"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "quality"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NamedInversionEquivalentIntervalClass": [[69, 2, 1, "", "__abs__"], [69, 2, 1, "", "__add__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "direction_number"], [69, 2, 1, "", "from_pitch_carriers"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "quality"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NamedPitch": [[69, 2, 1, "", "__add__"], [69, 2, 1, "", "__copy__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "accidental"], [69, 3, 1, "", "arrow"], [69, 2, 1, "", "from_hertz"], [69, 2, 1, "", "get_name"], [69, 3, 1, "", "hertz"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "multiply"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "octave"], [69, 3, 1, "", "pitch_class"], [69, 2, 1, "", "respell"], [69, 2, 1, "", "simplify"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NamedPitchClass": [[69, 2, 1, "", "__add__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "accidental"], [69, 3, 1, "", "arrow"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "multiply"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "pitch_class_label"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NumberedInterval": [[69, 2, 1, "", "__abs__"], [69, 2, 1, "", "__add__"], [69, 2, 1, "", "__copy__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__neg__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "cents"], [69, 3, 1, "", "direction_number"], [69, 2, 1, "", "from_pitch_carriers"], [69, 3, 1, "", "interval_class"], [69, 3, 1, "", "number"], [69, 3, 1, "", "octaves"], [69, 3, 1, "", "semitones"], [69, 3, 1, "", "signed_string"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NumberedIntervalClass": [[69, 2, 1, "", "__abs__"], [69, 2, 1, "", "__add__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "direction_number"], [69, 2, 1, "", "from_pitch_carriers"], [69, 3, 1, "", "number"], [69, 3, 1, "", "signed_string"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NumberedInversionEquivalentIntervalClass": [[69, 2, 1, "", "__abs__"], [69, 2, 1, "", "__add__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__neg__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "direction_number"], [69, 2, 1, "", "from_pitch_carriers"], [69, 3, 1, "", "number"], [69, 3, 1, "", "signed_string"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NumberedPitch": [[69, 2, 1, "", "__add__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__neg__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "accidental"], [69, 3, 1, "", "arrow"], [69, 2, 1, "", "from_hertz"], [69, 2, 1, "", "get_name"], [69, 3, 1, "", "hertz"], [69, 2, 1, "", "interpolate"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "multiply"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "octave"], [69, 3, 1, "", "pitch_class"], [69, 2, 1, "", "transpose"]], "abjad.pitch.NumberedPitchClass": [[69, 2, 1, "", "__add__"], [69, 2, 1, "", "__copy__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__neg__"], [69, 2, 1, "", "__radd__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__sub__"], [69, 3, 1, "", "accidental"], [69, 3, 1, "", "arrow"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "multiply"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "pitch_class_label"], [69, 2, 1, "", "transpose"]], "abjad.pitch.Octave": [[69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__int__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__post_init__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "from_pitch"], [69, 2, 1, "", "from_ticks"], [69, 3, 1, "", "pitch_number"], [69, 3, 1, "", "ticks"]], "abjad.pitch.Pitch": [[69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 3, 1, "", "arrow"], [69, 2, 1, "", "from_hertz"], [69, 2, 1, "", "get_name"], [69, 3, 1, "", "hertz"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "multiply"], [69, 3, 1, "", "name"], [69, 3, 1, "", "number"], [69, 3, 1, "", "octave"], [69, 3, 1, "", "pitch_class"], [69, 2, 1, "", "transpose"]], "abjad.pitch.PitchClass": [[69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__float__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "accidental"], [69, 2, 1, "", "invert"], [69, 2, 1, "", "multiply"], [69, 2, 1, "", "pitch_class_label"], [69, 2, 1, "", "transpose"]], "abjad.pitch.StaffPosition": [[69, 2, 1, "", "__delattr__"], [69, 2, 1, "", "__eq__"], [69, 2, 1, "", "__ge__"], [69, 2, 1, "", "__gt__"], [69, 2, 1, "", "__hash__"], [69, 2, 1, "", "__le__"], [69, 2, 1, "", "__lt__"], [69, 2, 1, "", "__post_init__"], [69, 2, 1, "", "__repr__"], [69, 2, 1, "", "__setattr__"]], "abjad.ratio": [[70, 1, 1, "", "NonreducedRatio"], [70, 1, 1, "", "Ratio"]], "abjad.ratio.NonreducedRatio": [[70, 2, 1, "", "__class_getitem__"], [70, 2, 1, "", "__contains__"], [70, 2, 1, "", "__eq__"], [70, 2, 1, "", "__getitem__"], [70, 2, 1, "", "__hash__"], [70, 2, 1, "", "__iter__"], [70, 2, 1, "", "__len__"], [70, 2, 1, "", "__post_init__"], [70, 2, 1, "", "__rdiv__"], [70, 2, 1, "", "__repr__"], [70, 2, 1, "", "__reversed__"], [70, 2, 1, "", "__rtruediv__"], [70, 2, 1, "", "count"], [70, 2, 1, "", "index"], [70, 3, 1, "", "multipliers"]], "abjad.ratio.Ratio": [[70, 2, 1, "", "__class_getitem__"], [70, 2, 1, "", "__contains__"], [70, 2, 1, "", "__eq__"], [70, 2, 1, "", "__getitem__"], [70, 2, 1, "", "__hash__"], [70, 2, 1, "", "__iter__"], [70, 2, 1, "", "__len__"], [70, 2, 1, "", "__post_init__"], [70, 2, 1, "", "__rdiv__"], [70, 2, 1, "", "__repr__"], [70, 2, 1, "", "__reversed__"], [70, 2, 1, "", "__rtruediv__"], [70, 2, 1, "", "__str__"], [70, 2, 1, "", "count"], [70, 2, 1, "", "index"], [70, 3, 1, "", "multipliers"], [70, 2, 1, "", "partition_integer"], [70, 3, 1, "", "reciprocal"]], "abjad.rhythmtrees": [[71, 1, 1, "", "RhythmTreeContainer"], [71, 1, 1, "", "RhythmTreeLeaf"], [71, 1, 1, "", "RhythmTreeMixin"], [71, 1, 1, "", "RhythmTreeParser"], [71, 4, 1, "", "parse_rtm_syntax"]], "abjad.rhythmtrees.RhythmTreeContainer": [[71, 2, 1, "", "__add__"], [71, 2, 1, "", "__call__"], [71, 2, 1, "", "__contains__"], [71, 2, 1, "", "__delitem__"], [71, 2, 1, "", "__getitem__"], [71, 2, 1, "", "__graph__"], [71, 2, 1, "", "__iter__"], [71, 2, 1, "", "__len__"], [71, 2, 1, "", "__radd__"], [71, 2, 1, "", "__repr__"], [71, 2, 1, "", "__setitem__"], [71, 2, 1, "", "append"], [71, 3, 1, "", "children"], [71, 3, 1, "", "depth"], [71, 2, 1, "", "depth_first"], [71, 3, 1, "", "duration"], [71, 2, 1, "", "extend"], [71, 3, 1, "", "graph_order"], [71, 2, 1, "", "index"], [71, 2, 1, "", "insert"], [71, 3, 1, "", "name"], [71, 3, 1, "", "parent"], [71, 3, 1, "", "parentage"], [71, 3, 1, "", "parentage_ratios"], [71, 2, 1, "", "pop"], [71, 3, 1, "", "preprolated_duration"], [71, 3, 1, "", "pretty_rtm_format"], [71, 3, 1, "", "prolation"], [71, 3, 1, "", "prolations"], [71, 2, 1, "", "recurse"], [71, 2, 1, "", "remove"], [71, 3, 1, "", "root"], [71, 3, 1, "", "rtm_format"], [71, 3, 1, "", "start_offset"], [71, 3, 1, "", "stop_offset"]], "abjad.rhythmtrees.RhythmTreeLeaf": [[71, 2, 1, "", "__call__"], [71, 2, 1, "", "__graph__"], [71, 2, 1, "", "__repr__"], [71, 3, 1, "", "depth"], [71, 3, 1, "", "duration"], [71, 3, 1, "", "graph_order"], [71, 3, 1, "", "is_pitched"], [71, 3, 1, "", "name"], [71, 3, 1, "", "parent"], [71, 3, 1, "", "parentage"], [71, 3, 1, "", "parentage_ratios"], [71, 3, 1, "", "preprolated_duration"], [71, 3, 1, "", "pretty_rtm_format"], [71, 3, 1, "", "prolation"], [71, 3, 1, "", "prolations"], [71, 3, 1, "", "root"], [71, 3, 1, "", "rtm_format"], [71, 3, 1, "", "start_offset"], [71, 3, 1, "", "stop_offset"]], "abjad.rhythmtrees.RhythmTreeMixin": [[71, 3, 1, "", "duration"], [71, 3, 1, "", "parentage_ratios"], [71, 3, 1, "", "preprolated_duration"], [71, 3, 1, "", "pretty_rtm_format"], [71, 3, 1, "", "prolation"], [71, 3, 1, "", "prolations"], [71, 3, 1, "", "start_offset"], [71, 3, 1, "", "stop_offset"]], "abjad.rhythmtrees.RhythmTreeParser": [[71, 2, 1, "", "__call__"], [71, 3, 1, "", "debug"], [71, 3, 1, "", "lexer"], [71, 3, 1, "", "lexer_rules_object"], [71, 3, 1, "", "logger"], [71, 3, 1, "", "logger_path"], [71, 3, 1, "", "output_path"], [71, 2, 1, "", "p_container__LPAREN__DURATION__node_list_closed__RPAREN"], [71, 2, 1, "", "p_error"], [71, 2, 1, "", "p_leaf__INTEGER"], [71, 2, 1, "", "p_node__container"], [71, 2, 1, "", "p_node__leaf"], [71, 2, 1, "", "p_node_list__node_list__node_list_item"], [71, 2, 1, "", "p_node_list__node_list_item"], [71, 2, 1, "", "p_node_list_closed__LPAREN__node_list__RPAREN"], [71, 2, 1, "", "p_node_list_item__node"], [71, 2, 1, "", "p_toplevel__EMPTY"], [71, 2, 1, "", "p_toplevel__toplevel__node"], [71, 3, 1, "", "parser"], [71, 3, 1, "", "parser_rules_object"], [71, 3, 1, "", "pickle_path"], [71, 2, 1, "", "t_DURATION"], [71, 2, 1, "", "t_error"], [71, 2, 1, "", "t_newline"], [71, 2, 1, "", "tokenize"]], "abjad.score": [[72, 1, 1, "", "AfterGraceContainer"], [72, 1, 1, "", "BeforeGraceContainer"], [72, 1, 1, "", "Chord"], [72, 1, 1, "", "Cluster"], [72, 1, 1, "", "Component"], [72, 1, 1, "", "Container"], [72, 1, 1, "", "Context"], [72, 1, 1, "", "DrumNoteHead"], [72, 1, 1, "", "Leaf"], [72, 1, 1, "", "MultimeasureRest"], [72, 1, 1, "", "Note"], [72, 1, 1, "", "NoteHead"], [72, 1, 1, "", "NoteHeadList"], [72, 1, 1, "", "Rest"], [72, 1, 1, "", "Score"], [72, 1, 1, "", "Skip"], [72, 1, 1, "", "Staff"], [72, 1, 1, "", "StaffGroup"], [72, 1, 1, "", "TremoloContainer"], [72, 1, 1, "", "Tuplet"], [72, 1, 1, "", "Voice"]], "abjad.score.AfterGraceContainer": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.BeforeGraceContainer": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "command"], [72, 3, 1, "", "components"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.Chord": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__repr__"], [72, 3, 1, "", "multiplier"], [72, 3, 1, "", "note_heads"], [72, 3, 1, "", "tag"], [72, 3, 1, "", "written_duration"], [72, 3, 1, "", "written_pitches"]], "abjad.score.Cluster": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.Component": [[72, 2, 1, "", "__copy__"], [72, 3, 1, "", "tag"]], "abjad.score.Container": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.Context": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 3, 1, "", "consists_commands"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "lilypond_context"], [72, 3, 1, "", "lilypond_type"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "remove_commands"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.DrumNoteHead": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__eq__"], [72, 2, 1, "", "__ge__"], [72, 2, 1, "", "__gt__"], [72, 2, 1, "", "__hash__"], [72, 2, 1, "", "__le__"], [72, 2, 1, "", "__lt__"], [72, 2, 1, "", "__repr__"], [72, 3, 1, "", "alternative"], [72, 3, 1, "", "is_cautionary"], [72, 3, 1, "", "is_forced"], [72, 3, 1, "", "is_parenthesized"], [72, 3, 1, "", "named_pitch"], [72, 3, 1, "", "written_pitch"]], "abjad.score.Leaf": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__repr__"], [72, 3, 1, "", "multiplier"], [72, 3, 1, "", "tag"], [72, 3, 1, "", "written_duration"]], "abjad.score.MultimeasureRest": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__repr__"], [72, 3, 1, "", "multiplier"], [72, 3, 1, "", "tag"], [72, 3, 1, "", "written_duration"]], "abjad.score.Note": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "from_pitch_and_duration"], [72, 3, 1, "", "multiplier"], [72, 3, 1, "", "note_head"], [72, 3, 1, "", "tag"], [72, 3, 1, "", "written_duration"], [72, 3, 1, "", "written_pitch"]], "abjad.score.NoteHead": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__eq__"], [72, 2, 1, "", "__ge__"], [72, 2, 1, "", "__gt__"], [72, 2, 1, "", "__hash__"], [72, 2, 1, "", "__le__"], [72, 2, 1, "", "__lt__"], [72, 2, 1, "", "__repr__"], [72, 3, 1, "", "alternative"], [72, 3, 1, "", "is_cautionary"], [72, 3, 1, "", "is_forced"], [72, 3, 1, "", "is_parenthesized"], [72, 3, 1, "", "named_pitch"], [72, 3, 1, "", "written_pitch"]], "abjad.score.NoteHeadList": [[72, 2, 1, "", "__add__"], [72, 2, 1, "", "__class_getitem__"], [72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__eq__"], [72, 2, 1, "", "__ge__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__gt__"], [72, 2, 1, "", "__iadd__"], [72, 2, 1, "", "__imul__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__le__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__lt__"], [72, 2, 1, "", "__mul__"], [72, 2, 1, "", "__ne__"], [72, 2, 1, "", "__new__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__reversed__"], [72, 2, 1, "", "__rmul__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 2, 1, "", "clear"], [72, 2, 1, "", "copy"], [72, 2, 1, "", "count"], [72, 2, 1, "", "extend"], [72, 2, 1, "", "get"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 2, 1, "", "reverse"], [72, 2, 1, "", "sort"]], "abjad.score.Rest": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__repr__"], [72, 3, 1, "", "multiplier"], [72, 3, 1, "", "tag"], [72, 3, 1, "", "written_duration"]], "abjad.score.Score": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 3, 1, "", "consists_commands"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "lilypond_context"], [72, 3, 1, "", "lilypond_type"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "remove_commands"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.Skip": [[72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__repr__"], [72, 3, 1, "", "multiplier"], [72, 3, 1, "", "tag"], [72, 3, 1, "", "written_duration"]], "abjad.score.Staff": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 3, 1, "", "consists_commands"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "lilypond_context"], [72, 3, 1, "", "lilypond_type"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "remove_commands"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.StaffGroup": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 3, 1, "", "consists_commands"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "lilypond_context"], [72, 3, 1, "", "lilypond_type"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "remove_commands"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.TremoloContainer": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 3, 1, "", "count"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 3, 1, "", "implied_prolation"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.score.Tuplet": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 2, 1, "", "augmentation"], [72, 3, 1, "", "colon_string"], [72, 3, 1, "", "components"], [72, 3, 1, "", "denominator"], [72, 2, 1, "", "diminution"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "force_fraction"], [72, 2, 1, "", "from_duration"], [72, 3, 1, "", "hide"], [72, 3, 1, "", "identifier"], [72, 3, 1, "", "implied_prolation"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "multiplied_duration"], [72, 3, 1, "", "multiplier"], [72, 3, 1, "", "name"], [72, 2, 1, "", "normalize_multiplier"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 2, 1, "", "rest_filled"], [72, 2, 1, "", "rewrite_dots"], [72, 2, 1, "", "set_minimum_denominator"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"], [72, 2, 1, "", "toggle_prolation"], [72, 2, 1, "", "trivial"], [72, 2, 1, "", "trivializable"], [72, 2, 1, "", "trivialize"]], "abjad.score.Voice": [[72, 2, 1, "", "__contains__"], [72, 2, 1, "", "__copy__"], [72, 2, 1, "", "__delitem__"], [72, 2, 1, "", "__getitem__"], [72, 2, 1, "", "__iter__"], [72, 2, 1, "", "__len__"], [72, 2, 1, "", "__repr__"], [72, 2, 1, "", "__setitem__"], [72, 2, 1, "", "append"], [72, 3, 1, "", "components"], [72, 3, 1, "", "consists_commands"], [72, 2, 1, "", "extend"], [72, 3, 1, "", "identifier"], [72, 2, 1, "", "index"], [72, 2, 1, "", "insert"], [72, 3, 1, "", "lilypond_context"], [72, 3, 1, "", "lilypond_type"], [72, 3, 1, "", "name"], [72, 2, 1, "", "pop"], [72, 2, 1, "", "remove"], [72, 3, 1, "", "remove_commands"], [72, 3, 1, "", "simultaneous"], [72, 3, 1, "", "tag"]], "abjad.select": [[73, 1, 1, "", "LogicalTie"], [73, 4, 1, "", "chord"], [73, 4, 1, "", "chords"], [73, 4, 1, "", "components"], [73, 4, 1, "", "exclude"], [73, 4, 1, "", "filter"], [73, 4, 1, "", "flatten"], [73, 4, 1, "", "get"], [73, 4, 1, "", "group"], [73, 4, 1, "", "group_by"], [73, 4, 1, "", "group_by_contiguity"], [73, 4, 1, "", "group_by_duration"], [73, 4, 1, "", "group_by_length"], [73, 4, 1, "", "group_by_measure"], [73, 4, 1, "", "group_by_pitch"], [73, 4, 1, "", "leaf"], [73, 4, 1, "", "leaves"], [73, 4, 1, "", "logical_tie"], [73, 4, 1, "", "logical_ties"], [73, 4, 1, "", "nontrivial"], [73, 4, 1, "", "note"], [73, 4, 1, "", "notes"], [73, 4, 1, "", "partition_by_counts"], [73, 4, 1, "", "partition_by_durations"], [73, 4, 1, "", "partition_by_ratio"], [73, 4, 1, "", "rest"], [73, 4, 1, "", "rests"], [73, 4, 1, "", "run"], [73, 4, 1, "", "runs"], [73, 4, 1, "", "top"], [73, 4, 1, "", "tuplet"], [73, 4, 1, "", "tuplets"], [73, 4, 1, "", "with_next_leaf"], [73, 4, 1, "", "with_previous_leaf"]], "abjad.select.LogicalTie": [[73, 2, 1, "", "__class_getitem__"], [73, 2, 1, "", "__contains__"], [73, 2, 1, "", "__eq__"], [73, 2, 1, "", "__getitem__"], [73, 2, 1, "", "__hash__"], [73, 2, 1, "", "__iter__"], [73, 2, 1, "", "__len__"], [73, 2, 1, "", "__repr__"], [73, 2, 1, "", "__reversed__"], [73, 2, 1, "", "count"], [73, 3, 1, "", "head"], [73, 2, 1, "", "index"], [73, 3, 1, "", "is_pitched"], [73, 3, 1, "", "is_trivial"], [73, 3, 1, "", "items"], [73, 3, 1, "", "tail"], [73, 3, 1, "", "written_duration"]], "abjad.sequence": [[74, 4, 1, "", "filter"], [74, 4, 1, "", "flatten"], [74, 4, 1, "", "group_by"], [74, 4, 1, "", "has_duplicates"], [74, 4, 1, "", "is_decreasing"], [74, 4, 1, "", "is_increasing"], [74, 4, 1, "", "is_permutation"], [74, 4, 1, "", "is_repetition_free"], [74, 4, 1, "", "join"], [74, 4, 1, "", "map"], [74, 4, 1, "", "nwise"], [74, 4, 1, "", "partition_by_counts"], [74, 4, 1, "", "partition_by_ratio_of_lengths"], [74, 4, 1, "", "partition_by_ratio_of_weights"], [74, 4, 1, "", "partition_by_weights"], [74, 4, 1, "", "permute"], [74, 4, 1, "", "remove"], [74, 4, 1, "", "remove_repeats"], [74, 4, 1, "", "repeat"], [74, 4, 1, "", "repeat_to_length"], [74, 4, 1, "", "repeat_to_weight"], [74, 4, 1, "", "replace"], [74, 4, 1, "", "replace_at"], [74, 4, 1, "", "retain"], [74, 4, 1, "", "retain_pattern"], [74, 4, 1, "", "reverse"], [74, 4, 1, "", "rotate"], [74, 4, 1, "", "sort"], [74, 4, 1, "", "split"], [74, 4, 1, "", "sum"], [74, 4, 1, "", "sum_by_sign"], [74, 4, 1, "", "truncate"], [74, 4, 1, "", "weight"], [74, 4, 1, "", "zip"]], "abjad.setclass": [[75, 1, 1, "", "SetClass"]], "abjad.setclass.SetClass": [[75, 2, 1, "", "__eq__"], [75, 2, 1, "", "__hash__"], [75, 2, 1, "", "__post_init__"], [75, 2, 1, "", "__repr__"], [75, 2, 1, "", "__str__"], [75, 2, 1, "", "from_pitch_class_set"], [75, 3, 1, "", "is_inversion_equivalent"], [75, 2, 1, "", "list_set_classes"], [75, 3, 1, "", "prime_form"]], "abjad.spanners": [[76, 4, 1, "", "beam"], [76, 4, 1, "", "glissando"], [76, 4, 1, "", "hairpin"], [76, 4, 1, "", "horizontal_bracket"], [76, 4, 1, "", "ottava"], [76, 4, 1, "", "phrasing_slur"], [76, 4, 1, "", "piano_pedal"], [76, 4, 1, "", "slur"], [76, 4, 1, "", "text_spanner"], [76, 4, 1, "", "tie"], [76, 4, 1, "", "trill_spanner"]], "abjad.string": [[77, 4, 1, "", "capitalize_start"], [77, 4, 1, "", "delimit_words"], [77, 4, 1, "", "from_roman"], [77, 4, 1, "", "is_lilypond_identifier"], [77, 4, 1, "", "is_roman"], [77, 4, 1, "", "is_shout_case"], [77, 4, 1, "", "normalize"], [77, 4, 1, "", "pluralize"], [77, 4, 1, "", "sort_roman"], [77, 4, 1, "", "strip_roman"], [77, 4, 1, "", "to_shout_case"], [77, 4, 1, "", "to_tridirectional_lilypond_symbol"], [77, 4, 1, "", "to_tridirectional_ordinal_constant"], [77, 4, 1, "", "to_upper_camel_case"]], "abjad.tag": [[78, 1, 1, "", "Tag"], [78, 4, 1, "", "activate"], [78, 4, 1, "", "deactivate"], [78, 4, 1, "", "double_tag"], [78, 4, 1, "", "left_shift_tags"], [78, 4, 1, "", "remove_tags"]], "abjad.tag.Tag": [[78, 2, 1, "", "__delattr__"], [78, 2, 1, "", "__eq__"], [78, 2, 1, "", "__ge__"], [78, 2, 1, "", "__gt__"], [78, 2, 1, "", "__hash__"], [78, 2, 1, "", "__le__"], [78, 2, 1, "", "__lt__"], [78, 2, 1, "", "__post_init__"], [78, 2, 1, "", "__repr__"], [78, 2, 1, "", "__setattr__"], [78, 2, 1, "", "append"], [78, 2, 1, "", "editions"], [78, 2, 1, "", "invert_edition_tags"], [78, 2, 1, "", "not_editions"], [78, 2, 1, "", "only_edition"], [78, 2, 1, "", "words"]], "abjad.timespan": [[79, 1, 1, "", "OffsetCounter"], [79, 1, 1, "", "Timespan"], [79, 1, 1, "", "TimespanList"]], "abjad.timespan.OffsetCounter": [[79, 2, 1, "", "__eq__"], [79, 2, 1, "", "__post_init__"], [79, 2, 1, "", "__repr__"]], "abjad.timespan.Timespan": [[79, 2, 1, "", "__and__"], [79, 2, 1, "", "__contains__"], [79, 2, 1, "", "__eq__"], [79, 2, 1, "", "__ge__"], [79, 2, 1, "", "__gt__"], [79, 2, 1, "", "__hash__"], [79, 2, 1, "", "__le__"], [79, 2, 1, "", "__len__"], [79, 2, 1, "", "__lt__"], [79, 2, 1, "", "__or__"], [79, 2, 1, "", "__post_init__"], [79, 2, 1, "", "__repr__"], [79, 2, 1, "", "__sub__"], [79, 2, 1, "", "__xor__"], [79, 3, 1, "", "axis"], [79, 2, 1, "", "divide_by_ratio"], [79, 3, 1, "", "duration"], [79, 2, 1, "", "get_overlap_with_timespan"], [79, 3, 1, "", "offsets"], [79, 2, 1, "", "reflect"], [79, 2, 1, "", "round_offsets"], [79, 2, 1, "", "scale"], [79, 2, 1, "", "set_duration"], [79, 2, 1, "", "set_offsets"], [79, 2, 1, "", "split_at_offset"], [79, 2, 1, "", "split_at_offsets"], [79, 2, 1, "", "stretch"], [79, 2, 1, "", "translate"], [79, 2, 1, "", "translate_offsets"], [79, 3, 1, "", "wellformed"]], "abjad.timespan.TimespanList": [[79, 2, 1, "", "__add__"], [79, 2, 1, "", "__and__"], [79, 2, 1, "", "__class_getitem__"], [79, 2, 1, "", "__contains__"], [79, 2, 1, "", "__delitem__"], [79, 2, 1, "", "__eq__"], [79, 2, 1, "", "__ge__"], [79, 2, 1, "", "__getitem__"], [79, 2, 1, "", "__gt__"], [79, 2, 1, "", "__iadd__"], [79, 2, 1, "", "__imul__"], [79, 2, 1, "", "__invert__"], [79, 2, 1, "", "__iter__"], [79, 2, 1, "", "__le__"], [79, 2, 1, "", "__len__"], [79, 2, 1, "", "__lt__"], [79, 2, 1, "", "__mul__"], [79, 2, 1, "", "__ne__"], [79, 2, 1, "", "__new__"], [79, 2, 1, "", "__repr__"], [79, 2, 1, "", "__reversed__"], [79, 2, 1, "", "__rmul__"], [79, 2, 1, "", "__setitem__"], [79, 2, 1, "", "__sub__"], [79, 3, 1, "", "all_are_contiguous"], [79, 3, 1, "", "all_are_nonoverlapping"], [79, 3, 1, "", "all_are_wellformed"], [79, 2, 1, "", "append"], [79, 3, 1, "", "axis"], [79, 2, 1, "", "clear"], [79, 2, 1, "", "clip_timespan_durations"], [79, 2, 1, "", "compute_logical_and"], [79, 2, 1, "", "compute_logical_or"], [79, 2, 1, "", "compute_logical_xor"], [79, 2, 1, "", "compute_overlap_factor"], [79, 2, 1, "", "compute_overlap_factor_mapping"], [79, 2, 1, "", "copy"], [79, 2, 1, "", "count"], [79, 2, 1, "", "count_offsets"], [79, 3, 1, "", "duration"], [79, 2, 1, "", "explode"], [79, 2, 1, "", "extend"], [79, 2, 1, "", "get_timespan_that_satisfies_time_relation"], [79, 2, 1, "", "get_timespans_that_satisfy_time_relation"], [79, 2, 1, "", "has_timespan_that_satisfies_time_relation"], [79, 2, 1, "", "index"], [79, 2, 1, "", "insert"], [79, 3, 1, "", "is_sorted"], [79, 2, 1, "", "partition"], [79, 2, 1, "", "pop"], [79, 2, 1, "", "reflect"], [79, 2, 1, "", "remove"], [79, 2, 1, "", "remove_degenerate_timespans"], [79, 2, 1, "", "repeat_to_stop_offset"], [79, 2, 1, "", "reverse"], [79, 2, 1, "", "rotate"], [79, 2, 1, "", "round_offsets"], [79, 2, 1, "", "scale"], [79, 2, 1, "", "sort"], [79, 2, 1, "", "split_at_offset"], [79, 2, 1, "", "split_at_offsets"], [79, 3, 1, "", "start_offset"], [79, 3, 1, "", "stop_offset"], [79, 2, 1, "", "stretch"], [79, 3, 1, "", "timespan"], [79, 2, 1, "", "translate"], [79, 2, 1, "", "translate_offsets"]], "abjad.tweaks": [[80, 1, 1, "", "Bundle"], [80, 1, 1, "", "Tweak"], [80, 4, 1, "", "bundle"], [80, 4, 1, "", "tweak"]], "abjad.tweaks.Bundle": [[80, 2, 1, "", "__delattr__"], [80, 2, 1, "", "__eq__"], [80, 2, 1, "", "__ge__"], [80, 2, 1, "", "__gt__"], [80, 2, 1, "", "__hash__"], [80, 2, 1, "", "__le__"], [80, 2, 1, "", "__lt__"], [80, 2, 1, "", "__post_init__"], [80, 2, 1, "", "__repr__"], [80, 2, 1, "", "__setattr__"], [80, 2, 1, "", "get_attribute"], [80, 2, 1, "", "remove"]], "abjad.tweaks.Tweak": [[80, 2, 1, "", "__delattr__"], [80, 2, 1, "", "__eq__"], [80, 2, 1, "", "__ge__"], [80, 2, 1, "", "__gt__"], [80, 2, 1, "", "__hash__"], [80, 2, 1, "", "__le__"], [80, 2, 1, "", "__lt__"], [80, 2, 1, "", "__post_init__"], [80, 2, 1, "", "__repr__"], [80, 2, 1, "", "__setattr__"], [80, 2, 1, "", "attribute"], [80, 2, 1, "", "post_event"], [80, 2, 1, "", "value"]], "abjad.verticalmoment": [[81, 1, 1, "", "VerticalMoment"], [81, 4, 1, "", "iterate_leaf_pairs"], [81, 4, 1, "", "iterate_pitch_pairs"], [81, 4, 1, "", "iterate_vertical_moments"]], "abjad.verticalmoment.VerticalMoment": [[81, 2, 1, "", "__eq__"], [81, 2, 1, "", "__hash__"], [81, 2, 1, "", "__len__"], [81, 2, 1, "", "__repr__"], [81, 3, 1, "", "attack_count"], [81, 3, 1, "", "components"], [81, 3, 1, "", "governors"], [81, 3, 1, "", "leaves"], [81, 3, 1, "", "notes"], [81, 3, 1, "", "notes_and_chords"], [81, 3, 1, "", "offset"], [81, 3, 1, "", "overlap_components"], [81, 3, 1, "", "overlap_leaves"], [81, 3, 1, "", "overlap_notes"], [81, 3, 1, "", "start_components"], [81, 3, 1, "", "start_leaves"], [81, 3, 1, "", "start_notes"]], "abjad.wf": [[82, 4, 1, "", "check_beamed_long_notes"], [82, 4, 1, "", "check_duplicate_ids"], [82, 4, 1, "", "check_empty_containers"], [82, 4, 1, "", "check_missing_parents"], [82, 4, 1, "", "check_notes_on_wrong_clef"], [82, 4, 1, "", "check_out_of_range_pitches"], [82, 4, 1, "", "check_overlapping_text_spanners"], [82, 4, 1, "", "check_unmatched_stop_text_spans"], [82, 4, 1, "", "check_unterminated_hairpins"], [82, 4, 1, "", "check_unterminated_text_spanners"], [82, 4, 1, "", "tabulate_wellformedness"], [82, 4, 1, "", "wellformed"]], "abjadext": [[87, 0, 0, "-", "nauert"], [100, 0, 0, "-", "rmakers"]], "abjadext.nauert": [[84, 0, 0, "-", "attackpointoptimizers"], [85, 0, 0, "-", "gracehandlers"], [86, 0, 0, "-", "heuristics"], [88, 0, 0, "-", "jobhandlers"], [89, 0, 0, "-", "qeventproxy"], [90, 0, 0, "-", "qevents"], [91, 0, 0, "-", "qeventsequence"], [92, 0, 0, "-", "qgrid"], [93, 0, 0, "-", "qschemaitems"], [94, 0, 0, "-", "qschemas"], [95, 0, 0, "-", "qtargetitems"], [96, 0, 0, "-", "qtargets"], [97, 0, 0, "-", "quantizationjob"], [98, 0, 0, "-", "quantizer"], [99, 0, 0, "-", "searchtrees"]], "abjadext.nauert.attackpointoptimizers": [[84, 1, 1, "", "AttackPointOptimizer"], [84, 1, 1, "", "MeasurewiseAttackPointOptimizer"], [84, 1, 1, "", "NaiveAttackPointOptimizer"], [84, 1, 1, "", "NullAttackPointOptimizer"]], "abjadext.nauert.attackpointoptimizers.AttackPointOptimizer": [[84, 2, 1, "", "__call__"]], "abjadext.nauert.attackpointoptimizers.MeasurewiseAttackPointOptimizer": [[84, 2, 1, "", "__call__"]], "abjadext.nauert.attackpointoptimizers.NaiveAttackPointOptimizer": [[84, 2, 1, "", "__call__"]], "abjadext.nauert.attackpointoptimizers.NullAttackPointOptimizer": [[84, 2, 1, "", "__call__"]], "abjadext.nauert.gracehandlers": [[85, 1, 1, "", "CollapsingGraceHandler"], [85, 1, 1, "", "ConcatenatingGraceHandler"], [85, 1, 1, "", "DiscardingGraceHandler"], [85, 1, 1, "", "GraceHandler"]], "abjadext.nauert.gracehandlers.CollapsingGraceHandler": [[85, 2, 1, "", "__call__"]], "abjadext.nauert.gracehandlers.ConcatenatingGraceHandler": [[85, 2, 1, "", "__call__"], [85, 3, 1, "", "discard_grace_rest"], [85, 3, 1, "", "grace_duration"], [85, 2, 1, "", "handle_orphaned_q_event_proxies"], [85, 3, 1, "", "replace_rest_with_final_grace_note"]], "abjadext.nauert.gracehandlers.DiscardingGraceHandler": [[85, 2, 1, "", "__call__"]], "abjadext.nauert.gracehandlers.GraceHandler": [[85, 2, 1, "", "__call__"]], "abjadext.nauert.heuristics": [[86, 1, 1, "", "DistanceHeuristic"], [86, 1, 1, "", "Heuristic"]], "abjadext.nauert.heuristics.DistanceHeuristic": [[86, 2, 1, "", "__call__"]], "abjadext.nauert.heuristics.Heuristic": [[86, 2, 1, "", "__call__"]], "abjadext.nauert.jobhandlers": [[88, 1, 1, "", "JobHandler"], [88, 1, 1, "", "ParallelJobHandler"], [88, 1, 1, "", "ParallelJobHandlerWorker"], [88, 1, 1, "", "SerialJobHandler"]], "abjadext.nauert.jobhandlers.JobHandler": [[88, 2, 1, "", "__call__"]], "abjadext.nauert.jobhandlers.ParallelJobHandler": [[88, 2, 1, "", "__call__"]], "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker": [[88, 2, 1, "", "__repr__"], [88, 3, 1, "", "authkey"], [88, 2, 1, "", "close"], [88, 3, 1, "", "daemon"], [88, 3, 1, "", "exitcode"], [88, 3, 1, "", "ident"], [88, 2, 1, "", "is_alive"], [88, 2, 1, "", "join"], [88, 2, 1, "", "kill"], [88, 3, 1, "", "name"], [88, 3, 1, "", "pid"], [88, 2, 1, "", "run"], [88, 3, 1, "", "sentinel"], [88, 2, 1, "", "start"], [88, 2, 1, "", "terminate"]], "abjadext.nauert.jobhandlers.SerialJobHandler": [[88, 2, 1, "", "__call__"]], "abjadext.nauert.qeventproxy": [[89, 1, 1, "", "QEventProxy"]], "abjadext.nauert.qeventproxy.QEventProxy": [[89, 2, 1, "", "__eq__"], [89, 2, 1, "", "__hash__"], [89, 2, 1, "", "__repr__"], [89, 3, 1, "", "index"], [89, 3, 1, "", "offset"], [89, 3, 1, "", "q_event"]], "abjadext.nauert.qevents": [[90, 1, 1, "", "PitchedQEvent"], [90, 1, 1, "", "QEvent"], [90, 1, 1, "", "SilentQEvent"], [90, 1, 1, "", "TerminalQEvent"]], "abjadext.nauert.qevents.PitchedQEvent": [[90, 2, 1, "", "__eq__"], [90, 2, 1, "", "__hash__"], [90, 2, 1, "", "__lt__"], [90, 2, 1, "", "__repr__"], [90, 3, 1, "", "attachments"], [90, 3, 1, "", "index"], [90, 3, 1, "", "offset"], [90, 3, 1, "", "pitches"]], "abjadext.nauert.qevents.QEvent": [[90, 2, 1, "", "__lt__"], [90, 2, 1, "", "__repr__"], [90, 3, 1, "", "attachments"], [90, 3, 1, "", "index"], [90, 3, 1, "", "offset"]], "abjadext.nauert.qevents.SilentQEvent": [[90, 2, 1, "", "__eq__"], [90, 2, 1, "", "__hash__"], [90, 2, 1, "", "__lt__"], [90, 2, 1, "", "__repr__"], [90, 3, 1, "", "attachments"], [90, 3, 1, "", "index"], [90, 3, 1, "", "offset"]], "abjadext.nauert.qevents.TerminalQEvent": [[90, 2, 1, "", "__eq__"], [90, 2, 1, "", "__hash__"], [90, 2, 1, "", "__lt__"], [90, 2, 1, "", "__repr__"], [90, 3, 1, "", "attachments"], [90, 3, 1, "", "index"], [90, 3, 1, "", "offset"]], "abjadext.nauert.qeventsequence": [[91, 1, 1, "", "QEventSequence"]], "abjadext.nauert.qeventsequence.QEventSequence": [[91, 2, 1, "", "__contains__"], [91, 2, 1, "", "__eq__"], [91, 2, 1, "", "__getitem__"], [91, 2, 1, "", "__hash__"], [91, 2, 1, "", "__iter__"], [91, 2, 1, "", "__len__"], [91, 3, 1, "", "duration_in_ms"], [91, 2, 1, "", "from_millisecond_durations"], [91, 2, 1, "", "from_millisecond_offsets"], [91, 2, 1, "", "from_millisecond_pitch_attachment_tuples"], [91, 2, 1, "", "from_millisecond_pitch_pairs"], [91, 2, 1, "", "from_tempo_scaled_durations"], [91, 2, 1, "", "from_tempo_scaled_leaves"], [91, 3, 1, "", "sequence"]], "abjadext.nauert.qgrid": [[92, 1, 1, "", "QGrid"], [92, 1, 1, "", "QGridContainer"], [92, 1, 1, "", "QGridLeaf"]], "abjadext.nauert.qgrid.QGrid": [[92, 2, 1, "", "__call__"], [92, 2, 1, "", "__copy__"], [92, 2, 1, "", "__eq__"], [92, 2, 1, "", "__hash__"], [92, 2, 1, "", "__repr__"], [92, 3, 1, "", "distance"], [92, 2, 1, "", "fit_q_events"], [92, 3, 1, "", "leaves"], [92, 3, 1, "", "next_downbeat"], [92, 3, 1, "", "offsets"], [92, 3, 1, "", "pretty_rtm_format"], [92, 2, 1, "", "regroup_leaves_with_unencessary_divisions"], [92, 3, 1, "", "root_node"], [92, 3, 1, "", "rtm_format"], [92, 2, 1, "", "sort_q_events_by_index"], [92, 2, 1, "", "subdivide_leaf"], [92, 2, 1, "", "subdivide_leaves"]], "abjadext.nauert.qgrid.QGridContainer": [[92, 2, 1, "", "__add__"], [92, 2, 1, "", "__call__"], [92, 2, 1, "", "__contains__"], [92, 2, 1, "", "__delitem__"], [92, 2, 1, "", "__getitem__"], [92, 2, 1, "", "__graph__"], [92, 2, 1, "", "__iter__"], [92, 2, 1, "", "__len__"], [92, 2, 1, "", "__radd__"], [92, 2, 1, "", "__repr__"], [92, 2, 1, "", "__setitem__"], [92, 2, 1, "", "append"], [92, 3, 1, "", "children"], [92, 3, 1, "", "depth"], [92, 2, 1, "", "depth_first"], [92, 3, 1, "", "duration"], [92, 2, 1, "", "extend"], [92, 3, 1, "", "graph_order"], [92, 2, 1, "", "index"], [92, 2, 1, "", "insert"], [92, 3, 1, "", "leaves"], [92, 3, 1, "", "name"], [92, 3, 1, "", "parent"], [92, 3, 1, "", "parentage"], [92, 3, 1, "", "parentage_ratios"], [92, 2, 1, "", "pop"], [92, 3, 1, "", "preprolated_duration"], [92, 3, 1, "", "pretty_rtm_format"], [92, 3, 1, "", "prolation"], [92, 3, 1, "", "prolations"], [92, 2, 1, "", "recurse"], [92, 2, 1, "", "remove"], [92, 3, 1, "", "root"], [92, 3, 1, "", "rtm_format"], [92, 3, 1, "", "start_offset"], [92, 3, 1, "", "stop_offset"]], "abjadext.nauert.qgrid.QGridLeaf": [[92, 2, 1, "", "__call__"], [92, 2, 1, "", "__graph__"], [92, 2, 1, "", "__repr__"], [92, 3, 1, "", "depth"], [92, 3, 1, "", "duration"], [92, 3, 1, "", "graph_order"], [92, 3, 1, "", "is_divisible"], [92, 3, 1, "", "name"], [92, 3, 1, "", "parent"], [92, 3, 1, "", "parentage"], [92, 3, 1, "", "parentage_ratios"], [92, 3, 1, "", "preceding_q_event_proxies"], [92, 3, 1, "", "preprolated_duration"], [92, 3, 1, "", "pretty_rtm_format"], [92, 3, 1, "", "prolation"], [92, 3, 1, "", "prolations"], [92, 3, 1, "", "q_event_proxies"], [92, 3, 1, "", "root"], [92, 3, 1, "", "rtm_format"], [92, 3, 1, "", "start_offset"], [92, 3, 1, "", "stop_offset"], [92, 3, 1, "", "succeeding_q_event_proxies"]], "abjadext.nauert.qschemaitems": [[93, 1, 1, "", "BeatwiseQSchemaItem"], [93, 1, 1, "", "MeasurewiseQSchemaItem"], [93, 1, 1, "", "QSchemaItem"]], "abjadext.nauert.qschemaitems.BeatwiseQSchemaItem": [[93, 2, 1, "", "__repr__"], [93, 3, 1, "", "beatspan"], [93, 3, 1, "", "search_tree"], [93, 3, 1, "", "tempo"]], "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem": [[93, 2, 1, "", "__repr__"], [93, 3, 1, "", "beatspan"], [93, 3, 1, "", "search_tree"], [93, 3, 1, "", "tempo"], [93, 3, 1, "", "time_signature"], [93, 3, 1, "", "use_full_measure"]], "abjadext.nauert.qschemaitems.QSchemaItem": [[93, 3, 1, "", "search_tree"], [93, 3, 1, "", "tempo"]], "abjadext.nauert.qschemas": [[94, 1, 1, "", "BeatwiseQSchema"], [94, 1, 1, "", "MeasurewiseQSchema"], [94, 1, 1, "", "QSchema"]], "abjadext.nauert.qschemas.BeatwiseQSchema": [[94, 2, 1, "", "__call__"], [94, 2, 1, "", "__getitem__"], [94, 2, 1, "", "__repr__"], [94, 3, 1, "", "beatspan"], [94, 3, 1, "", "item_class"], [94, 3, 1, "", "items"], [94, 3, 1, "", "search_tree"], [94, 3, 1, "", "target_class"], [94, 3, 1, "", "target_item_class"], [94, 3, 1, "", "tempo"]], "abjadext.nauert.qschemas.MeasurewiseQSchema": [[94, 2, 1, "", "__call__"], [94, 2, 1, "", "__getitem__"], [94, 2, 1, "", "__repr__"], [94, 3, 1, "", "item_class"], [94, 3, 1, "", "items"], [94, 3, 1, "", "search_tree"], [94, 3, 1, "", "target_class"], [94, 3, 1, "", "target_item_class"], [94, 3, 1, "", "tempo"], [94, 3, 1, "", "time_signature"], [94, 3, 1, "", "use_full_measure"]], "abjadext.nauert.qschemas.QSchema": [[94, 2, 1, "", "__call__"], [94, 2, 1, "", "__getitem__"], [94, 3, 1, "", "item_class"], [94, 3, 1, "", "items"], [94, 3, 1, "", "search_tree"], [94, 3, 1, "", "target_class"], [94, 3, 1, "", "target_item_class"], [94, 3, 1, "", "tempo"]], "abjadext.nauert.qtargetitems": [[95, 1, 1, "", "QTargetBeat"], [95, 1, 1, "", "QTargetItem"], [95, 1, 1, "", "QTargetMeasure"]], "abjadext.nauert.qtargetitems.QTargetBeat": [[95, 2, 1, "", "__call__"], [95, 2, 1, "", "__repr__"], [95, 3, 1, "", "beatspan"], [95, 3, 1, "", "duration_in_ms"], [95, 3, 1, "", "offset_in_ms"], [95, 3, 1, "", "q_events"], [95, 3, 1, "", "q_grid"], [95, 3, 1, "", "q_grids"], [95, 3, 1, "", "search_tree"], [95, 3, 1, "", "tempo"]], "abjadext.nauert.qtargetitems.QTargetItem": [[95, 3, 1, "", "duration_in_ms"], [95, 3, 1, "", "offset_in_ms"]], "abjadext.nauert.qtargetitems.QTargetMeasure": [[95, 2, 1, "", "__repr__"], [95, 3, 1, "", "beats"], [95, 3, 1, "", "duration_in_ms"], [95, 3, 1, "", "offset_in_ms"], [95, 3, 1, "", "search_tree"], [95, 3, 1, "", "tempo"], [95, 3, 1, "", "time_signature"], [95, 3, 1, "", "use_full_measure"]], "abjadext.nauert.qtargets": [[96, 1, 1, "", "BeatwiseQTarget"], [96, 1, 1, "", "MeasurewiseQTarget"], [96, 1, 1, "", "QTarget"]], "abjadext.nauert.qtargets.BeatwiseQTarget": [[96, 2, 1, "", "__call__"], [96, 3, 1, "", "beats"], [96, 3, 1, "", "duration_in_ms"], [96, 3, 1, "", "item_class"], [96, 3, 1, "", "items"]], "abjadext.nauert.qtargets.MeasurewiseQTarget": [[96, 2, 1, "", "__call__"], [96, 3, 1, "", "beats"], [96, 3, 1, "", "duration_in_ms"], [96, 3, 1, "", "item_class"], [96, 3, 1, "", "items"]], "abjadext.nauert.qtargets.QTarget": [[96, 2, 1, "", "__call__"], [96, 3, 1, "", "beats"], [96, 3, 1, "", "duration_in_ms"], [96, 3, 1, "", "item_class"], [96, 3, 1, "", "items"]], "abjadext.nauert.quantizationjob": [[97, 1, 1, "", "QuantizationJob"]], "abjadext.nauert.quantizationjob.QuantizationJob": [[97, 2, 1, "", "__call__"], [97, 2, 1, "", "__eq__"], [97, 2, 1, "", "__hash__"], [97, 2, 1, "", "__repr__"], [97, 3, 1, "", "job_id"], [97, 3, 1, "", "q_event_proxies"], [97, 3, 1, "", "q_grids"], [97, 3, 1, "", "search_tree"]], "abjadext.nauert.quantizer": [[98, 4, 1, "", "quantize"]], "abjadext.nauert.searchtrees": [[99, 1, 1, "", "SearchTree"], [99, 1, 1, "", "UnweightedSearchTree"], [99, 1, 1, "", "WeightedSearchTree"]], "abjadext.nauert.searchtrees.SearchTree": [[99, 2, 1, "", "__call__"], [99, 2, 1, "", "__eq__"], [99, 2, 1, "", "__hash__"], [99, 2, 1, "", "__repr__"], [99, 3, 1, "", "default_definition"], [99, 3, 1, "", "definition"]], "abjadext.nauert.searchtrees.UnweightedSearchTree": [[99, 2, 1, "", "__call__"], [99, 2, 1, "", "__eq__"], [99, 2, 1, "", "__hash__"], [99, 2, 1, "", "__repr__"], [99, 3, 1, "", "default_definition"], [99, 3, 1, "", "definition"]], "abjadext.nauert.searchtrees.WeightedSearchTree": [[99, 2, 1, "", "__call__"], [99, 2, 1, "", "__eq__"], [99, 2, 1, "", "__hash__"], [99, 2, 1, "", "__repr__"], [99, 3, 1, "", "all_compositions"], [99, 3, 1, "", "default_definition"], [99, 3, 1, "", "definition"]], "abjadext.rmakers": [[101, 0, 0, "-", "rmakers"]], "abjadext.rmakers.rmakers": [[101, 1, 1, "", "Incise"], [101, 1, 1, "", "Interpolation"], [101, 1, 1, "", "Spelling"], [101, 1, 1, "", "Talea"], [101, 4, 1, "", "accelerando"], [101, 4, 1, "", "after_grace_container"], [101, 4, 1, "", "beam"], [101, 4, 1, "", "beam_groups"], [101, 4, 1, "", "before_grace_container"], [101, 4, 1, "", "denominator"], [101, 4, 1, "", "duration_bracket"], [101, 4, 1, "", "even_division"], [101, 4, 1, "", "example"], [101, 4, 1, "", "extract_trivial"], [101, 4, 1, "", "feather_beam"], [101, 4, 1, "", "force_augmentation"], [101, 4, 1, "", "force_diminution"], [101, 4, 1, "", "force_fraction"], [101, 4, 1, "", "force_note"], [101, 4, 1, "", "force_repeat_tie"], [101, 4, 1, "", "force_rest"], [101, 4, 1, "", "incised"], [101, 4, 1, "", "interpolate"], [101, 4, 1, "", "invisible_music"], [101, 4, 1, "", "multiplied_duration"], [101, 4, 1, "", "nongrace_leaves_in_each_tuplet"], [101, 4, 1, "", "note"], [101, 4, 1, "", "on_beat_grace_container"], [101, 4, 1, "", "reduce_multiplier"], [101, 4, 1, "", "repeat_tie"], [101, 4, 1, "", "rewrite_dots"], [101, 4, 1, "", "rewrite_meter"], [101, 4, 1, "", "rewrite_rest_filled"], [101, 4, 1, "", "rewrite_sustained"], [101, 4, 1, "", "split_measures"], [101, 4, 1, "", "talea"], [101, 4, 1, "", "tie"], [101, 4, 1, "", "tremolo_container"], [101, 4, 1, "", "trivialize"], [101, 4, 1, "", "tuplet"], [101, 4, 1, "", "unbeam"], [101, 4, 1, "", "untie"], [101, 4, 1, "", "wrap_in_time_signature_staff"], [101, 4, 1, "", "written_duration"]], "abjadext.rmakers.rmakers.Incise": [[101, 2, 1, "", "__delattr__"], [101, 2, 1, "", "__eq__"], [101, 2, 1, "", "__ge__"], [101, 2, 1, "", "__gt__"], [101, 2, 1, "", "__hash__"], [101, 2, 1, "", "__le__"], [101, 2, 1, "", "__lt__"], [101, 2, 1, "", "__post_init__"], [101, 2, 1, "", "__repr__"], [101, 2, 1, "", "__setattr__"]], "abjadext.rmakers.rmakers.Interpolation": [[101, 2, 1, "", "__delattr__"], [101, 2, 1, "", "__eq__"], [101, 2, 1, "", "__ge__"], [101, 2, 1, "", "__gt__"], [101, 2, 1, "", "__hash__"], [101, 2, 1, "", "__le__"], [101, 2, 1, "", "__lt__"], [101, 2, 1, "", "__post_init__"], [101, 2, 1, "", "__repr__"], [101, 2, 1, "", "__setattr__"], [101, 2, 1, "", "reverse"]], "abjadext.rmakers.rmakers.Spelling": [[101, 2, 1, "", "__delattr__"], [101, 2, 1, "", "__eq__"], [101, 2, 1, "", "__ge__"], [101, 2, 1, "", "__gt__"], [101, 2, 1, "", "__hash__"], [101, 2, 1, "", "__le__"], [101, 2, 1, "", "__lt__"], [101, 2, 1, "", "__post_init__"], [101, 2, 1, "", "__repr__"], [101, 2, 1, "", "__setattr__"]], "abjadext.rmakers.rmakers.Talea": [[101, 2, 1, "", "__contains__"], [101, 2, 1, "", "__delattr__"], [101, 2, 1, "", "__eq__"], [101, 2, 1, "", "__ge__"], [101, 2, 1, "", "__getitem__"], [101, 2, 1, "", "__gt__"], [101, 2, 1, "", "__hash__"], [101, 2, 1, "", "__iter__"], [101, 2, 1, "", "__le__"], [101, 2, 1, "", "__len__"], [101, 2, 1, "", "__lt__"], [101, 2, 1, "", "__post_init__"], [101, 2, 1, "", "__repr__"], [101, 2, 1, "", "__setattr__"], [101, 2, 1, "", "advance"], [101, 3, 1, "", "period"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"]}, "titleterms": {"accumul": 0, "cell": [0, 112], "bibliographi": 1, "colophon": 2, "A": [3, 114, 123], "container": 3, "model": 3, "music": [3, 17], "notat": 3, "custom": [4, 6], "context": [4, 108, 129], "creation": 4, "glossari": 5, "instrument": [6, 45], "creat": [6, 7], "understand": [6, 7, 14, 17], "interpret": [6, 7, 17, 128], "represent": [6, 7, 17], "an": 6, "attach": [6, 7], "compon": [6, 7, 17], "get": [6, 7, 17, 40], "": [6, 17, 18, 107], "effect": 6, "detach": [6, 7], "from": [6, 17, 110, 113], "rang": 6, "level": 6, "transposit": 6, "clef": 6, "properti": 6, "lilypond": [7, 8, 17, 108, 117, 118, 119, 129, 131, 132], "liter": [7, 114], "abjad": [7, 43, 102, 107, 117, 118, 119, 132], "leaf": 7, "argument": 7, "compar": 7, "wellformed": 8, "todo": [10, 16, 56, 72, 73], "parentag": [10, 59], "pitch": [11, 16, 19, 69], "convent": 11, "number": [11, 17], "diaton": [11, 114], "accident": 11, "abbrevi": 11, "octav": [11, 114], "design": [11, 111], "default": [11, 128], "spell": 11, "score": [12, 72, 115], "fragment": [12, 115], "string": [12, 17, 77], "summer": 13, "workshop": 13, "repr": 14, "virtual": [15, 117, 118, 119], "environ": [15, 117, 118, 119], "work": 16, "name": [16, 127], "tuplet": 17, "make": 17, "input": 17, "list": 17, "other": 17, "format": [17, 39, 132], "select": [17, 73, 110], "leav": 17, "length": 17, "durat": [17, 18, 32], "rhythmic": [17, 112], "augment": 17, "diminut": 17, "set": [17, 128, 129], "multipli": 17, "append": 17, "one": [17, 114], "end": 17, "extend": 17, "multipl": 17, "onc": 17, "find": 17, "index": [17, 21], "pop": 17, "remov": 17, "refer": 17, "overrid": [17, 58], "attribut": 17, "grob": 17, "bracket": 17, "what": [18, 123], "differ": 18, "between": 18, "written": 18, "hexachord": 19, "recombin": 19, "all": [19, 122], "interv": [19, 20], "defin": 19, "function": [19, 114], "up": 19, "voic": 19, "aggreg": 19, "segment": 19, "chord": 19, "exampl": [19, 20, 21, 111], "cycl": 20, "intersect": 20, "rotat": 21, "row": [21, 22, 113], "deriv": [22, 23], "trichord": [22, 26], "scale": [23, 114], "siev": 23, "superimposit": 24, "partial": 24, "tone": [25, 113], "clock": 25, "tessel": 25, "definit": 26, "ratio": [26, 70], "bind": 27, "configur": [28, 106], "contextmanag": 29, "contribut": 30, "cyclictupl": 31, "dynam": 33, "enumer": [34, 112, 114], "enum": 35, "except": 36, "ext": 37, "sphinx": 38, "grace_corner_cas": 41, "illustr": [42, 114], "indic": [44, 130], "io": 46, "iter": 47, "iterpitch": 48, "label": 49, "lilypondfil": 50, "lyproxi": 51, "maker": 52, "math": 53, "meter": 54, "metricmodul": 55, "mutat": 56, "obgc": 57, "base": 60, "parser": [61, 63], "pars": 62, "reduc": 64, "scheme": 65, "pattern": 66, "pcollect": 67, "persist": 68, "rhythmtre": 71, "sequenc": 74, "setclass": 75, "spanner": 76, "tag": 78, "timespan": 79, "tweak": 80, "verticalmo": 81, "wf": 82, "abjadext": 83, "attackpointoptim": 84, "gracehandl": 85, "heurist": 86, "nauert": 87, "jobhandl": 88, "qeventproxi": 89, "qevent": 90, "qeventsequ": 91, "qgrid": 92, "qschemaitem": 93, "qschema": 94, "qtargetitem": 95, "qtarget": 96, "quantizationjob": 97, "quantiz": 98, "searchtre": 99, "rmaker": [100, 101], "api": 102, "best": 103, "practic": 103, "For": 103, "beginn": 103, "intermedi": 103, "user": 103, "advanc": 103, "chang": [104, 128], "commun": 105, "develop": 107, "instal": [107, 117, 118, 119], "packag": 107, "versu": 107, "clone": 107, "build": 107, "doc": 107, "local": 107, "concaten": 108, "public": 109, "corpu": 110, "figur": 110, "dyad": 111, "magic": 113, "squar": 113, "twelv": [113, 114], "gener": 114, "time": [114, 128], "mani": 114, "major": 114, "minor": 114, "dorian": 114, "piano": 115, "audienc": 116, "check": [117, 118, 119], "python": [117, 118, 119], "3": [117, 118, 119], "linux": 118, "maco": 119, "window": 120, "2010": 121, "00": 121, "l": [121, 122], "imaginair": 121, "lagartija": 121, "mon": 121, "seul": 121, "d\u00e9sir": 121, "2009": 121, "lid\u00e9rcf\u00e9ni": 121, "2008": 121, "sekka": 121, "2007": 121, "\u010d\u00e1ry": 121, "2006": 121, "po\u00e8m": 121, "r\u00e9cursif": 121, "2005": 121, "2015": 122, "11": [122, 123], "akasha": 122, "myrkr": 122, "al": 122, "kitab": 122, "khamr": 122, "invis": 122, "citi": 122, "iii": 122, "ersilia": 122, "Ins": 122, "wasser": 122, "eingeschrieben": 122, "ii": 122, "armilla": 122, "refrain": 122, "2014": 122, "huitzil": 122, "i": 122, "zaira": 122, "krummzeit": 122, "plagu": 122, "water": 122, "The": 122, "world": 122, "around": 122, "2012": 122, "13": 122, "traiettori": 122, "inargent": 122, "2013": 122, "cartographi": [122, 123], "aurora": 122, "2011": 122, "archipel": 122, "du": 122, "corp": 122, "2016": 123, "present": 123, "hold": 123, "them": 123, "togeth": 123, "2020": 123, "adumbr": 123, "chalk": 123, "line": 123, "hamonshu": 123, "2018": 123, "20": 123, "h": 123, "r": 123, "m": 123, "o": 123, "n": 123, "y": 123, "2019": 123, "faberg\u00e9": 123, "investig": 123, "19": 123, "n\u00e4hte": 123, "guerrero": 123, "mr\u00e1z": 123, "2017": 123, "demarest": 123, "lloyd": 123, "spiel": 123, "der": 123, "dornen": 123, "ikribu": 123, "welcom": 124, "contain": [125, 126, 127, 128], "basic": 126, "oper": 126, "retriev": 127, "initi": [128, 129], "after": [128, 129], "type": 129, "file": 131, "preambl": 131, "object": 132}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Accumulation, of cells": [[0, "accumulation-of-cells"]], "Bibliography": [[1, "bibliography"]], "Colophon": [[2, "colophon"]], "A containerized model of music notation": [[3, "a-containerized-model-of-music-notation"]], "Custom context creation": [[4, "custom-context-creation"]], "Glossary": [[5, "glossary"]], "Instruments": [[6, "instruments"]], "Creating instruments": [[6, "creating-instruments"]], "Understanding the interpreter representation of an instrument": [[6, "understanding-the-interpreter-representation-of-an-instrument"]], "Attaching instruments to a component": [[6, "attaching-instruments-to-a-component"]], "Getting the instrument attached to a component": [[6, "getting-the-instrument-attached-to-a-component"]], "Getting a component\u2019s effective instrument": [[6, "getting-a-component-s-effective-instrument"]], "Detaching instruments from a component": [[6, "detaching-instruments-from-a-component"]], "Getting an instrument\u2019s range": [[6, "getting-an-instrument-s-range"]], "Getting an instrument\u2019s level of transposition": [[6, "getting-an-instrument-s-level-of-transposition"]], "Getting an instrument\u2019s clefs": [[6, "getting-an-instrument-s-clefs"]], "Customizing instrument properties": [[6, "customizing-instrument-properties"]], "LilyPond literals": [[7, "lilypond-literals"]], "Creating LilyPond literals": [[7, "creating-lilypond-literals"]], "Understanding the interpreter representation of LilyPond literals": [[7, "understanding-the-interpreter-representation-of-lilypond-literals"]], "Attaching LilyPond literals to Abjad components": [[7, "attaching-lilypond-literals-to-abjad-components"]], "Getting the LilyPond literals attached to a leaf": [[7, "getting-the-lilypond-literals-attached-to-a-leaf"]], "Detaching LilyPond literals": [[7, "detaching-lilypond-literals"]], "Getting the argument of a LilyPond literal": [[7, "getting-the-argument-of-a-lilypond-literal"]], "Comparing LilyPond literals": [[7, "comparing-lilypond-literals"]], "LilyPond wellformedness": [[8, "lilypond-wellformedness"]], "Todo": [[10, "id1"], [16, "id1"], [56, "id1"], [56, "id2"], [72, "id1"], [73, "id1"], [73, "id2"], [73, "id3"]], "Parentage": [[10, "parentage"]], "Pitch conventions": [[11, "pitch-conventions"]], "Pitch numbers": [[11, "pitch-numbers"]], "Diatonic pitch numbers": [[11, "diatonic-pitch-numbers"]], "Accidental abbreviations": [[11, "accidental-abbreviations"]], "Octave designation": [[11, "octave-designation"]], "Default accidental spelling": [[11, "default-accidental-spelling"]], "Score fragment, strings": [[12, "score-fragment-strings"]], "Summer workshop": [[13, "summer-workshop"]], "Understanding reprs": [[14, "understanding-reprs"]], "Virtual environments": [[15, "virtual-environments"]], "Working with named pitches": [[16, "working-with-named-pitches"]], "Tuplets": [[17, "tuplets"]], "Making a tuplet from a LilyPond input string": [[17, "making-a-tuplet-from-a-lilypond-input-string"]], "Making a tuplet from a list of other components": [[17, "making-a-tuplet-from-a-list-of-other-components"]], "Understanding the interpreter representation of a tuplet": [[17, "understanding-the-interpreter-representation-of-a-tuplet"]], "Understanding the string representation of a tuplet": [[17, "understanding-the-string-representation-of-a-tuplet"]], "Formatting tuplets": [[17, "formatting-tuplets"]], "Selecting the music in a tuplet": [[17, "selecting-the-music-in-a-tuplet"]], "Selecting a tuplet\u2019s leaves": [[17, "selecting-a-tuplet-s-leaves"]], "Getting the length of a tuplet": [[17, "getting-the-length-of-a-tuplet"]], "Getting tuplet duration": [[17, "getting-tuplet-duration"]], "Understanding rhythmic augmentation and diminution": [[17, "understanding-rhythmic-augmentation-and-diminution"]], "Getting and setting the multiplier of a tuplet": [[17, "getting-and-setting-the-multiplier-of-a-tuplet"]], "Appending one component to the end of a tuplet": [[17, "appending-one-component-to-the-end-of-a-tuplet"]], "Extending a tuplet with multiple components at once": [[17, "extending-a-tuplet-with-multiple-components-at-once"]], "Finding the index of a component in a tuplet": [[17, "finding-the-index-of-a-component-in-a-tuplet"]], "Popping a tuplet component by index": [[17, "popping-a-tuplet-component-by-index"]], "Removing a tuplet component by reference": [[17, "removing-a-tuplet-component-by-reference"]], "Overriding attributes of the LilyPond tuplet number grob": [[17, "overriding-attributes-of-the-lilypond-tuplet-number-grob"]], "Overriding attributes of the LilyPond tuplet bracket grob": [[17, "overriding-attributes-of-the-lilypond-tuplet-bracket-grob"]], "What\u2019s the difference between duration and written duration?": [[18, "what-s-the-difference-between-duration-and-written-duration"]], "Hexachord recombination, all-interval": [[19, "hexachord-recombination-all-interval"]], "Defining a function to recombine all-interval hexachords": [[19, "defining-a-function-to-recombine-all-interval-hexachords"]], "Up-voicing aggregates (as pitch segments)": [[19, "up-voicing-aggregates-as-pitch-segments"]], "Up-voicing aggregates (as chords)": [[19, "up-voicing-aggregates-as-chords"]], "Examples": [[19, "examples"], [20, "examples"], [21, "examples"], [111, "examples"]], "Interval cycle intersection": [[20, "interval-cycle-intersection"]], "Rotation, by row index": [[21, "rotation-by-row-index"]], "Row derivation, by trichord": [[22, "row-derivation-by-trichord"]], "Scale derivation, by sieve": [[23, "scale-derivation-by-sieve"]], "Superimposition of partials": [[24, "superimposition-of-partials"]], "Tone-clock tesselation": [[25, "tone-clock-tesselation"]], "Trichord definition, by ratio": [[26, "trichord-definition-by-ratio"]], "bind": [[27, "module-abjad.bind"]], "configuration": [[28, "module-abjad.configuration"]], "contextmanagers": [[29, "module-abjad.contextmanagers"]], "contributions": [[30, "module-abjad.contributions"]], "cyclictuple": [[31, "module-abjad.cyclictuple"]], "duration": [[32, "module-abjad.duration"]], "dynamic": [[33, "module-abjad.dynamic"]], "enumerate": [[34, "module-abjad.enumerate"]], "enums": [[35, "module-abjad.enums"]], "exceptions": [[36, "module-abjad.exceptions"]], "ext": [[37, "module-abjad.ext"]], "sphinx": [[38, "module-abjad.ext.sphinx"]], "format": [[39, "module-abjad.format"]], "get": [[40, "module-abjad.get"]], "grace_corner_cases": [[41, "module-abjad.grace_corner_cases"]], "illustrators": [[42, "module-abjad.illustrators"]], "abjad": [[43, "abjad"]], "indicators": [[44, "module-abjad.indicators"]], "instruments": [[45, "module-abjad.instruments"]], "io": [[46, "module-abjad.io"]], "iterate": [[47, "module-abjad.iterate"]], "iterpitches": [[48, "module-abjad.iterpitches"]], "label": [[49, "module-abjad.label"]], "lilypondfile": [[50, "module-abjad.lilypondfile"]], "lyproxy": [[51, "module-abjad.lyproxy"]], "makers": [[52, "module-abjad.makers"]], "math": [[53, "module-abjad.math"]], "meter": [[54, "module-abjad.meter"]], "metricmodulation": [[55, "module-abjad.metricmodulation"]], "mutate": [[56, "module-abjad.mutate"]], "obgc": [[57, "module-abjad.obgc"]], "overrides": [[58, "module-abjad.overrides"]], "parentage": [[59, "module-abjad.parentage"]], "base": [[60, "module-abjad.parsers.base"]], "parsers": [[61, "module-abjad.parsers"]], "parse": [[62, "module-abjad.parsers.parse"]], "parser": [[63, "module-abjad.parsers.parser"]], "reduced": [[64, "module-abjad.parsers.reduced"]], "scheme": [[65, "module-abjad.parsers.scheme"]], "pattern": [[66, "module-abjad.pattern"]], "pcollections": [[67, "module-abjad.pcollections"]], "persist": [[68, "module-abjad.persist"]], "pitch": [[69, "module-abjad.pitch"]], "ratio": [[70, "module-abjad.ratio"]], "rhythmtrees": [[71, "module-abjad.rhythmtrees"]], "score": [[72, "module-abjad.score"]], "select": [[73, "module-abjad.select"]], "sequence": [[74, "module-abjad.sequence"]], "setclass": [[75, "module-abjad.setclass"]], "spanners": [[76, "module-abjad.spanners"]], "string": [[77, "module-abjad.string"]], "tag": [[78, "module-abjad.tag"]], "timespan": [[79, "module-abjad.timespan"]], "tweaks": [[80, "module-abjad.tweaks"]], "verticalmoment": [[81, "module-abjad.verticalmoment"]], "wf": [[82, "module-abjad.wf"]], "abjadext": [[83, "abjadext"]], "attackpointoptimizers": [[84, "module-abjadext.nauert.attackpointoptimizers"]], "gracehandlers": [[85, "module-abjadext.nauert.gracehandlers"]], "heuristics": [[86, "module-abjadext.nauert.heuristics"]], "nauert": [[87, "module-abjadext.nauert"]], "jobhandlers": [[88, "module-abjadext.nauert.jobhandlers"]], "qeventproxy": [[89, "module-abjadext.nauert.qeventproxy"]], "qevents": [[90, "module-abjadext.nauert.qevents"]], "qeventsequence": [[91, "module-abjadext.nauert.qeventsequence"]], "qgrid": [[92, "module-abjadext.nauert.qgrid"]], "qschemaitems": [[93, "module-abjadext.nauert.qschemaitems"]], "qschemas": [[94, "module-abjadext.nauert.qschemas"]], "qtargetitems": [[95, "module-abjadext.nauert.qtargetitems"]], "qtargets": [[96, "module-abjadext.nauert.qtargets"]], "quantizationjob": [[97, "module-abjadext.nauert.quantizationjob"]], "quantizer": [[98, "module-abjadext.nauert.quantizer"]], "searchtrees": [[99, "module-abjadext.nauert.searchtrees"]], "rmakers": [[100, "module-abjadext.rmakers"], [101, "module-abjadext.rmakers.rmakers"]], "Abjad API": [[102, "abjad-api"]], "Best practices": [[103, "best-practices"]], "For beginners": [[103, "for-beginners"]], "For intermediate users": [[103, "for-intermediate-users"]], "For advanced users": [[103, "for-advanced-users"]], "Changes": [[104, "changes"]], "Community": [[105, "community"]], "Configuration": [[106, "configuration"]], "Developer installation": [[107, "developer-installation"]], "\u201cPackaged\u201d versus \u201ccloned\u201d installs of Abjad": [[107, "packaged-versus-cloned-installs-of-abjad"]], "Building Abjad\u2019s docs locally": [[107, "building-abjad-s-docs-locally"]], "LilyPond context concatenation": [[108, "lilypond-context-concatenation"]], "Publications": [[109, "publications"]], "Corpus, figure selection from": [[110, "corpus-figure-selection-from"]], "Design, by dyads": [[111, "design-by-dyads"]], "Enumeration, of rhythmic cells": [[112, "enumeration-of-rhythmic-cells"]], "Magic square, from twelve-tone row": [[113, "magic-square-from-twelve-tone-row"]], "Scales, diatonic": [[114, "scales-diatonic"]], "Scale literals": [[114, "scale-literals"]], "A function to generate one octave of a scale": [[114, "a-function-to-generate-one-octave-of-a-scale"]], "Illustrating one scale at a time": [[114, "illustrating-one-scale-at-a-time"]], "A function to enumerate many scales": [[114, "a-function-to-enumerate-many-scales"]], "Twelve major scales": [[114, "twelve-major-scales"]], "Twelve minor scales": [[114, "twelve-minor-scales"]], "Twelve Dorian scales": [[114, "twelve-dorian-scales"]], "Score fragment, piano": [[115, "score-fragment-piano"]], "Audience": [[116, "audience"]], "Check Python": [[117, "check-python"], [118, "check-python"], [119, "check-python"]], "Check LilyPond": [[117, "check-lilypond"], [118, "check-lilypond"], [119, "check-lilypond"]], "Install Abjad in a Python 3 virtual environment": [[117, "install-abjad-in-a-python-3-virtual-environment"], [118, "install-abjad-in-a-python-3-virtual-environment"], [119, "install-abjad-in-a-python-3-virtual-environment"]], "Linux": [[118, "linux"]], "macOS": [[119, "macos"]], "Windows": [[120, "windows"]], "2010-00": [[121, "id1"]], "L\u2019imaginaire (2010)": [[121, "l-imaginaire-2010"]], "Lagartija (2010)": [[121, "lagartija-2010"]], "Mon seul d\u00e9sir (2009)": [[121, "mon-seul-desir-2009"]], "Lid\u00e9rcf\u00e9ny (2008)": [[121, "lidercfeny-2008"]], "Sekka (2007)": [[121, "sekka-2007"]], "\u010c\u00e1ry (2006)": [[121, "cary-2006"]], "Po\u00e8me R\u00e9cursif (2005)": [[121, "poeme-recursif-2005"]], "2015-11": [[122, "id1"]], "Akasha (2015)": [[122, "akasha-2015"]], "Myrkr (2015)": [[122, "myrkr-2015"]], "Al-kitab al-khamr (2015)": [[122, "al-kitab-al-khamr-2015"]], "Invisible Cities (iii): Ersilia (2015)": [[122, "invisible-cities-iii-ersilia-2015"]], "Ins wasser eingeschrieben (2015)": [[122, "ins-wasser-eingeschrieben-2015"]], "Invisible Cities (ii): Armilla (2015)": [[122, "invisible-cities-ii-armilla-2015"]], "Refrain (2014)": [[122, "refrain-2014"]], "Huitzil (2014)": [[122, "huitzil-2014"]], "Invisible Cities (i): Zaira (2014)": [[122, "invisible-cities-i-zaira-2014"]], "Krummzeit (2014)": [[122, "krummzeit-2014"]], "Plague Water (2014)": [[122, "plague-water-2014"]], "The World All Around (2012-13)": [[122, "the-world-all-around-2012-13"]], "Traiettorie inargentate (2013)": [[122, "traiettorie-inargentate-2013"]], "Cartography (2013)": [[122, "cartography-2013"]], "Aurora (2011)": [[122, "aurora-2011"]], "L\u2019archipel du corps (2011)": [[122, "l-archipel-du-corps-2011"]], "2016-present": [[123, "present"]], "what holds them together (2020)": [[123, "what-holds-them-together-2020"]], "Adumbration (2020)": [[123, "adumbration-2020"]], "Chalk Line (2020)": [[123, "chalk-line-2020"]], "Hamonshu (2018-20)": [[123, "hamonshu-2018-20"]], "( H A R M O N Y ) (2019)": [[123, "h-a-r-m-o-n-y-2019"]], "Faberg\u00e9 Investigations (2016/19)": [[123, "faberge-investigations-2016-19"]], "Cartography #11 (2018)": [[123, "cartography-11-2018"]], "N\u00e4hte (2018)": [[123, "nahte-2018"]], "GUERRERO (2018)": [[123, "guerrero-2018"]], "Mr\u00e1z (2017)": [[123, "mraz-2017"]], "Demarest/Lloyd (2016)": [[123, "demarest-lloyd-2016"]], "Spiel der Dornen (2016)": [[123, "spiel-der-dornen-2016"]], "Ikribu (2016)": [[123, "ikribu-2016"]], "Welcome": [[124, "welcome"]], "Containers": [[125, "containers"]], "Containers, basic operations on": [[126, "containers-basic-operations-on"]], "Containers, retrieving by name": [[127, "containers-retrieving-by-name"]], "Containers, time interpretation of": [[128, "containers-time-interpretation-of"]], "Time interpretation defaults": [[128, "time-interpretation-defaults"]], "Setting time interpretation at initialization": [[128, "setting-time-interpretation-at-initialization"]], "Changing time interpretation after initialization": [[128, "changing-time-interpretation-after-initialization"]], "Contexts, LilyPond type of": [[129, "contexts-lilypond-type-of"]], "Setting LilyPond type at initialization": [[129, "setting-lilypond-type-at-initialization"]], "Setting LilyPond type after initialization": [[129, "setting-lilypond-type-after-initialization"]], "Indicators": [[130, "indicators"]], "LilyPond files, preamble of": [[131, "lilypond-files-preamble-of"]], "LilyPond format, of Abjad objects": [[132, "lilypond-format-of-abjad-objects"]]}, "indexentries": {"wrapper (class in abjad.bind)": [[27, "abjad.bind.Wrapper"]], "__copy__() (abjad.bind.wrapper method)": [[27, "abjad.bind.Wrapper.__copy__"]], "__eq__() (abjad.bind.wrapper method)": [[27, "abjad.bind.Wrapper.__eq__"]], "__hash__() (abjad.bind.wrapper method)": [[27, "abjad.bind.Wrapper.__hash__"]], "__repr__() (abjad.bind.wrapper method)": [[27, "abjad.bind.Wrapper.__repr__"]], "abjad.bind": [[27, "module-abjad.bind"]], "annotate() (in module abjad.bind)": [[27, "abjad.bind.annotate"]], "annotation (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.annotation"]], "attach() (in module abjad.bind)": [[27, "abjad.bind.attach"]], "bundled() (abjad.bind.wrapper method)": [[27, "abjad.bind.Wrapper.bundled"]], "component (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.component"]], "context (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.context"]], "deactivate (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.deactivate"]], "detach() (in module abjad.bind)": [[27, "abjad.bind.detach"]], "direction (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.direction"]], "get_item() (abjad.bind.wrapper method)": [[27, "abjad.bind.Wrapper.get_item"]], "indicator (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.indicator"]], "leaked_start_offset (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.leaked_start_offset"]], "module": [[27, "module-abjad.bind"], [28, "module-abjad.configuration"], [29, "module-abjad.contextmanagers"], [30, "module-abjad.contributions"], [31, "module-abjad.cyclictuple"], [32, "module-abjad.duration"], [33, "module-abjad.dynamic"], [34, "module-abjad.enumerate"], [35, "module-abjad.enums"], [36, "module-abjad.exceptions"], [37, "module-abjad.ext"], [38, "module-abjad.ext.sphinx"], [39, "module-abjad.format"], [40, "module-abjad.get"], [41, "module-abjad.grace_corner_cases"], [42, "module-abjad.illustrators"], [43, "module-abjad"], [44, "module-abjad.indicators"], [45, "module-abjad.instruments"], [46, "module-abjad.io"], [47, "module-abjad.iterate"], [48, "module-abjad.iterpitches"], [49, "module-abjad.label"], [50, "module-abjad.lilypondfile"], [51, "module-abjad.lyproxy"], [52, "module-abjad.makers"], [53, "module-abjad.math"], [54, "module-abjad.meter"], [55, "module-abjad.metricmodulation"], [56, "module-abjad.mutate"], [57, "module-abjad.obgc"], [58, "module-abjad.overrides"], [59, "module-abjad.parentage"], [60, "module-abjad.parsers.base"], [61, "module-abjad.parsers"], [62, "module-abjad.parsers.parse"], [63, "module-abjad.parsers.parser"], [64, "module-abjad.parsers.reduced"], [65, "module-abjad.parsers.scheme"], [66, "module-abjad.pattern"], [67, "module-abjad.pcollections"], [68, "module-abjad.persist"], [69, "module-abjad.pitch"], [70, "module-abjad.ratio"], [71, "module-abjad.rhythmtrees"], [72, "module-abjad.score"], [73, "module-abjad.select"], [74, "module-abjad.sequence"], [75, "module-abjad.setclass"], [76, "module-abjad.spanners"], [77, "module-abjad.string"], [78, "module-abjad.tag"], [79, "module-abjad.timespan"], [80, "module-abjad.tweaks"], [81, "module-abjad.verticalmoment"], [82, "module-abjad.wf"], [83, "module-abjadext"], [84, "module-abjadext.nauert.attackpointoptimizers"], [85, "module-abjadext.nauert.gracehandlers"], [86, "module-abjadext.nauert.heuristics"], [87, "module-abjadext.nauert"], [88, "module-abjadext.nauert.jobhandlers"], [89, "module-abjadext.nauert.qeventproxy"], [90, "module-abjadext.nauert.qevents"], [91, "module-abjadext.nauert.qeventsequence"], [92, "module-abjadext.nauert.qgrid"], [93, "module-abjadext.nauert.qschemaitems"], [94, "module-abjadext.nauert.qschemas"], [95, "module-abjadext.nauert.qtargetitems"], [96, "module-abjadext.nauert.qtargets"], [97, "module-abjadext.nauert.quantizationjob"], [98, "module-abjadext.nauert.quantizer"], [99, "module-abjadext.nauert.searchtrees"], [100, "module-abjadext.rmakers"], [101, "module-abjadext.rmakers.rmakers"]], "start_offset (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.start_offset"]], "synthetic_offset (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.synthetic_offset"]], "tag (abjad.bind.wrapper attribute)": [[27, "abjad.bind.Wrapper.tag"]], "unbundle_indicator() (abjad.bind.wrapper method)": [[27, "abjad.bind.Wrapper.unbundle_indicator"]], "configuration (class in abjad.configuration)": [[28, "abjad.configuration.Configuration"]], "__delitem__() (abjad.configuration.configuration method)": [[28, "abjad.configuration.Configuration.__delitem__"]], "__getitem__() (abjad.configuration.configuration method)": [[28, "abjad.configuration.Configuration.__getitem__"]], "__iter__() (abjad.configuration.configuration method)": [[28, "abjad.configuration.Configuration.__iter__"]], "__setitem__() (abjad.configuration.configuration method)": [[28, "abjad.configuration.Configuration.__setitem__"]], "abjad.configuration": [[28, "module-abjad.configuration"]], "abjad_directory (abjad.configuration.configuration attribute)": [[28, "abjad.configuration.Configuration.abjad_directory"]], "abjad_output_directory (abjad.configuration.configuration attribute)": [[28, "abjad.configuration.Configuration.abjad_output_directory"]], "boilerplate_directory (abjad.configuration.configuration attribute)": [[28, "abjad.configuration.Configuration.boilerplate_directory"]], "configuration_directory (abjad.configuration.configuration attribute)": [[28, "abjad.configuration.Configuration.configuration_directory"]], "configuration_file_path (abjad.configuration.configuration attribute)": [[28, "abjad.configuration.Configuration.configuration_file_path"]], "get() (abjad.configuration.configuration method)": [[28, "abjad.configuration.Configuration.get"]], "get_lilypond_version_string() (abjad.configuration.configuration method)": [[28, "abjad.configuration.Configuration.get_lilypond_version_string"]], "home_directory (abjad.configuration.configuration attribute)": [[28, "abjad.configuration.Configuration.home_directory"]], "lilypond_log_file_path (abjad.configuration.configuration attribute)": [[28, "abjad.configuration.Configuration.lilypond_log_file_path"]], "list_all_classes() (in module abjad.configuration)": [[28, "abjad.configuration.list_all_classes"]], "list_all_functions() (in module abjad.configuration)": [[28, "abjad.configuration.list_all_functions"]], "yield_all_modules() (in module abjad.configuration)": [[28, "abjad.configuration.yield_all_modules"]], "contextmanager (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.ContextManager"]], "filesystemstate (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.FilesystemState"]], "forbidupdate (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.ForbidUpdate"]], "nullcontextmanager (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.NullContextManager"]], "progressindicator (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.ProgressIndicator"]], "redirectedstreams (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.RedirectedStreams"]], "temporarydirectory (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.TemporaryDirectory"]], "temporarydirectorychange (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.TemporaryDirectoryChange"]], "timer (class in abjad.contextmanagers)": [[29, "abjad.contextmanagers.Timer"]], "__enter__() (abjad.contextmanagers.filesystemstate method)": [[29, "abjad.contextmanagers.FilesystemState.__enter__"]], "__enter__() (abjad.contextmanagers.forbidupdate method)": [[29, "abjad.contextmanagers.ForbidUpdate.__enter__"]], "__enter__() (abjad.contextmanagers.nullcontextmanager method)": [[29, "abjad.contextmanagers.NullContextManager.__enter__"]], "__enter__() (abjad.contextmanagers.progressindicator method)": [[29, "abjad.contextmanagers.ProgressIndicator.__enter__"]], "__enter__() (abjad.contextmanagers.redirectedstreams method)": [[29, "abjad.contextmanagers.RedirectedStreams.__enter__"]], "__enter__() (abjad.contextmanagers.temporarydirectory method)": [[29, "abjad.contextmanagers.TemporaryDirectory.__enter__"]], "__enter__() (abjad.contextmanagers.temporarydirectorychange method)": [[29, "abjad.contextmanagers.TemporaryDirectoryChange.__enter__"]], "__enter__() (abjad.contextmanagers.timer method)": [[29, "abjad.contextmanagers.Timer.__enter__"]], "__exit__() (abjad.contextmanagers.filesystemstate method)": [[29, "abjad.contextmanagers.FilesystemState.__exit__"]], "__exit__() (abjad.contextmanagers.forbidupdate method)": [[29, "abjad.contextmanagers.ForbidUpdate.__exit__"]], "__exit__() (abjad.contextmanagers.nullcontextmanager method)": [[29, "abjad.contextmanagers.NullContextManager.__exit__"]], "__exit__() (abjad.contextmanagers.progressindicator method)": [[29, "abjad.contextmanagers.ProgressIndicator.__exit__"]], "__exit__() (abjad.contextmanagers.redirectedstreams method)": [[29, "abjad.contextmanagers.RedirectedStreams.__exit__"]], "__exit__() (abjad.contextmanagers.temporarydirectory method)": [[29, "abjad.contextmanagers.TemporaryDirectory.__exit__"]], "__exit__() (abjad.contextmanagers.temporarydirectorychange method)": [[29, "abjad.contextmanagers.TemporaryDirectoryChange.__exit__"]], "__exit__() (abjad.contextmanagers.timer method)": [[29, "abjad.contextmanagers.Timer.__exit__"]], "__repr__() (abjad.contextmanagers.contextmanager method)": [[29, "abjad.contextmanagers.ContextManager.__repr__"]], "__repr__() (abjad.contextmanagers.filesystemstate method)": [[29, "abjad.contextmanagers.FilesystemState.__repr__"]], "__repr__() (abjad.contextmanagers.forbidupdate method)": [[29, "abjad.contextmanagers.ForbidUpdate.__repr__"]], "__repr__() (abjad.contextmanagers.nullcontextmanager method)": [[29, "abjad.contextmanagers.NullContextManager.__repr__"]], "__repr__() (abjad.contextmanagers.progressindicator method)": [[29, "abjad.contextmanagers.ProgressIndicator.__repr__"]], "__repr__() (abjad.contextmanagers.redirectedstreams method)": [[29, "abjad.contextmanagers.RedirectedStreams.__repr__"]], "__repr__() (abjad.contextmanagers.temporarydirectory method)": [[29, "abjad.contextmanagers.TemporaryDirectory.__repr__"]], "__repr__() (abjad.contextmanagers.temporarydirectorychange method)": [[29, "abjad.contextmanagers.TemporaryDirectoryChange.__repr__"]], "__repr__() (abjad.contextmanagers.timer method)": [[29, "abjad.contextmanagers.Timer.__repr__"]], "abjad.contextmanagers": [[29, "module-abjad.contextmanagers"]], "advance() (abjad.contextmanagers.progressindicator method)": [[29, "abjad.contextmanagers.ProgressIndicator.advance"]], "component (abjad.contextmanagers.forbidupdate attribute)": [[29, "abjad.contextmanagers.ForbidUpdate.component"]], "directory (abjad.contextmanagers.temporarydirectorychange attribute)": [[29, "abjad.contextmanagers.TemporaryDirectoryChange.directory"]], "elapsed_time (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.elapsed_time"]], "enter_message (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.enter_message"]], "exit_message (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.exit_message"]], "is_warning (abjad.contextmanagers.progressindicator attribute)": [[29, "abjad.contextmanagers.ProgressIndicator.is_warning"]], "keep (abjad.contextmanagers.filesystemstate attribute)": [[29, "abjad.contextmanagers.FilesystemState.keep"]], "message (abjad.contextmanagers.progressindicator attribute)": [[29, "abjad.contextmanagers.ProgressIndicator.message"]], "original_directory (abjad.contextmanagers.temporarydirectorychange attribute)": [[29, "abjad.contextmanagers.TemporaryDirectoryChange.original_directory"]], "parent_directory (abjad.contextmanagers.temporarydirectory attribute)": [[29, "abjad.contextmanagers.TemporaryDirectory.parent_directory"]], "print_continuously_from_background (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.print_continuously_from_background"]], "progress (abjad.contextmanagers.progressindicator attribute)": [[29, "abjad.contextmanagers.ProgressIndicator.progress"]], "remove (abjad.contextmanagers.filesystemstate attribute)": [[29, "abjad.contextmanagers.FilesystemState.remove"]], "start_time (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.start_time"]], "stderr (abjad.contextmanagers.redirectedstreams attribute)": [[29, "abjad.contextmanagers.RedirectedStreams.stderr"]], "stdout (abjad.contextmanagers.redirectedstreams attribute)": [[29, "abjad.contextmanagers.RedirectedStreams.stdout"]], "stop_time (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.stop_time"]], "temporary_directory (abjad.contextmanagers.temporarydirectory attribute)": [[29, "abjad.contextmanagers.TemporaryDirectory.temporary_directory"]], "total (abjad.contextmanagers.progressindicator attribute)": [[29, "abjad.contextmanagers.ProgressIndicator.total"]], "total_time_message (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.total_time_message"]], "update_on_enter (abjad.contextmanagers.forbidupdate attribute)": [[29, "abjad.contextmanagers.ForbidUpdate.update_on_enter"]], "update_on_exit (abjad.contextmanagers.forbidupdate attribute)": [[29, "abjad.contextmanagers.ForbidUpdate.update_on_exit"]], "verbose (abjad.contextmanagers.progressindicator attribute)": [[29, "abjad.contextmanagers.ProgressIndicator.verbose"]], "verbose (abjad.contextmanagers.temporarydirectorychange attribute)": [[29, "abjad.contextmanagers.TemporaryDirectoryChange.verbose"]], "verbose (abjad.contextmanagers.timer attribute)": [[29, "abjad.contextmanagers.Timer.verbose"]], "absolute_after (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.ABSOLUTE_AFTER"]], "absolute_before (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.ABSOLUTE_BEFORE"]], "after (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.AFTER"]], "articulations (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.ARTICULATIONS"]], "before (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.BEFORE"]], "close_brackets (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.CLOSE_BRACKETS"]], "closing (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.CLOSING"]], "commands (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.COMMANDS"]], "contents (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.CONTENTS"]], "context_settings (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.CONTEXT_SETTINGS"]], "contributionsbysite (class in abjad.contributions)": [[30, "abjad.contributions.ContributionsBySite"]], "grob_overrides (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.GROB_OVERRIDES"]], "grob_reverts (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.GROB_REVERTS"]], "leak (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.LEAK"]], "leaks (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.LEAKS"]], "markup (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.MARKUP"]], "opening (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.OPENING"]], "open_brackets (abjad.contributions.sites attribute)": [[30, "abjad.contributions.Sites.OPEN_BRACKETS"]], "pitched_trill (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.PITCHED_TRILL"]], "spanner_starts (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.SPANNER_STARTS"]], "spanner_stops (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.SPANNER_STOPS"]], "start_beam (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.START_BEAM"]], "stem_tremolos (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.STEM_TREMOLOS"]], "stop_beam (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.STOP_BEAM"]], "sites (class in abjad.contributions)": [[30, "abjad.contributions.Sites"]], "trill_spanner_starts (abjad.contributions.types attribute)": [[30, "abjad.contributions.Types.TRILL_SPANNER_STARTS"]], "types (class in abjad.contributions)": [[30, "abjad.contributions.Types"]], "__contains__() (abjad.contributions.sites class method)": [[30, "abjad.contributions.Sites.__contains__"]], "__contains__() (abjad.contributions.types class method)": [[30, "abjad.contributions.Types.__contains__"]], "__eq__() (abjad.contributions.contributionsbysite method)": [[30, "abjad.contributions.ContributionsBySite.__eq__"]], "__getitem__() (abjad.contributions.sites class method)": [[30, "abjad.contributions.Sites.__getitem__"]], "__getitem__() (abjad.contributions.types class method)": [[30, "abjad.contributions.Types.__getitem__"]], "__iter__() (abjad.contributions.contributionsbysite method)": [[30, "abjad.contributions.ContributionsBySite.__iter__"]], "__iter__() (abjad.contributions.sites class method)": [[30, "abjad.contributions.Sites.__iter__"]], "__iter__() (abjad.contributions.types class method)": [[30, "abjad.contributions.Types.__iter__"]], "__len__() (abjad.contributions.sites class method)": [[30, "abjad.contributions.Sites.__len__"]], "__len__() (abjad.contributions.types class method)": [[30, "abjad.contributions.Types.__len__"]], "__repr__() (abjad.contributions.contributionsbysite method)": [[30, "abjad.contributions.ContributionsBySite.__repr__"]], "abjad.contributions": [[30, "module-abjad.contributions"]], "alphabetize() (abjad.contributions.contributionsbysite static method)": [[30, "abjad.contributions.ContributionsBySite.alphabetize"]], "freeze_overrides() (abjad.contributions.contributionsbysite method)": [[30, "abjad.contributions.ContributionsBySite.freeze_overrides"]], "get_contribution_lists() (abjad.contributions.contributionsbysite method)": [[30, "abjad.contributions.ContributionsBySite.get_contribution_lists"]], "tag_contributions() (abjad.contributions.contributionsbysite method)": [[30, "abjad.contributions.ContributionsBySite.tag_contributions"]], "update() (abjad.contributions.contributionsbysite method)": [[30, "abjad.contributions.ContributionsBySite.update"]], "cyclictuple (class in abjad.cyclictuple)": [[31, "abjad.cyclictuple.CyclicTuple"]], "__contains__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__contains__"]], "__eq__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__eq__"]], "__getitem__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__getitem__"]], "__hash__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__hash__"]], "__iter__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__iter__"]], "__len__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__len__"]], "__post_init__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__post_init__"]], "__repr__() (abjad.cyclictuple.cyclictuple method)": [[31, "abjad.cyclictuple.CyclicTuple.__repr__"]], "abjad.cyclictuple": [[31, "module-abjad.cyclictuple"]], "duration (class in abjad.duration)": [[32, "abjad.duration.Duration"]], "multiplier (class in abjad.duration)": [[32, "abjad.duration.Multiplier"]], "nonreducedfraction (class in abjad.duration)": [[32, "abjad.duration.NonreducedFraction"]], "offset (class in abjad.duration)": [[32, "abjad.duration.Offset"]], "__abs__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__abs__"]], "__abs__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__abs__"]], "__abs__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__abs__"]], "__abs__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__abs__"]], "__add__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__add__"]], "__add__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__add__"]], "__add__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__add__"]], "__add__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__add__"]], "__bool__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__bool__"]], "__bool__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__bool__"]], "__bool__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__bool__"]], "__bool__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__bool__"]], "__ceil__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__ceil__"]], "__ceil__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__ceil__"]], "__ceil__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__ceil__"]], "__ceil__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__ceil__"]], "__complex__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__complex__"]], "__complex__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__complex__"]], "__complex__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__complex__"]], "__complex__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__complex__"]], "__copy__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__copy__"]], "__copy__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__copy__"]], "__copy__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__copy__"]], "__copy__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__copy__"]], "__deepcopy__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__deepcopy__"]], "__deepcopy__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__deepcopy__"]], "__deepcopy__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__deepcopy__"]], "__deepcopy__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__deepcopy__"]], "__div__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__div__"]], "__div__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__div__"]], "__div__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__div__"]], "__div__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__div__"]], "__divmod__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__divmod__"]], "__divmod__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__divmod__"]], "__divmod__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__divmod__"]], "__divmod__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__divmod__"]], "__eq__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__eq__"]], "__eq__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__eq__"]], "__eq__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__eq__"]], "__eq__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__eq__"]], "__float__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__float__"]], "__float__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__float__"]], "__float__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__float__"]], "__float__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__float__"]], "__floor__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__floor__"]], "__floor__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__floor__"]], "__floor__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__floor__"]], "__floor__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__floor__"]], "__floordiv__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__floordiv__"]], "__floordiv__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__floordiv__"]], "__floordiv__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__floordiv__"]], "__floordiv__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__floordiv__"]], "__ge__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__ge__"]], "__ge__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__ge__"]], "__ge__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__ge__"]], "__ge__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__ge__"]], "__gt__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__gt__"]], "__gt__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__gt__"]], "__gt__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__gt__"]], "__gt__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__gt__"]], "__hash__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__hash__"]], "__hash__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__hash__"]], "__hash__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__hash__"]], "__hash__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__hash__"]], "__int__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__int__"]], "__int__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__int__"]], "__int__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__int__"]], "__int__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__int__"]], "__le__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__le__"]], "__le__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__le__"]], "__le__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__le__"]], "__le__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__le__"]], "__lt__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__lt__"]], "__lt__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__lt__"]], "__lt__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__lt__"]], "__lt__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__lt__"]], "__mod__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__mod__"]], "__mod__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__mod__"]], "__mod__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__mod__"]], "__mod__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__mod__"]], "__mul__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__mul__"]], "__mul__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__mul__"]], "__mul__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__mul__"]], "__mul__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__mul__"]], "__ne__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__ne__"]], "__ne__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__ne__"]], "__ne__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__ne__"]], "__neg__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__neg__"]], "__neg__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__neg__"]], "__neg__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__neg__"]], "__neg__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__neg__"]], "__new__() (abjad.duration.duration static method)": [[32, "abjad.duration.Duration.__new__"]], "__new__() (abjad.duration.multiplier static method)": [[32, "abjad.duration.Multiplier.__new__"]], "__new__() (abjad.duration.nonreducedfraction static method)": [[32, "abjad.duration.NonreducedFraction.__new__"]], "__new__() (abjad.duration.offset static method)": [[32, "abjad.duration.Offset.__new__"]], "__pos__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__pos__"]], "__pos__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__pos__"]], "__pos__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__pos__"]], "__pos__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__pos__"]], "__pow__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__pow__"]], "__pow__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__pow__"]], "__pow__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__pow__"]], "__pow__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__pow__"]], "__radd__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__radd__"]], "__radd__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__radd__"]], "__radd__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__radd__"]], "__radd__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__radd__"]], "__rdiv__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rdiv__"]], "__rdiv__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rdiv__"]], "__rdiv__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rdiv__"]], "__rdiv__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rdiv__"]], "__rdivmod__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rdivmod__"]], "__rdivmod__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rdivmod__"]], "__rdivmod__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rdivmod__"]], "__rdivmod__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rdivmod__"]], "__repr__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__repr__"]], "__repr__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__repr__"]], "__repr__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__repr__"]], "__repr__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__repr__"]], "__rfloordiv__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rfloordiv__"]], "__rfloordiv__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rfloordiv__"]], "__rfloordiv__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rfloordiv__"]], "__rfloordiv__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rfloordiv__"]], "__rmod__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rmod__"]], "__rmod__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rmod__"]], "__rmod__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rmod__"]], "__rmod__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rmod__"]], "__rmul__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rmul__"]], "__rmul__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rmul__"]], "__rmul__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rmul__"]], "__rmul__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rmul__"]], "__round__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__round__"]], "__round__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__round__"]], "__round__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__round__"]], "__round__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__round__"]], "__rpow__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rpow__"]], "__rpow__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rpow__"]], "__rpow__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rpow__"]], "__rpow__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rpow__"]], "__rsub__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rsub__"]], "__rsub__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rsub__"]], "__rsub__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rsub__"]], "__rsub__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rsub__"]], "__rtruediv__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__rtruediv__"]], "__rtruediv__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__rtruediv__"]], "__rtruediv__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__rtruediv__"]], "__rtruediv__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__rtruediv__"]], "__str__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__str__"]], "__str__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__str__"]], "__str__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__str__"]], "__str__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__str__"]], "__sub__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__sub__"]], "__sub__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__sub__"]], "__sub__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__sub__"]], "__sub__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__sub__"]], "__truediv__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__truediv__"]], "__truediv__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__truediv__"]], "__truediv__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__truediv__"]], "__truediv__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__truediv__"]], "__trunc__() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.__trunc__"]], "__trunc__() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.__trunc__"]], "__trunc__() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.__trunc__"]], "__trunc__() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.__trunc__"]], "abjad.duration": [[32, "module-abjad.duration"]], "as_integer_ratio() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.as_integer_ratio"]], "as_integer_ratio() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.as_integer_ratio"]], "as_integer_ratio() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.as_integer_ratio"]], "as_integer_ratio() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.as_integer_ratio"]], "conjugate() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.conjugate"]], "conjugate() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.conjugate"]], "conjugate() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.conjugate"]], "conjugate() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.conjugate"]], "denominator (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.denominator"]], "denominator (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.denominator"]], "denominator (abjad.duration.nonreducedfraction attribute)": [[32, "abjad.duration.NonreducedFraction.denominator"]], "denominator (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.denominator"]], "displacement (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.displacement"]], "dot_count (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.dot_count"]], "dot_count (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.dot_count"]], "dot_count (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.dot_count"]], "durations_to_nonreduced_fractions() (abjad.duration.duration static method)": [[32, "abjad.duration.Duration.durations_to_nonreduced_fractions"]], "durations_to_nonreduced_fractions() (abjad.duration.multiplier static method)": [[32, "abjad.duration.Multiplier.durations_to_nonreduced_fractions"]], "durations_to_nonreduced_fractions() (abjad.duration.nonreducedfraction static method)": [[32, "abjad.duration.NonreducedFraction.durations_to_nonreduced_fractions"]], "durations_to_nonreduced_fractions() (abjad.duration.offset static method)": [[32, "abjad.duration.Offset.durations_to_nonreduced_fractions"]], "equal_or_greater_assignable (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.equal_or_greater_assignable"]], "equal_or_greater_assignable (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.equal_or_greater_assignable"]], "equal_or_greater_assignable (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.equal_or_greater_assignable"]], "equal_or_greater_power_of_two (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.equal_or_greater_power_of_two"]], "equal_or_greater_power_of_two (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.equal_or_greater_power_of_two"]], "equal_or_greater_power_of_two (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.equal_or_greater_power_of_two"]], "equal_or_lesser_assignable (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.equal_or_lesser_assignable"]], "equal_or_lesser_assignable (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.equal_or_lesser_assignable"]], "equal_or_lesser_assignable (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.equal_or_lesser_assignable"]], "equal_or_lesser_power_of_two (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.equal_or_lesser_power_of_two"]], "equal_or_lesser_power_of_two (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.equal_or_lesser_power_of_two"]], "equal_or_lesser_power_of_two (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.equal_or_lesser_power_of_two"]], "exponent (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.exponent"]], "exponent (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.exponent"]], "exponent (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.exponent"]], "flag_count (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.flag_count"]], "flag_count (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.flag_count"]], "flag_count (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.flag_count"]], "from_clock_string() (abjad.duration.duration static method)": [[32, "abjad.duration.Duration.from_clock_string"]], "from_clock_string() (abjad.duration.multiplier static method)": [[32, "abjad.duration.Multiplier.from_clock_string"]], "from_clock_string() (abjad.duration.offset static method)": [[32, "abjad.duration.Offset.from_clock_string"]], "from_decimal() (abjad.duration.duration class method)": [[32, "abjad.duration.Duration.from_decimal"]], "from_decimal() (abjad.duration.multiplier class method)": [[32, "abjad.duration.Multiplier.from_decimal"]], "from_decimal() (abjad.duration.nonreducedfraction class method)": [[32, "abjad.duration.NonreducedFraction.from_decimal"]], "from_decimal() (abjad.duration.offset class method)": [[32, "abjad.duration.Offset.from_decimal"]], "from_dot_count() (abjad.duration.multiplier static method)": [[32, "abjad.duration.Multiplier.from_dot_count"]], "from_float() (abjad.duration.duration class method)": [[32, "abjad.duration.Duration.from_float"]], "from_float() (abjad.duration.multiplier class method)": [[32, "abjad.duration.Multiplier.from_float"]], "from_float() (abjad.duration.nonreducedfraction class method)": [[32, "abjad.duration.NonreducedFraction.from_float"]], "from_float() (abjad.duration.offset class method)": [[32, "abjad.duration.Offset.from_float"]], "from_lilypond_duration_string() (abjad.duration.duration static method)": [[32, "abjad.duration.Duration.from_lilypond_duration_string"]], "from_lilypond_duration_string() (abjad.duration.multiplier static method)": [[32, "abjad.duration.Multiplier.from_lilypond_duration_string"]], "from_lilypond_duration_string() (abjad.duration.offset static method)": [[32, "abjad.duration.Offset.from_lilypond_duration_string"]], "imag (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.imag"]], "imag (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.imag"]], "imag (abjad.duration.nonreducedfraction attribute)": [[32, "abjad.duration.NonreducedFraction.imag"]], "imag (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.imag"]], "implied_prolation (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.implied_prolation"]], "implied_prolation (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.implied_prolation"]], "implied_prolation (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.implied_prolation"]], "is_assignable (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.is_assignable"]], "is_assignable (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.is_assignable"]], "is_assignable (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.is_assignable"]], "is_dyadic_rational (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.is_dyadic_rational"]], "is_dyadic_rational (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.is_dyadic_rational"]], "is_dyadic_rational (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.is_dyadic_rational"]], "is_token() (abjad.duration.duration static method)": [[32, "abjad.duration.Duration.is_token"]], "is_token() (abjad.duration.multiplier static method)": [[32, "abjad.duration.Multiplier.is_token"]], "is_token() (abjad.duration.offset static method)": [[32, "abjad.duration.Offset.is_token"]], "lilypond_duration_string (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.lilypond_duration_string"]], "lilypond_duration_string (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.lilypond_duration_string"]], "lilypond_duration_string (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.lilypond_duration_string"]], "limit_denominator() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.limit_denominator"]], "limit_denominator() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.limit_denominator"]], "limit_denominator() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.limit_denominator"]], "limit_denominator() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.limit_denominator"]], "multiply() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.multiply"]], "multiply_with_cross_cancelation() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.multiply_with_cross_cancelation"]], "multiply_without_reducing() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.multiply_without_reducing"]], "normalized() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.normalized"]], "numerator (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.numerator"]], "numerator (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.numerator"]], "numerator (abjad.duration.nonreducedfraction attribute)": [[32, "abjad.duration.NonreducedFraction.numerator"]], "numerator (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.numerator"]], "pair (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.pair"]], "pair (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.pair"]], "pair (abjad.duration.nonreducedfraction attribute)": [[32, "abjad.duration.NonreducedFraction.pair"]], "pair (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.pair"]], "prolation_string (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.prolation_string"]], "prolation_string (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.prolation_string"]], "prolation_string (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.prolation_string"]], "real (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.real"]], "real (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.real"]], "real (abjad.duration.nonreducedfraction attribute)": [[32, "abjad.duration.NonreducedFraction.real"]], "real (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.real"]], "reciprocal (abjad.duration.duration attribute)": [[32, "abjad.duration.Duration.reciprocal"]], "reciprocal (abjad.duration.multiplier attribute)": [[32, "abjad.duration.Multiplier.reciprocal"]], "reciprocal (abjad.duration.offset attribute)": [[32, "abjad.duration.Offset.reciprocal"]], "reduce() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.reduce"]], "to_clock_string() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.to_clock_string"]], "to_clock_string() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.to_clock_string"]], "to_clock_string() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.to_clock_string"]], "with_denominator() (abjad.duration.duration method)": [[32, "abjad.duration.Duration.with_denominator"]], "with_denominator() (abjad.duration.multiplier method)": [[32, "abjad.duration.Multiplier.with_denominator"]], "with_denominator() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.with_denominator"]], "with_denominator() (abjad.duration.offset method)": [[32, "abjad.duration.Offset.with_denominator"]], "with_multiple_of_denominator() (abjad.duration.nonreducedfraction method)": [[32, "abjad.duration.NonreducedFraction.with_multiple_of_denominator"]], "dynamic (class in abjad.dynamic)": [[33, "abjad.dynamic.Dynamic"]], "__eq__() (abjad.dynamic.dynamic method)": [[33, "abjad.dynamic.Dynamic.__eq__"]], "__hash__() (abjad.dynamic.dynamic method)": [[33, "abjad.dynamic.Dynamic.__hash__"]], "__post_init__() (abjad.dynamic.dynamic method)": [[33, "abjad.dynamic.Dynamic.__post_init__"]], "__repr__() (abjad.dynamic.dynamic method)": [[33, "abjad.dynamic.Dynamic.__repr__"]], "abjad.dynamic": [[33, "module-abjad.dynamic"]], "composite_dynamic_name_to_steady_state_dynamic_name() (abjad.dynamic.dynamic static method)": [[33, "abjad.dynamic.Dynamic.composite_dynamic_name_to_steady_state_dynamic_name"]], "dynamic_name_to_dynamic_ordinal() (abjad.dynamic.dynamic static method)": [[33, "abjad.dynamic.Dynamic.dynamic_name_to_dynamic_ordinal"]], "dynamic_ordinal_to_dynamic_name() (abjad.dynamic.dynamic static method)": [[33, "abjad.dynamic.Dynamic.dynamic_ordinal_to_dynamic_name"]], "effort (abjad.dynamic.dynamic attribute)": [[33, "abjad.dynamic.Dynamic.effort"]], "is_dynamic_name() (abjad.dynamic.dynamic static method)": [[33, "abjad.dynamic.Dynamic.is_dynamic_name"]], "sforzando (abjad.dynamic.dynamic attribute)": [[33, "abjad.dynamic.Dynamic.sforzando"]], "abjad.enumerate": [[34, "module-abjad.enumerate"]], "outer_product() (in module abjad.enumerate)": [[34, "abjad.enumerate.outer_product"]], "yield_combinations() (in module abjad.enumerate)": [[34, "abjad.enumerate.yield_combinations"]], "yield_pairs() (in module abjad.enumerate)": [[34, "abjad.enumerate.yield_pairs"]], "yield_partitions() (in module abjad.enumerate)": [[34, "abjad.enumerate.yield_partitions"]], "yield_permutations() (in module abjad.enumerate)": [[34, "abjad.enumerate.yield_permutations"]], "yield_set_partitions() (in module abjad.enumerate)": [[34, "abjad.enumerate.yield_set_partitions"]], "yield_subsequences() (in module abjad.enumerate)": [[34, "abjad.enumerate.yield_subsequences"]], "center (abjad.enums.vertical attribute)": [[35, "abjad.enums.Vertical.CENTER"]], "comparison (class in abjad.enums)": [[35, "abjad.enums.Comparison"]], "down (abjad.enums.vertical attribute)": [[35, "abjad.enums.Vertical.DOWN"]], "exact (abjad.enums.comparison attribute)": [[35, "abjad.enums.Comparison.EXACT"]], "horizontal (class in abjad.enums)": [[35, "abjad.enums.Horizontal"]], "left (abjad.enums.horizontal attribute)": [[35, "abjad.enums.Horizontal.LEFT"]], "less (abjad.enums.comparison attribute)": [[35, "abjad.enums.Comparison.LESS"]], "middle (abjad.enums.horizontal attribute)": [[35, "abjad.enums.Horizontal.MIDDLE"]], "more (abjad.enums.comparison attribute)": [[35, "abjad.enums.Comparison.MORE"]], "right (abjad.enums.horizontal attribute)": [[35, "abjad.enums.Horizontal.RIGHT"]], "up (abjad.enums.vertical attribute)": [[35, "abjad.enums.Vertical.UP"]], "vertical (class in abjad.enums)": [[35, "abjad.enums.Vertical"]], "__contains__() (abjad.enums.comparison class method)": [[35, "abjad.enums.Comparison.__contains__"]], "__contains__() (abjad.enums.horizontal class method)": [[35, "abjad.enums.Horizontal.__contains__"]], "__contains__() (abjad.enums.vertical class method)": [[35, "abjad.enums.Vertical.__contains__"]], "__getitem__() (abjad.enums.comparison class method)": [[35, "abjad.enums.Comparison.__getitem__"]], "__getitem__() (abjad.enums.horizontal class method)": [[35, "abjad.enums.Horizontal.__getitem__"]], "__getitem__() (abjad.enums.vertical class method)": [[35, "abjad.enums.Vertical.__getitem__"]], "__iter__() (abjad.enums.comparison class method)": [[35, "abjad.enums.Comparison.__iter__"]], "__iter__() (abjad.enums.horizontal class method)": [[35, "abjad.enums.Horizontal.__iter__"]], "__iter__() (abjad.enums.vertical class method)": [[35, "abjad.enums.Vertical.__iter__"]], "__len__() (abjad.enums.comparison class method)": [[35, "abjad.enums.Comparison.__len__"]], "__len__() (abjad.enums.horizontal class method)": [[35, "abjad.enums.Horizontal.__len__"]], "__len__() (abjad.enums.vertical class method)": [[35, "abjad.enums.Vertical.__len__"]], "abjad.enums": [[35, "module-abjad.enums"]], "assignabilityerror": [[36, "abjad.exceptions.AssignabilityError"]], "imprecisemetronomemarkerror": [[36, "abjad.exceptions.ImpreciseMetronomeMarkError"]], "lilypondparsererror": [[36, "abjad.exceptions.LilyPondParserError"]], "missingmetronomemarkerror": [[36, "abjad.exceptions.MissingMetronomeMarkError"]], "parentageerror": [[36, "abjad.exceptions.ParentageError"]], "persistentindicatorerror": [[36, "abjad.exceptions.PersistentIndicatorError"]], "schemeparserfinishederror": [[36, "abjad.exceptions.SchemeParserFinishedError"]], "unboundedtimeintervalerror": [[36, "abjad.exceptions.UnboundedTimeIntervalError"]], "wellformednesserror": [[36, "abjad.exceptions.WellformednessError"]], "abjad.exceptions": [[36, "module-abjad.exceptions"]], "abjad.ext": [[37, "module-abjad.ext"]], "hiddendoctestdirective (class in abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.HiddenDoctestDirective"]], "lilypondextension (class in abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.LilyPondExtension"]], "shelldirective (class in abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.ShellDirective"]], "thumbnaildirective (class in abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.ThumbnailDirective"]], "abjad.ext.sphinx": [[38, "module-abjad.ext.sphinx"]], "add_option() (abjad.ext.sphinx.lilypondextension class method)": [[38, "abjad.ext.sphinx.LilyPondExtension.add_option"]], "depart_block_text() (abjad.ext.sphinx.lilypondextension static method)": [[38, "abjad.ext.sphinx.LilyPondExtension.depart_block_text"]], "embed_images() (in module abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.embed_images"]], "install_lightbox_static_files() (in module abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.install_lightbox_static_files"]], "on_builder_inited() (in module abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.on_builder_inited"]], "on_html_collect_pages() (in module abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.on_html_collect_pages"]], "run() (abjad.ext.sphinx.hiddendoctestdirective method)": [[38, "abjad.ext.sphinx.HiddenDoctestDirective.run"]], "run() (abjad.ext.sphinx.shelldirective method)": [[38, "abjad.ext.sphinx.ShellDirective.run"]], "run() (abjad.ext.sphinx.thumbnaildirective method)": [[38, "abjad.ext.sphinx.ThumbnailDirective.run"]], "setup() (in module abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.setup"]], "setup_console() (abjad.ext.sphinx.lilypondextension class method)": [[38, "abjad.ext.sphinx.LilyPondExtension.setup_console"]], "setup_sphinx() (abjad.ext.sphinx.lilypondextension class method)": [[38, "abjad.ext.sphinx.LilyPondExtension.setup_sphinx"]], "teardown_console() (abjad.ext.sphinx.lilypondextension class method)": [[38, "abjad.ext.sphinx.LilyPondExtension.teardown_console"]], "thumbnail_block (class in abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.thumbnail_block"]], "to_docutils() (abjad.ext.sphinx.lilypondextension method)": [[38, "abjad.ext.sphinx.LilyPondExtension.to_docutils"]], "visit_block_html() (abjad.ext.sphinx.lilypondextension static method)": [[38, "abjad.ext.sphinx.LilyPondExtension.visit_block_html"]], "visit_block_latex() (abjad.ext.sphinx.lilypondextension static method)": [[38, "abjad.ext.sphinx.LilyPondExtension.visit_block_latex"]], "visit_block_text() (abjad.ext.sphinx.lilypondextension static method)": [[38, "abjad.ext.sphinx.LilyPondExtension.visit_block_text"]], "visit_thumbnail_block_html() (in module abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.visit_thumbnail_block_html"]], "visit_thumbnail_block_latex() (in module abjad.ext.sphinx)": [[38, "abjad.ext.sphinx.visit_thumbnail_block_latex"]], "abjad.format": [[39, "module-abjad.format"]], "format_component() (in module abjad.format)": [[39, "abjad.format.format_component"]], "remove_site_comments() (in module abjad.format)": [[39, "abjad.format.remove_site_comments"]], "lineage (class in abjad.get)": [[40, "abjad.get.Lineage"]], "__class_getitem__() (abjad.get.lineage class method)": [[40, "abjad.get.Lineage.__class_getitem__"]], "__contains__() (abjad.get.lineage method)": [[40, "abjad.get.Lineage.__contains__"]], "__getitem__() (abjad.get.lineage method)": [[40, "abjad.get.Lineage.__getitem__"]], "__iter__() (abjad.get.lineage method)": [[40, "abjad.get.Lineage.__iter__"]], "__len__() (abjad.get.lineage method)": [[40, "abjad.get.Lineage.__len__"]], "__reversed__() (abjad.get.lineage method)": [[40, "abjad.get.Lineage.__reversed__"]], "abjad.get": [[40, "module-abjad.get"]], "after_grace_container() (in module abjad.get)": [[40, "abjad.get.after_grace_container"]], "annotation() (in module abjad.get)": [[40, "abjad.get.annotation"]], "annotation_wrappers() (in module abjad.get)": [[40, "abjad.get.annotation_wrappers"]], "bar_line_crossing() (in module abjad.get)": [[40, "abjad.get.bar_line_crossing"]], "before_grace_container() (in module abjad.get)": [[40, "abjad.get.before_grace_container"]], "component (abjad.get.lineage attribute)": [[40, "abjad.get.Lineage.component"]], "components (abjad.get.lineage attribute)": [[40, "abjad.get.Lineage.components"]], "contents() (in module abjad.get)": [[40, "abjad.get.contents"]], "count() (abjad.get.lineage method)": [[40, "abjad.get.Lineage.count"]], "descendants() (in module abjad.get)": [[40, "abjad.get.descendants"]], "duration() (in module abjad.get)": [[40, "abjad.get.duration"]], "effective() (in module abjad.get)": [[40, "abjad.get.effective"]], "effective_staff() (in module abjad.get)": [[40, "abjad.get.effective_staff"]], "effective_wrapper() (in module abjad.get)": [[40, "abjad.get.effective_wrapper"]], "grace() (in module abjad.get)": [[40, "abjad.get.grace"]], "has_effective_indicator() (in module abjad.get)": [[40, "abjad.get.has_effective_indicator"]], "has_indicator() (in module abjad.get)": [[40, "abjad.get.has_indicator"]], "index() (abjad.get.lineage method)": [[40, "abjad.get.Lineage.index"]], "indicator() (in module abjad.get)": [[40, "abjad.get.indicator"]], "indicators() (in module abjad.get)": [[40, "abjad.get.indicators"]], "leaf() (in module abjad.get)": [[40, "abjad.get.leaf"]], "lineage() (in module abjad.get)": [[40, "abjad.get.lineage"]], "logical_tie() (in module abjad.get)": [[40, "abjad.get.logical_tie"]], "markup() (in module abjad.get)": [[40, "abjad.get.markup"]], "measure_number() (in module abjad.get)": [[40, "abjad.get.measure_number"]], "parentage() (in module abjad.get)": [[40, "abjad.get.parentage"]], "pitches() (in module abjad.get)": [[40, "abjad.get.pitches"]], "sounding_pitch() (in module abjad.get)": [[40, "abjad.get.sounding_pitch"]], "sounding_pitches() (in module abjad.get)": [[40, "abjad.get.sounding_pitches"]], "sustained() (in module abjad.get)": [[40, "abjad.get.sustained"]], "timespan() (in module abjad.get)": [[40, "abjad.get.timespan"]], "wrapper() (in module abjad.get)": [[40, "abjad.get.wrapper"]], "wrappers() (in module abjad.get)": [[40, "abjad.get.wrappers"]], "abjad.grace_corner_cases": [[41, "module-abjad.grace_corner_cases"]], "grace_corner_cases() (in module abjad.grace_corner_cases)": [[41, "abjad.grace_corner_cases.grace_corner_cases"]], "abjad.illustrators": [[42, "module-abjad.illustrators"]], "attach_markup_struts() (in module abjad.illustrators)": [[42, "abjad.illustrators.attach_markup_struts"]], "illustrate() (in module abjad.illustrators)": [[42, "abjad.illustrators.illustrate"]], "lilypond() (in module abjad.illustrators)": [[42, "abjad.illustrators.lilypond"]], "make_piano_score() (in module abjad.illustrators)": [[42, "abjad.illustrators.make_piano_score"]], "selection() (in module abjad.illustrators)": [[42, "abjad.illustrators.selection"]], "selection_to_score_markup_string() (in module abjad.illustrators)": [[42, "abjad.illustrators.selection_to_score_markup_string"]], "abjad": [[43, "module-abjad"]], "arpeggio (class in abjad.indicators)": [[44, "abjad.indicators.Arpeggio"]], "articulation (class in abjad.indicators)": [[44, "abjad.indicators.Articulation"]], "barline (class in abjad.indicators)": [[44, "abjad.indicators.BarLine"]], "beamcount (class in abjad.indicators)": [[44, "abjad.indicators.BeamCount"]], "bendafter (class in abjad.indicators)": [[44, "abjad.indicators.BendAfter"]], "breathmark (class in abjad.indicators)": [[44, "abjad.indicators.BreathMark"]], "clef (class in abjad.indicators)": [[44, "abjad.indicators.Clef"]], "colorfingering (class in abjad.indicators)": [[44, "abjad.indicators.ColorFingering"]], "fermata (class in abjad.indicators)": [[44, "abjad.indicators.Fermata"]], "glissando (class in abjad.indicators)": [[44, "abjad.indicators.Glissando"]], "instrumentname (class in abjad.indicators)": [[44, "abjad.indicators.InstrumentName"]], "keycluster (class in abjad.indicators)": [[44, "abjad.indicators.KeyCluster"]], "keysignature (class in abjad.indicators)": [[44, "abjad.indicators.KeySignature"]], "laissezvibrer (class in abjad.indicators)": [[44, "abjad.indicators.LaissezVibrer"]], "lilypondliteral (class in abjad.indicators)": [[44, "abjad.indicators.LilyPondLiteral"]], "markup (class in abjad.indicators)": [[44, "abjad.indicators.Markup"]], "metronomemark (class in abjad.indicators)": [[44, "abjad.indicators.MetronomeMark"]], "mode (class in abjad.indicators)": [[44, "abjad.indicators.Mode"]], "ottava (class in abjad.indicators)": [[44, "abjad.indicators.Ottava"]], "rehearsalmark (class in abjad.indicators)": [[44, "abjad.indicators.RehearsalMark"]], "repeat (class in abjad.indicators)": [[44, "abjad.indicators.Repeat"]], "repeattie (class in abjad.indicators)": [[44, "abjad.indicators.RepeatTie"]], "shortinstrumentname (class in abjad.indicators)": [[44, "abjad.indicators.ShortInstrumentName"]], "staffchange (class in abjad.indicators)": [[44, "abjad.indicators.StaffChange"]], "startbeam (class in abjad.indicators)": [[44, "abjad.indicators.StartBeam"]], "startgroup (class in abjad.indicators)": [[44, "abjad.indicators.StartGroup"]], "starthairpin (class in abjad.indicators)": [[44, "abjad.indicators.StartHairpin"]], "startphrasingslur (class in abjad.indicators)": [[44, "abjad.indicators.StartPhrasingSlur"]], "startpianopedal (class in abjad.indicators)": [[44, "abjad.indicators.StartPianoPedal"]], "startslur (class in abjad.indicators)": [[44, "abjad.indicators.StartSlur"]], "starttextspan (class in abjad.indicators)": [[44, "abjad.indicators.StartTextSpan"]], "starttrillspan (class in abjad.indicators)": [[44, "abjad.indicators.StartTrillSpan"]], "stemtremolo (class in abjad.indicators)": [[44, "abjad.indicators.StemTremolo"]], "stopbeam (class in abjad.indicators)": [[44, "abjad.indicators.StopBeam"]], "stopgroup (class in abjad.indicators)": [[44, "abjad.indicators.StopGroup"]], "stophairpin (class in abjad.indicators)": [[44, "abjad.indicators.StopHairpin"]], "stopphrasingslur (class in abjad.indicators)": [[44, "abjad.indicators.StopPhrasingSlur"]], "stoppianopedal (class in abjad.indicators)": [[44, "abjad.indicators.StopPianoPedal"]], "stopslur (class in abjad.indicators)": [[44, "abjad.indicators.StopSlur"]], "stoptextspan (class in abjad.indicators)": [[44, "abjad.indicators.StopTextSpan"]], "stoptrillspan (class in abjad.indicators)": [[44, "abjad.indicators.StopTrillSpan"]], "tie (class in abjad.indicators)": [[44, "abjad.indicators.Tie"]], "timesignature (class in abjad.indicators)": [[44, "abjad.indicators.TimeSignature"]], "__copy__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__copy__"]], "__delattr__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__delattr__"]], "__delattr__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__delattr__"]], "__delattr__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__delattr__"]], "__delattr__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__delattr__"]], "__delattr__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__delattr__"]], "__delattr__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__delattr__"]], "__delattr__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__delattr__"]], "__delattr__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__delattr__"]], "__delattr__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__delattr__"]], "__delattr__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__delattr__"]], "__delattr__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__delattr__"]], "__delattr__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__delattr__"]], "__delattr__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__delattr__"]], "__delattr__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__delattr__"]], "__delattr__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__delattr__"]], "__delattr__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__delattr__"]], "__delattr__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__delattr__"]], "__delattr__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__delattr__"]], "__delattr__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__delattr__"]], "__delattr__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__delattr__"]], "__delattr__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__delattr__"]], "__delattr__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__delattr__"]], "__delattr__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__delattr__"]], "__delattr__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__delattr__"]], "__delattr__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__delattr__"]], "__delattr__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__delattr__"]], "__delattr__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__delattr__"]], "__delattr__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__delattr__"]], "__delattr__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__delattr__"]], "__delattr__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__delattr__"]], "__delattr__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__delattr__"]], "__delattr__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__delattr__"]], "__delattr__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__delattr__"]], "__delattr__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__delattr__"]], "__delattr__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__delattr__"]], "__delattr__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__delattr__"]], "__delattr__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__delattr__"]], "__delattr__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__delattr__"]], "__delattr__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__delattr__"]], "__delattr__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__delattr__"]], "__delattr__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__delattr__"]], "__eq__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__eq__"]], "__eq__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__eq__"]], "__eq__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__eq__"]], "__eq__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__eq__"]], "__eq__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__eq__"]], "__eq__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__eq__"]], "__eq__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__eq__"]], "__eq__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__eq__"]], "__eq__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__eq__"]], "__eq__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__eq__"]], "__eq__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__eq__"]], "__eq__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__eq__"]], "__eq__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__eq__"]], "__eq__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__eq__"]], "__eq__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__eq__"]], "__eq__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__eq__"]], "__eq__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__eq__"]], "__eq__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__eq__"]], "__eq__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__eq__"]], "__eq__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__eq__"]], "__eq__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__eq__"]], "__eq__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__eq__"]], "__eq__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__eq__"]], "__eq__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__eq__"]], "__eq__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__eq__"]], "__eq__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__eq__"]], "__eq__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__eq__"]], "__eq__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__eq__"]], "__eq__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__eq__"]], "__eq__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__eq__"]], "__eq__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__eq__"]], "__eq__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__eq__"]], "__eq__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__eq__"]], "__eq__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__eq__"]], "__eq__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__eq__"]], "__eq__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__eq__"]], "__eq__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__eq__"]], "__eq__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__eq__"]], "__eq__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__eq__"]], "__eq__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__eq__"]], "__eq__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__eq__"]], "__eq__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__eq__"]], "__eq__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__eq__"]], "__ge__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__ge__"]], "__ge__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__ge__"]], "__ge__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__ge__"]], "__ge__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__ge__"]], "__ge__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__ge__"]], "__ge__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__ge__"]], "__ge__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__ge__"]], "__ge__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__ge__"]], "__ge__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__ge__"]], "__ge__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__ge__"]], "__ge__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__ge__"]], "__ge__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__ge__"]], "__ge__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__ge__"]], "__ge__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__ge__"]], "__ge__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__ge__"]], "__ge__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__ge__"]], "__ge__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__ge__"]], "__ge__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__ge__"]], "__ge__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__ge__"]], "__ge__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__ge__"]], "__ge__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__ge__"]], "__ge__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__ge__"]], "__ge__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__ge__"]], "__ge__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__ge__"]], "__ge__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__ge__"]], "__ge__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__ge__"]], "__ge__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__ge__"]], "__ge__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__ge__"]], "__ge__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__ge__"]], "__ge__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__ge__"]], "__ge__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__ge__"]], "__ge__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__ge__"]], "__ge__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__ge__"]], "__ge__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__ge__"]], "__ge__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__ge__"]], "__ge__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__ge__"]], "__ge__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__ge__"]], "__ge__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__ge__"]], "__ge__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__ge__"]], "__ge__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__ge__"]], "__ge__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__ge__"]], "__ge__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__ge__"]], "__ge__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__ge__"]], "__gt__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__gt__"]], "__gt__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__gt__"]], "__gt__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__gt__"]], "__gt__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__gt__"]], "__gt__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__gt__"]], "__gt__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__gt__"]], "__gt__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__gt__"]], "__gt__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__gt__"]], "__gt__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__gt__"]], "__gt__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__gt__"]], "__gt__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__gt__"]], "__gt__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__gt__"]], "__gt__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__gt__"]], "__gt__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__gt__"]], "__gt__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__gt__"]], "__gt__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__gt__"]], "__gt__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__gt__"]], "__gt__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__gt__"]], "__gt__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__gt__"]], "__gt__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__gt__"]], "__gt__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__gt__"]], "__gt__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__gt__"]], "__gt__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__gt__"]], "__gt__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__gt__"]], "__gt__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__gt__"]], "__gt__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__gt__"]], "__gt__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__gt__"]], "__gt__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__gt__"]], "__gt__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__gt__"]], "__gt__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__gt__"]], "__gt__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__gt__"]], "__gt__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__gt__"]], "__gt__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__gt__"]], "__gt__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__gt__"]], "__gt__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__gt__"]], "__gt__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__gt__"]], "__gt__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__gt__"]], "__gt__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__gt__"]], "__gt__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__gt__"]], "__gt__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__gt__"]], "__gt__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__gt__"]], "__gt__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__gt__"]], "__gt__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__gt__"]], "__hash__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__hash__"]], "__hash__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__hash__"]], "__hash__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__hash__"]], "__hash__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__hash__"]], "__hash__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__hash__"]], "__hash__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__hash__"]], "__hash__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__hash__"]], "__hash__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__hash__"]], "__hash__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__hash__"]], "__hash__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__hash__"]], "__hash__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__hash__"]], "__hash__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__hash__"]], "__hash__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__hash__"]], "__hash__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__hash__"]], "__hash__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__hash__"]], "__hash__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__hash__"]], "__hash__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__hash__"]], "__hash__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__hash__"]], "__hash__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__hash__"]], "__hash__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__hash__"]], "__hash__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__hash__"]], "__hash__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__hash__"]], "__hash__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__hash__"]], "__hash__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__hash__"]], "__hash__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__hash__"]], "__hash__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__hash__"]], "__hash__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__hash__"]], "__hash__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__hash__"]], "__hash__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__hash__"]], "__hash__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__hash__"]], "__hash__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__hash__"]], "__hash__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__hash__"]], "__hash__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__hash__"]], "__hash__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__hash__"]], "__hash__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__hash__"]], "__hash__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__hash__"]], "__hash__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__hash__"]], "__hash__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__hash__"]], "__hash__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__hash__"]], "__hash__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__hash__"]], "__hash__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__hash__"]], "__hash__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__hash__"]], "__hash__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__hash__"]], "__le__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__le__"]], "__le__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__le__"]], "__le__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__le__"]], "__le__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__le__"]], "__le__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__le__"]], "__le__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__le__"]], "__le__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__le__"]], "__le__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__le__"]], "__le__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__le__"]], "__le__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__le__"]], "__le__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__le__"]], "__le__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__le__"]], "__le__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__le__"]], "__le__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__le__"]], "__le__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__le__"]], "__le__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__le__"]], "__le__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__le__"]], "__le__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__le__"]], "__le__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__le__"]], "__le__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__le__"]], "__le__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__le__"]], "__le__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__le__"]], "__le__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__le__"]], "__le__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__le__"]], "__le__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__le__"]], "__le__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__le__"]], "__le__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__le__"]], "__le__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__le__"]], "__le__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__le__"]], "__le__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__le__"]], "__le__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__le__"]], "__le__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__le__"]], "__le__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__le__"]], "__le__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__le__"]], "__le__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__le__"]], "__le__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__le__"]], "__le__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__le__"]], "__le__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__le__"]], "__le__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__le__"]], "__le__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__le__"]], "__le__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__le__"]], "__le__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__le__"]], "__le__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__le__"]], "__lt__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__lt__"]], "__lt__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__lt__"]], "__lt__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__lt__"]], "__lt__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__lt__"]], "__lt__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__lt__"]], "__lt__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__lt__"]], "__lt__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__lt__"]], "__lt__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__lt__"]], "__lt__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__lt__"]], "__lt__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__lt__"]], "__lt__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__lt__"]], "__lt__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__lt__"]], "__lt__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__lt__"]], "__lt__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__lt__"]], "__lt__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__lt__"]], "__lt__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__lt__"]], "__lt__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__lt__"]], "__lt__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__lt__"]], "__lt__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__lt__"]], "__lt__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__lt__"]], "__lt__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__lt__"]], "__lt__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__lt__"]], "__lt__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__lt__"]], "__lt__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__lt__"]], "__lt__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__lt__"]], "__lt__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__lt__"]], "__lt__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__lt__"]], "__lt__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__lt__"]], "__lt__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__lt__"]], "__lt__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__lt__"]], "__lt__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__lt__"]], "__lt__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__lt__"]], "__lt__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__lt__"]], "__lt__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__lt__"]], "__lt__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__lt__"]], "__lt__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__lt__"]], "__lt__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__lt__"]], "__lt__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__lt__"]], "__lt__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__lt__"]], "__lt__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__lt__"]], "__lt__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__lt__"]], "__lt__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__lt__"]], "__lt__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__lt__"]], "__post_init__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__post_init__"]], "__post_init__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__post_init__"]], "__post_init__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__post_init__"]], "__post_init__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__post_init__"]], "__post_init__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__post_init__"]], "__post_init__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__post_init__"]], "__post_init__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__post_init__"]], "__post_init__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__post_init__"]], "__post_init__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__post_init__"]], "__post_init__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__post_init__"]], "__post_init__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__post_init__"]], "__post_init__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__post_init__"]], "__post_init__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__post_init__"]], "__post_init__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__post_init__"]], "__post_init__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__post_init__"]], "__repr__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__repr__"]], "__repr__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__repr__"]], "__repr__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__repr__"]], "__repr__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__repr__"]], "__repr__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__repr__"]], "__repr__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__repr__"]], "__repr__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__repr__"]], "__repr__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__repr__"]], "__repr__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__repr__"]], "__repr__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__repr__"]], "__repr__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__repr__"]], "__repr__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__repr__"]], "__repr__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__repr__"]], "__repr__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__repr__"]], "__repr__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__repr__"]], "__repr__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__repr__"]], "__repr__() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.__repr__"]], "__repr__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__repr__"]], "__repr__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__repr__"]], "__repr__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__repr__"]], "__repr__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__repr__"]], "__repr__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__repr__"]], "__repr__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__repr__"]], "__repr__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__repr__"]], "__repr__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__repr__"]], "__repr__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__repr__"]], "__repr__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__repr__"]], "__repr__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__repr__"]], "__repr__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__repr__"]], "__repr__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__repr__"]], "__repr__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__repr__"]], "__repr__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__repr__"]], "__repr__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__repr__"]], "__repr__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__repr__"]], "__repr__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__repr__"]], "__repr__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__repr__"]], "__repr__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__repr__"]], "__repr__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__repr__"]], "__repr__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__repr__"]], "__repr__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__repr__"]], "__repr__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__repr__"]], "__repr__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__repr__"]], "__repr__() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.__repr__"]], "__setattr__() (abjad.indicators.arpeggio method)": [[44, "abjad.indicators.Arpeggio.__setattr__"]], "__setattr__() (abjad.indicators.articulation method)": [[44, "abjad.indicators.Articulation.__setattr__"]], "__setattr__() (abjad.indicators.barline method)": [[44, "abjad.indicators.BarLine.__setattr__"]], "__setattr__() (abjad.indicators.beamcount method)": [[44, "abjad.indicators.BeamCount.__setattr__"]], "__setattr__() (abjad.indicators.bendafter method)": [[44, "abjad.indicators.BendAfter.__setattr__"]], "__setattr__() (abjad.indicators.breathmark method)": [[44, "abjad.indicators.BreathMark.__setattr__"]], "__setattr__() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.__setattr__"]], "__setattr__() (abjad.indicators.colorfingering method)": [[44, "abjad.indicators.ColorFingering.__setattr__"]], "__setattr__() (abjad.indicators.fermata method)": [[44, "abjad.indicators.Fermata.__setattr__"]], "__setattr__() (abjad.indicators.glissando method)": [[44, "abjad.indicators.Glissando.__setattr__"]], "__setattr__() (abjad.indicators.instrumentname method)": [[44, "abjad.indicators.InstrumentName.__setattr__"]], "__setattr__() (abjad.indicators.keycluster method)": [[44, "abjad.indicators.KeyCluster.__setattr__"]], "__setattr__() (abjad.indicators.keysignature method)": [[44, "abjad.indicators.KeySignature.__setattr__"]], "__setattr__() (abjad.indicators.laissezvibrer method)": [[44, "abjad.indicators.LaissezVibrer.__setattr__"]], "__setattr__() (abjad.indicators.lilypondliteral method)": [[44, "abjad.indicators.LilyPondLiteral.__setattr__"]], "__setattr__() (abjad.indicators.markup method)": [[44, "abjad.indicators.Markup.__setattr__"]], "__setattr__() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.__setattr__"]], "__setattr__() (abjad.indicators.ottava method)": [[44, "abjad.indicators.Ottava.__setattr__"]], "__setattr__() (abjad.indicators.rehearsalmark method)": [[44, "abjad.indicators.RehearsalMark.__setattr__"]], "__setattr__() (abjad.indicators.repeat method)": [[44, "abjad.indicators.Repeat.__setattr__"]], "__setattr__() (abjad.indicators.repeattie method)": [[44, "abjad.indicators.RepeatTie.__setattr__"]], "__setattr__() (abjad.indicators.shortinstrumentname method)": [[44, "abjad.indicators.ShortInstrumentName.__setattr__"]], "__setattr__() (abjad.indicators.staffchange method)": [[44, "abjad.indicators.StaffChange.__setattr__"]], "__setattr__() (abjad.indicators.startbeam method)": [[44, "abjad.indicators.StartBeam.__setattr__"]], "__setattr__() (abjad.indicators.startgroup method)": [[44, "abjad.indicators.StartGroup.__setattr__"]], "__setattr__() (abjad.indicators.starthairpin method)": [[44, "abjad.indicators.StartHairpin.__setattr__"]], "__setattr__() (abjad.indicators.startphrasingslur method)": [[44, "abjad.indicators.StartPhrasingSlur.__setattr__"]], "__setattr__() (abjad.indicators.startpianopedal method)": [[44, "abjad.indicators.StartPianoPedal.__setattr__"]], "__setattr__() (abjad.indicators.startslur method)": [[44, "abjad.indicators.StartSlur.__setattr__"]], "__setattr__() (abjad.indicators.starttextspan method)": [[44, "abjad.indicators.StartTextSpan.__setattr__"]], "__setattr__() (abjad.indicators.starttrillspan method)": [[44, "abjad.indicators.StartTrillSpan.__setattr__"]], "__setattr__() (abjad.indicators.stemtremolo method)": [[44, "abjad.indicators.StemTremolo.__setattr__"]], "__setattr__() (abjad.indicators.stopbeam method)": [[44, "abjad.indicators.StopBeam.__setattr__"]], "__setattr__() (abjad.indicators.stopgroup method)": [[44, "abjad.indicators.StopGroup.__setattr__"]], "__setattr__() (abjad.indicators.stophairpin method)": [[44, "abjad.indicators.StopHairpin.__setattr__"]], "__setattr__() (abjad.indicators.stopphrasingslur method)": [[44, "abjad.indicators.StopPhrasingSlur.__setattr__"]], "__setattr__() (abjad.indicators.stoppianopedal method)": [[44, "abjad.indicators.StopPianoPedal.__setattr__"]], "__setattr__() (abjad.indicators.stopslur method)": [[44, "abjad.indicators.StopSlur.__setattr__"]], "__setattr__() (abjad.indicators.stoptextspan method)": [[44, "abjad.indicators.StopTextSpan.__setattr__"]], "__setattr__() (abjad.indicators.stoptrillspan method)": [[44, "abjad.indicators.StopTrillSpan.__setattr__"]], "__setattr__() (abjad.indicators.tie method)": [[44, "abjad.indicators.Tie.__setattr__"]], "abjad.indicators": [[44, "module-abjad.indicators"]], "context (abjad.indicators.barline attribute)": [[44, "abjad.indicators.BarLine.context"]], "denominator (abjad.indicators.timesignature attribute)": [[44, "abjad.indicators.TimeSignature.denominator"]], "duration (abjad.indicators.timesignature attribute)": [[44, "abjad.indicators.TimeSignature.duration"]], "duration_to_milliseconds() (abjad.indicators.metronomemark method)": [[44, "abjad.indicators.MetronomeMark.duration_to_milliseconds"]], "from_pitches() (abjad.indicators.clef class method)": [[44, "abjad.indicators.Clef.from_pitches"]], "from_string() (abjad.indicators.rehearsalmark static method)": [[44, "abjad.indicators.RehearsalMark.from_string"]], "from_string() (abjad.indicators.timesignature static method)": [[44, "abjad.indicators.TimeSignature.from_string"]], "implied_prolation (abjad.indicators.timesignature attribute)": [[44, "abjad.indicators.TimeSignature.implied_prolation"]], "intervals() (abjad.indicators.mode method)": [[44, "abjad.indicators.Mode.intervals"]], "is_dyadic_rational() (abjad.indicators.timesignature method)": [[44, "abjad.indicators.TimeSignature.is_dyadic_rational"]], "is_imprecise (abjad.indicators.metronomemark attribute)": [[44, "abjad.indicators.MetronomeMark.is_imprecise"]], "is_non_dyadic_rational (abjad.indicators.timesignature attribute)": [[44, "abjad.indicators.TimeSignature.is_non_dyadic_rational"]], "known_shapes (abjad.indicators.starthairpin attribute)": [[44, "abjad.indicators.StartHairpin.known_shapes"]], "make_tempo_equation_markup() (abjad.indicators.metronomemark static method)": [[44, "abjad.indicators.MetronomeMark.make_tempo_equation_markup"]], "markup (abjad.indicators.colorfingering attribute)": [[44, "abjad.indicators.ColorFingering.markup"]], "middle_c_position() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.middle_c_position"]], "name (abjad.indicators.keysignature attribute)": [[44, "abjad.indicators.KeySignature.name"]], "numerator (abjad.indicators.timesignature attribute)": [[44, "abjad.indicators.TimeSignature.numerator"]], "post_event (abjad.indicators.lilypondliteral attribute)": [[44, "abjad.indicators.LilyPondLiteral.post_event"]], "quarters_per_minute (abjad.indicators.metronomemark attribute)": [[44, "abjad.indicators.MetronomeMark.quarters_per_minute"]], "to_pitch() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.to_pitch"]], "to_staff_position() (abjad.indicators.clef method)": [[44, "abjad.indicators.Clef.to_staff_position"]], "accordion (class in abjad.instruments)": [[45, "abjad.instruments.Accordion"]], "altoflute (class in abjad.instruments)": [[45, "abjad.instruments.AltoFlute"]], "altosaxophone (class in abjad.instruments)": [[45, "abjad.instruments.AltoSaxophone"]], "altotrombone (class in abjad.instruments)": [[45, "abjad.instruments.AltoTrombone"]], "altovoice (class in abjad.instruments)": [[45, "abjad.instruments.AltoVoice"]], "baritonesaxophone (class in abjad.instruments)": [[45, "abjad.instruments.BaritoneSaxophone"]], "baritonevoice (class in abjad.instruments)": [[45, "abjad.instruments.BaritoneVoice"]], "bassclarinet (class in abjad.instruments)": [[45, "abjad.instruments.BassClarinet"]], "bassflute (class in abjad.instruments)": [[45, "abjad.instruments.BassFlute"]], "basssaxophone (class in abjad.instruments)": [[45, "abjad.instruments.BassSaxophone"]], "basstrombone (class in abjad.instruments)": [[45, "abjad.instruments.BassTrombone"]], "bassvoice (class in abjad.instruments)": [[45, "abjad.instruments.BassVoice"]], "bassoon (class in abjad.instruments)": [[45, "abjad.instruments.Bassoon"]], "cello (class in abjad.instruments)": [[45, "abjad.instruments.Cello"]], "clarinetina (class in abjad.instruments)": [[45, "abjad.instruments.ClarinetInA"]], "clarinetinbflat (class in abjad.instruments)": [[45, "abjad.instruments.ClarinetInBFlat"]], "clarinetineflat (class in abjad.instruments)": [[45, "abjad.instruments.ClarinetInEFlat"]], "contrabass (class in abjad.instruments)": [[45, "abjad.instruments.Contrabass"]], "contrabassclarinet (class in abjad.instruments)": [[45, "abjad.instruments.ContrabassClarinet"]], "contrabassflute (class in abjad.instruments)": [[45, "abjad.instruments.ContrabassFlute"]], "contrabasssaxophone (class in abjad.instruments)": [[45, "abjad.instruments.ContrabassSaxophone"]], "contrabassoon (class in abjad.instruments)": [[45, "abjad.instruments.Contrabassoon"]], "englishhorn (class in abjad.instruments)": [[45, "abjad.instruments.EnglishHorn"]], "flute (class in abjad.instruments)": [[45, "abjad.instruments.Flute"]], "frenchhorn (class in abjad.instruments)": [[45, "abjad.instruments.FrenchHorn"]], "glockenspiel (class in abjad.instruments)": [[45, "abjad.instruments.Glockenspiel"]], "guitar (class in abjad.instruments)": [[45, "abjad.instruments.Guitar"]], "harp (class in abjad.instruments)": [[45, "abjad.instruments.Harp"]], "harpsichord (class in abjad.instruments)": [[45, "abjad.instruments.Harpsichord"]], "instrument (class in abjad.instruments)": [[45, "abjad.instruments.Instrument"]], "marimba (class in abjad.instruments)": [[45, "abjad.instruments.Marimba"]], "mezzosopranovoice (class in abjad.instruments)": [[45, "abjad.instruments.MezzoSopranoVoice"]], "oboe (class in abjad.instruments)": [[45, "abjad.instruments.Oboe"]], "percussion (class in abjad.instruments)": [[45, "abjad.instruments.Percussion"]], "piano (class in abjad.instruments)": [[45, "abjad.instruments.Piano"]], "piccolo (class in abjad.instruments)": [[45, "abjad.instruments.Piccolo"]], "sopraninosaxophone (class in abjad.instruments)": [[45, "abjad.instruments.SopraninoSaxophone"]], "sopranosaxophone (class in abjad.instruments)": [[45, "abjad.instruments.SopranoSaxophone"]], "sopranovoice (class in abjad.instruments)": [[45, "abjad.instruments.SopranoVoice"]], "stringnumber (class in abjad.instruments)": [[45, "abjad.instruments.StringNumber"]], "tenorsaxophone (class in abjad.instruments)": [[45, "abjad.instruments.TenorSaxophone"]], "tenortrombone (class in abjad.instruments)": [[45, "abjad.instruments.TenorTrombone"]], "tenorvoice (class in abjad.instruments)": [[45, "abjad.instruments.TenorVoice"]], "trumpet (class in abjad.instruments)": [[45, "abjad.instruments.Trumpet"]], "tuba (class in abjad.instruments)": [[45, "abjad.instruments.Tuba"]], "tuning (class in abjad.instruments)": [[45, "abjad.instruments.Tuning"]], "vibraphone (class in abjad.instruments)": [[45, "abjad.instruments.Vibraphone"]], "viola (class in abjad.instruments)": [[45, "abjad.instruments.Viola"]], "violin (class in abjad.instruments)": [[45, "abjad.instruments.Violin"]], "xylophone (class in abjad.instruments)": [[45, "abjad.instruments.Xylophone"]], "__delattr__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__delattr__"]], "__delattr__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__delattr__"]], "__delattr__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__delattr__"]], "__delattr__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__delattr__"]], "__delattr__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__delattr__"]], "__delattr__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__delattr__"]], "__delattr__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__delattr__"]], "__delattr__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__delattr__"]], "__delattr__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__delattr__"]], "__delattr__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__delattr__"]], "__delattr__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__delattr__"]], "__delattr__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__delattr__"]], "__delattr__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__delattr__"]], "__delattr__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__delattr__"]], "__delattr__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__delattr__"]], "__delattr__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__delattr__"]], "__delattr__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__delattr__"]], "__delattr__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__delattr__"]], "__delattr__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__delattr__"]], "__delattr__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__delattr__"]], "__delattr__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__delattr__"]], "__delattr__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__delattr__"]], "__delattr__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__delattr__"]], "__delattr__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__delattr__"]], "__delattr__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__delattr__"]], "__delattr__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__delattr__"]], "__delattr__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__delattr__"]], "__delattr__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__delattr__"]], "__delattr__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__delattr__"]], "__delattr__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__delattr__"]], "__delattr__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__delattr__"]], "__delattr__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__delattr__"]], "__delattr__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__delattr__"]], "__delattr__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__delattr__"]], "__delattr__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__delattr__"]], "__delattr__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__delattr__"]], "__delattr__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__delattr__"]], "__delattr__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__delattr__"]], "__delattr__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__delattr__"]], "__delattr__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__delattr__"]], "__delattr__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__delattr__"]], "__delattr__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__delattr__"]], "__delattr__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__delattr__"]], "__delattr__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__delattr__"]], "__delattr__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__delattr__"]], "__delattr__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__delattr__"]], "__delattr__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__delattr__"]], "__delattr__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__delattr__"]], "__delattr__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__delattr__"]], "__delattr__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__delattr__"]], "__eq__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__eq__"]], "__eq__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__eq__"]], "__eq__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__eq__"]], "__eq__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__eq__"]], "__eq__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__eq__"]], "__eq__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__eq__"]], "__eq__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__eq__"]], "__eq__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__eq__"]], "__eq__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__eq__"]], "__eq__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__eq__"]], "__eq__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__eq__"]], "__eq__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__eq__"]], "__eq__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__eq__"]], "__eq__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__eq__"]], "__eq__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__eq__"]], "__eq__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__eq__"]], "__eq__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__eq__"]], "__eq__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__eq__"]], "__eq__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__eq__"]], "__eq__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__eq__"]], "__eq__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__eq__"]], "__eq__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__eq__"]], "__eq__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__eq__"]], "__eq__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__eq__"]], "__eq__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__eq__"]], "__eq__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__eq__"]], "__eq__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__eq__"]], "__eq__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__eq__"]], "__eq__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__eq__"]], "__eq__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__eq__"]], "__eq__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__eq__"]], "__eq__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__eq__"]], "__eq__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__eq__"]], "__eq__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__eq__"]], "__eq__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__eq__"]], "__eq__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__eq__"]], "__eq__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__eq__"]], "__eq__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__eq__"]], "__eq__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__eq__"]], "__eq__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__eq__"]], "__eq__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__eq__"]], "__eq__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__eq__"]], "__eq__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__eq__"]], "__eq__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__eq__"]], "__eq__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__eq__"]], "__eq__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__eq__"]], "__eq__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__eq__"]], "__eq__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__eq__"]], "__eq__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__eq__"]], "__eq__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__eq__"]], "__ge__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__ge__"]], "__ge__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__ge__"]], "__ge__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__ge__"]], "__ge__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__ge__"]], "__ge__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__ge__"]], "__ge__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__ge__"]], "__ge__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__ge__"]], "__ge__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__ge__"]], "__ge__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__ge__"]], "__ge__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__ge__"]], "__ge__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__ge__"]], "__ge__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__ge__"]], "__ge__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__ge__"]], "__ge__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__ge__"]], "__ge__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__ge__"]], "__ge__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__ge__"]], "__ge__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__ge__"]], "__ge__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__ge__"]], "__ge__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__ge__"]], "__ge__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__ge__"]], "__ge__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__ge__"]], "__ge__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__ge__"]], "__ge__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__ge__"]], "__ge__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__ge__"]], "__ge__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__ge__"]], "__ge__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__ge__"]], "__ge__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__ge__"]], "__ge__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__ge__"]], "__ge__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__ge__"]], "__ge__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__ge__"]], "__ge__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__ge__"]], "__ge__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__ge__"]], "__ge__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__ge__"]], "__ge__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__ge__"]], "__ge__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__ge__"]], "__ge__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__ge__"]], "__ge__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__ge__"]], "__ge__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__ge__"]], "__ge__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__ge__"]], "__ge__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__ge__"]], "__ge__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__ge__"]], "__ge__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__ge__"]], "__ge__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__ge__"]], "__ge__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__ge__"]], "__ge__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__ge__"]], "__ge__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__ge__"]], "__ge__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__ge__"]], "__ge__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__ge__"]], "__ge__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__ge__"]], "__ge__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__ge__"]], "__gt__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__gt__"]], "__gt__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__gt__"]], "__gt__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__gt__"]], "__gt__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__gt__"]], "__gt__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__gt__"]], "__gt__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__gt__"]], "__gt__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__gt__"]], "__gt__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__gt__"]], "__gt__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__gt__"]], "__gt__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__gt__"]], "__gt__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__gt__"]], "__gt__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__gt__"]], "__gt__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__gt__"]], "__gt__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__gt__"]], "__gt__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__gt__"]], "__gt__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__gt__"]], "__gt__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__gt__"]], "__gt__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__gt__"]], "__gt__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__gt__"]], "__gt__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__gt__"]], "__gt__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__gt__"]], "__gt__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__gt__"]], "__gt__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__gt__"]], "__gt__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__gt__"]], "__gt__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__gt__"]], "__gt__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__gt__"]], "__gt__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__gt__"]], "__gt__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__gt__"]], "__gt__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__gt__"]], "__gt__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__gt__"]], "__gt__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__gt__"]], "__gt__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__gt__"]], "__gt__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__gt__"]], "__gt__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__gt__"]], "__gt__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__gt__"]], "__gt__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__gt__"]], "__gt__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__gt__"]], "__gt__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__gt__"]], "__gt__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__gt__"]], "__gt__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__gt__"]], "__gt__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__gt__"]], "__gt__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__gt__"]], "__gt__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__gt__"]], "__gt__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__gt__"]], "__gt__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__gt__"]], "__gt__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__gt__"]], "__gt__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__gt__"]], "__gt__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__gt__"]], "__gt__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__gt__"]], "__gt__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__gt__"]], "__hash__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__hash__"]], "__hash__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__hash__"]], "__hash__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__hash__"]], "__hash__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__hash__"]], "__hash__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__hash__"]], "__hash__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__hash__"]], "__hash__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__hash__"]], "__hash__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__hash__"]], "__hash__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__hash__"]], "__hash__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__hash__"]], "__hash__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__hash__"]], "__hash__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__hash__"]], "__hash__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__hash__"]], "__hash__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__hash__"]], "__hash__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__hash__"]], "__hash__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__hash__"]], "__hash__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__hash__"]], "__hash__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__hash__"]], "__hash__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__hash__"]], "__hash__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__hash__"]], "__hash__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__hash__"]], "__hash__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__hash__"]], "__hash__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__hash__"]], "__hash__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__hash__"]], "__hash__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__hash__"]], "__hash__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__hash__"]], "__hash__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__hash__"]], "__hash__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__hash__"]], "__hash__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__hash__"]], "__hash__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__hash__"]], "__hash__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__hash__"]], "__hash__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__hash__"]], "__hash__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__hash__"]], "__hash__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__hash__"]], "__hash__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__hash__"]], "__hash__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__hash__"]], "__hash__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__hash__"]], "__hash__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__hash__"]], "__hash__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__hash__"]], "__hash__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__hash__"]], "__hash__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__hash__"]], "__hash__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__hash__"]], "__hash__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__hash__"]], "__hash__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__hash__"]], "__hash__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__hash__"]], "__hash__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__hash__"]], "__hash__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__hash__"]], "__hash__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__hash__"]], "__hash__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__hash__"]], "__hash__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__hash__"]], "__le__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__le__"]], "__le__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__le__"]], "__le__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__le__"]], "__le__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__le__"]], "__le__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__le__"]], "__le__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__le__"]], "__le__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__le__"]], "__le__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__le__"]], "__le__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__le__"]], "__le__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__le__"]], "__le__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__le__"]], "__le__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__le__"]], "__le__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__le__"]], "__le__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__le__"]], "__le__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__le__"]], "__le__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__le__"]], "__le__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__le__"]], "__le__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__le__"]], "__le__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__le__"]], "__le__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__le__"]], "__le__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__le__"]], "__le__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__le__"]], "__le__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__le__"]], "__le__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__le__"]], "__le__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__le__"]], "__le__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__le__"]], "__le__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__le__"]], "__le__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__le__"]], "__le__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__le__"]], "__le__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__le__"]], "__le__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__le__"]], "__le__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__le__"]], "__le__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__le__"]], "__le__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__le__"]], "__le__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__le__"]], "__le__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__le__"]], "__le__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__le__"]], "__le__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__le__"]], "__le__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__le__"]], "__le__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__le__"]], "__le__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__le__"]], "__le__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__le__"]], "__le__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__le__"]], "__le__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__le__"]], "__le__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__le__"]], "__le__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__le__"]], "__le__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__le__"]], "__le__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__le__"]], "__le__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__le__"]], "__le__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__le__"]], "__lt__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__lt__"]], "__lt__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__lt__"]], "__lt__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__lt__"]], "__lt__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__lt__"]], "__lt__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__lt__"]], "__lt__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__lt__"]], "__lt__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__lt__"]], "__lt__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__lt__"]], "__lt__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__lt__"]], "__lt__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__lt__"]], "__lt__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__lt__"]], "__lt__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__lt__"]], "__lt__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__lt__"]], "__lt__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__lt__"]], "__lt__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__lt__"]], "__lt__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__lt__"]], "__lt__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__lt__"]], "__lt__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__lt__"]], "__lt__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__lt__"]], "__lt__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__lt__"]], "__lt__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__lt__"]], "__lt__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__lt__"]], "__lt__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__lt__"]], "__lt__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__lt__"]], "__lt__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__lt__"]], "__lt__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__lt__"]], "__lt__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__lt__"]], "__lt__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__lt__"]], "__lt__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__lt__"]], "__lt__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__lt__"]], "__lt__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__lt__"]], "__lt__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__lt__"]], "__lt__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__lt__"]], "__lt__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__lt__"]], "__lt__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__lt__"]], "__lt__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__lt__"]], "__lt__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__lt__"]], "__lt__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__lt__"]], "__lt__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__lt__"]], "__lt__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__lt__"]], "__lt__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__lt__"]], "__lt__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__lt__"]], "__lt__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__lt__"]], "__lt__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__lt__"]], "__lt__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__lt__"]], "__lt__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__lt__"]], "__lt__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__lt__"]], "__lt__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__lt__"]], "__lt__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__lt__"]], "__lt__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__lt__"]], "__post_init__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__post_init__"]], "__post_init__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__post_init__"]], "__post_init__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__post_init__"]], "__post_init__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__post_init__"]], "__post_init__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__post_init__"]], "__post_init__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__post_init__"]], "__post_init__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__post_init__"]], "__post_init__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__post_init__"]], "__post_init__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__post_init__"]], "__post_init__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__post_init__"]], "__post_init__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__post_init__"]], "__post_init__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__post_init__"]], "__post_init__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__post_init__"]], "__post_init__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__post_init__"]], "__post_init__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__post_init__"]], "__post_init__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__post_init__"]], "__post_init__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__post_init__"]], "__post_init__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__post_init__"]], "__post_init__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__post_init__"]], "__post_init__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__post_init__"]], "__post_init__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__post_init__"]], "__post_init__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__post_init__"]], "__post_init__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__post_init__"]], "__post_init__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__post_init__"]], "__post_init__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__post_init__"]], "__post_init__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__post_init__"]], "__post_init__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__post_init__"]], "__post_init__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__post_init__"]], "__post_init__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__post_init__"]], "__post_init__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__post_init__"]], "__post_init__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__post_init__"]], "__post_init__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__post_init__"]], "__post_init__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__post_init__"]], "__post_init__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__post_init__"]], "__post_init__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__post_init__"]], "__post_init__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__post_init__"]], "__post_init__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__post_init__"]], "__post_init__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__post_init__"]], "__post_init__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__post_init__"]], "__post_init__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__post_init__"]], "__post_init__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__post_init__"]], "__post_init__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__post_init__"]], "__post_init__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__post_init__"]], "__post_init__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__post_init__"]], "__post_init__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__post_init__"]], "__post_init__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__post_init__"]], "__post_init__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__post_init__"]], "__post_init__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__post_init__"]], "__post_init__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__post_init__"]], "__post_init__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__post_init__"]], "__repr__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__repr__"]], "__repr__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__repr__"]], "__repr__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__repr__"]], "__repr__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__repr__"]], "__repr__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__repr__"]], "__repr__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__repr__"]], "__repr__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__repr__"]], "__repr__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__repr__"]], "__repr__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__repr__"]], "__repr__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__repr__"]], "__repr__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__repr__"]], "__repr__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__repr__"]], "__repr__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__repr__"]], "__repr__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__repr__"]], "__repr__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__repr__"]], "__repr__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__repr__"]], "__repr__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__repr__"]], "__repr__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__repr__"]], "__repr__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__repr__"]], "__repr__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__repr__"]], "__repr__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__repr__"]], "__repr__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__repr__"]], "__repr__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__repr__"]], "__repr__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__repr__"]], "__repr__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__repr__"]], "__repr__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__repr__"]], "__repr__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__repr__"]], "__repr__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__repr__"]], "__repr__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__repr__"]], "__repr__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__repr__"]], "__repr__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__repr__"]], "__repr__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__repr__"]], "__repr__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__repr__"]], "__repr__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__repr__"]], "__repr__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__repr__"]], "__repr__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__repr__"]], "__repr__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__repr__"]], "__repr__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__repr__"]], "__repr__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__repr__"]], "__repr__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__repr__"]], "__repr__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__repr__"]], "__repr__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__repr__"]], "__repr__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__repr__"]], "__repr__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__repr__"]], "__repr__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__repr__"]], "__repr__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__repr__"]], "__repr__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__repr__"]], "__repr__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__repr__"]], "__repr__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__repr__"]], "__repr__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__repr__"]], "__setattr__() (abjad.instruments.accordion method)": [[45, "abjad.instruments.Accordion.__setattr__"]], "__setattr__() (abjad.instruments.altoflute method)": [[45, "abjad.instruments.AltoFlute.__setattr__"]], "__setattr__() (abjad.instruments.altosaxophone method)": [[45, "abjad.instruments.AltoSaxophone.__setattr__"]], "__setattr__() (abjad.instruments.altotrombone method)": [[45, "abjad.instruments.AltoTrombone.__setattr__"]], "__setattr__() (abjad.instruments.altovoice method)": [[45, "abjad.instruments.AltoVoice.__setattr__"]], "__setattr__() (abjad.instruments.baritonesaxophone method)": [[45, "abjad.instruments.BaritoneSaxophone.__setattr__"]], "__setattr__() (abjad.instruments.baritonevoice method)": [[45, "abjad.instruments.BaritoneVoice.__setattr__"]], "__setattr__() (abjad.instruments.bassclarinet method)": [[45, "abjad.instruments.BassClarinet.__setattr__"]], "__setattr__() (abjad.instruments.bassflute method)": [[45, "abjad.instruments.BassFlute.__setattr__"]], "__setattr__() (abjad.instruments.basssaxophone method)": [[45, "abjad.instruments.BassSaxophone.__setattr__"]], "__setattr__() (abjad.instruments.basstrombone method)": [[45, "abjad.instruments.BassTrombone.__setattr__"]], "__setattr__() (abjad.instruments.bassvoice method)": [[45, "abjad.instruments.BassVoice.__setattr__"]], "__setattr__() (abjad.instruments.bassoon method)": [[45, "abjad.instruments.Bassoon.__setattr__"]], "__setattr__() (abjad.instruments.cello method)": [[45, "abjad.instruments.Cello.__setattr__"]], "__setattr__() (abjad.instruments.clarinetina method)": [[45, "abjad.instruments.ClarinetInA.__setattr__"]], "__setattr__() (abjad.instruments.clarinetinbflat method)": [[45, "abjad.instruments.ClarinetInBFlat.__setattr__"]], "__setattr__() (abjad.instruments.clarinetineflat method)": [[45, "abjad.instruments.ClarinetInEFlat.__setattr__"]], "__setattr__() (abjad.instruments.contrabass method)": [[45, "abjad.instruments.Contrabass.__setattr__"]], "__setattr__() (abjad.instruments.contrabassclarinet method)": [[45, "abjad.instruments.ContrabassClarinet.__setattr__"]], "__setattr__() (abjad.instruments.contrabassflute method)": [[45, "abjad.instruments.ContrabassFlute.__setattr__"]], "__setattr__() (abjad.instruments.contrabasssaxophone method)": [[45, "abjad.instruments.ContrabassSaxophone.__setattr__"]], "__setattr__() (abjad.instruments.contrabassoon method)": [[45, "abjad.instruments.Contrabassoon.__setattr__"]], "__setattr__() (abjad.instruments.englishhorn method)": [[45, "abjad.instruments.EnglishHorn.__setattr__"]], "__setattr__() (abjad.instruments.flute method)": [[45, "abjad.instruments.Flute.__setattr__"]], "__setattr__() (abjad.instruments.frenchhorn method)": [[45, "abjad.instruments.FrenchHorn.__setattr__"]], "__setattr__() (abjad.instruments.glockenspiel method)": [[45, "abjad.instruments.Glockenspiel.__setattr__"]], "__setattr__() (abjad.instruments.guitar method)": [[45, "abjad.instruments.Guitar.__setattr__"]], "__setattr__() (abjad.instruments.harp method)": [[45, "abjad.instruments.Harp.__setattr__"]], "__setattr__() (abjad.instruments.harpsichord method)": [[45, "abjad.instruments.Harpsichord.__setattr__"]], "__setattr__() (abjad.instruments.instrument method)": [[45, "abjad.instruments.Instrument.__setattr__"]], "__setattr__() (abjad.instruments.marimba method)": [[45, "abjad.instruments.Marimba.__setattr__"]], "__setattr__() (abjad.instruments.mezzosopranovoice method)": [[45, "abjad.instruments.MezzoSopranoVoice.__setattr__"]], "__setattr__() (abjad.instruments.oboe method)": [[45, "abjad.instruments.Oboe.__setattr__"]], "__setattr__() (abjad.instruments.percussion method)": [[45, "abjad.instruments.Percussion.__setattr__"]], "__setattr__() (abjad.instruments.piano method)": [[45, "abjad.instruments.Piano.__setattr__"]], "__setattr__() (abjad.instruments.piccolo method)": [[45, "abjad.instruments.Piccolo.__setattr__"]], "__setattr__() (abjad.instruments.sopraninosaxophone method)": [[45, "abjad.instruments.SopraninoSaxophone.__setattr__"]], "__setattr__() (abjad.instruments.sopranosaxophone method)": [[45, "abjad.instruments.SopranoSaxophone.__setattr__"]], "__setattr__() (abjad.instruments.sopranovoice method)": [[45, "abjad.instruments.SopranoVoice.__setattr__"]], "__setattr__() (abjad.instruments.stringnumber method)": [[45, "abjad.instruments.StringNumber.__setattr__"]], "__setattr__() (abjad.instruments.tenorsaxophone method)": [[45, "abjad.instruments.TenorSaxophone.__setattr__"]], "__setattr__() (abjad.instruments.tenortrombone method)": [[45, "abjad.instruments.TenorTrombone.__setattr__"]], "__setattr__() (abjad.instruments.tenorvoice method)": [[45, "abjad.instruments.TenorVoice.__setattr__"]], "__setattr__() (abjad.instruments.trumpet method)": [[45, "abjad.instruments.Trumpet.__setattr__"]], "__setattr__() (abjad.instruments.tuba method)": [[45, "abjad.instruments.Tuba.__setattr__"]], "__setattr__() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.__setattr__"]], "__setattr__() (abjad.instruments.vibraphone method)": [[45, "abjad.instruments.Vibraphone.__setattr__"]], "__setattr__() (abjad.instruments.viola method)": [[45, "abjad.instruments.Viola.__setattr__"]], "__setattr__() (abjad.instruments.violin method)": [[45, "abjad.instruments.Violin.__setattr__"]], "__setattr__() (abjad.instruments.xylophone method)": [[45, "abjad.instruments.Xylophone.__setattr__"]], "abjad.instruments": [[45, "module-abjad.instruments"]], "get_pitch_ranges_by_string_number() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.get_pitch_ranges_by_string_number"]], "get_pitches_by_string_number() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.get_pitches_by_string_number"]], "latent (abjad.instruments.accordion attribute)": [[45, "abjad.instruments.Accordion.latent"]], "latent (abjad.instruments.altoflute attribute)": [[45, "abjad.instruments.AltoFlute.latent"]], "latent (abjad.instruments.altosaxophone attribute)": [[45, "abjad.instruments.AltoSaxophone.latent"]], "latent (abjad.instruments.altotrombone attribute)": [[45, "abjad.instruments.AltoTrombone.latent"]], "latent (abjad.instruments.altovoice attribute)": [[45, "abjad.instruments.AltoVoice.latent"]], "latent (abjad.instruments.baritonesaxophone attribute)": [[45, "abjad.instruments.BaritoneSaxophone.latent"]], "latent (abjad.instruments.baritonevoice attribute)": [[45, "abjad.instruments.BaritoneVoice.latent"]], "latent (abjad.instruments.bassclarinet attribute)": [[45, "abjad.instruments.BassClarinet.latent"]], "latent (abjad.instruments.bassflute attribute)": [[45, "abjad.instruments.BassFlute.latent"]], "latent (abjad.instruments.basssaxophone attribute)": [[45, "abjad.instruments.BassSaxophone.latent"]], "latent (abjad.instruments.basstrombone attribute)": [[45, "abjad.instruments.BassTrombone.latent"]], "latent (abjad.instruments.bassvoice attribute)": [[45, "abjad.instruments.BassVoice.latent"]], "latent (abjad.instruments.bassoon attribute)": [[45, "abjad.instruments.Bassoon.latent"]], "latent (abjad.instruments.cello attribute)": [[45, "abjad.instruments.Cello.latent"]], "latent (abjad.instruments.clarinetina attribute)": [[45, "abjad.instruments.ClarinetInA.latent"]], "latent (abjad.instruments.clarinetinbflat attribute)": [[45, "abjad.instruments.ClarinetInBFlat.latent"]], "latent (abjad.instruments.clarinetineflat attribute)": [[45, "abjad.instruments.ClarinetInEFlat.latent"]], "latent (abjad.instruments.contrabass attribute)": [[45, "abjad.instruments.Contrabass.latent"]], "latent (abjad.instruments.contrabassclarinet attribute)": [[45, "abjad.instruments.ContrabassClarinet.latent"]], "latent (abjad.instruments.contrabassflute attribute)": [[45, "abjad.instruments.ContrabassFlute.latent"]], "latent (abjad.instruments.contrabasssaxophone attribute)": [[45, "abjad.instruments.ContrabassSaxophone.latent"]], "latent (abjad.instruments.contrabassoon attribute)": [[45, "abjad.instruments.Contrabassoon.latent"]], "latent (abjad.instruments.englishhorn attribute)": [[45, "abjad.instruments.EnglishHorn.latent"]], "latent (abjad.instruments.flute attribute)": [[45, "abjad.instruments.Flute.latent"]], "latent (abjad.instruments.frenchhorn attribute)": [[45, "abjad.instruments.FrenchHorn.latent"]], "latent (abjad.instruments.glockenspiel attribute)": [[45, "abjad.instruments.Glockenspiel.latent"]], "latent (abjad.instruments.guitar attribute)": [[45, "abjad.instruments.Guitar.latent"]], "latent (abjad.instruments.harp attribute)": [[45, "abjad.instruments.Harp.latent"]], "latent (abjad.instruments.harpsichord attribute)": [[45, "abjad.instruments.Harpsichord.latent"]], "latent (abjad.instruments.instrument attribute)": [[45, "abjad.instruments.Instrument.latent"]], "latent (abjad.instruments.marimba attribute)": [[45, "abjad.instruments.Marimba.latent"]], "latent (abjad.instruments.mezzosopranovoice attribute)": [[45, "abjad.instruments.MezzoSopranoVoice.latent"]], "latent (abjad.instruments.oboe attribute)": [[45, "abjad.instruments.Oboe.latent"]], "latent (abjad.instruments.percussion attribute)": [[45, "abjad.instruments.Percussion.latent"]], "latent (abjad.instruments.piano attribute)": [[45, "abjad.instruments.Piano.latent"]], "latent (abjad.instruments.piccolo attribute)": [[45, "abjad.instruments.Piccolo.latent"]], "latent (abjad.instruments.sopraninosaxophone attribute)": [[45, "abjad.instruments.SopraninoSaxophone.latent"]], "latent (abjad.instruments.sopranosaxophone attribute)": [[45, "abjad.instruments.SopranoSaxophone.latent"]], "latent (abjad.instruments.sopranovoice attribute)": [[45, "abjad.instruments.SopranoVoice.latent"]], "latent (abjad.instruments.tenorsaxophone attribute)": [[45, "abjad.instruments.TenorSaxophone.latent"]], "latent (abjad.instruments.tenortrombone attribute)": [[45, "abjad.instruments.TenorTrombone.latent"]], "latent (abjad.instruments.tenorvoice attribute)": [[45, "abjad.instruments.TenorVoice.latent"]], "latent (abjad.instruments.trumpet attribute)": [[45, "abjad.instruments.Trumpet.latent"]], "latent (abjad.instruments.tuba attribute)": [[45, "abjad.instruments.Tuba.latent"]], "latent (abjad.instruments.vibraphone attribute)": [[45, "abjad.instruments.Vibraphone.latent"]], "latent (abjad.instruments.viola attribute)": [[45, "abjad.instruments.Viola.latent"]], "latent (abjad.instruments.violin attribute)": [[45, "abjad.instruments.Violin.latent"]], "latent (abjad.instruments.xylophone attribute)": [[45, "abjad.instruments.Xylophone.latent"]], "persistent (abjad.instruments.accordion attribute)": [[45, "abjad.instruments.Accordion.persistent"]], "persistent (abjad.instruments.altoflute attribute)": [[45, "abjad.instruments.AltoFlute.persistent"]], "persistent (abjad.instruments.altosaxophone attribute)": [[45, "abjad.instruments.AltoSaxophone.persistent"]], "persistent (abjad.instruments.altotrombone attribute)": [[45, "abjad.instruments.AltoTrombone.persistent"]], "persistent (abjad.instruments.altovoice attribute)": [[45, "abjad.instruments.AltoVoice.persistent"]], "persistent (abjad.instruments.baritonesaxophone attribute)": [[45, "abjad.instruments.BaritoneSaxophone.persistent"]], "persistent (abjad.instruments.baritonevoice attribute)": [[45, "abjad.instruments.BaritoneVoice.persistent"]], "persistent (abjad.instruments.bassclarinet attribute)": [[45, "abjad.instruments.BassClarinet.persistent"]], "persistent (abjad.instruments.bassflute attribute)": [[45, "abjad.instruments.BassFlute.persistent"]], "persistent (abjad.instruments.basssaxophone attribute)": [[45, "abjad.instruments.BassSaxophone.persistent"]], "persistent (abjad.instruments.basstrombone attribute)": [[45, "abjad.instruments.BassTrombone.persistent"]], "persistent (abjad.instruments.bassvoice attribute)": [[45, "abjad.instruments.BassVoice.persistent"]], "persistent (abjad.instruments.bassoon attribute)": [[45, "abjad.instruments.Bassoon.persistent"]], "persistent (abjad.instruments.cello attribute)": [[45, "abjad.instruments.Cello.persistent"]], "persistent (abjad.instruments.clarinetina attribute)": [[45, "abjad.instruments.ClarinetInA.persistent"]], "persistent (abjad.instruments.clarinetinbflat attribute)": [[45, "abjad.instruments.ClarinetInBFlat.persistent"]], "persistent (abjad.instruments.clarinetineflat attribute)": [[45, "abjad.instruments.ClarinetInEFlat.persistent"]], "persistent (abjad.instruments.contrabass attribute)": [[45, "abjad.instruments.Contrabass.persistent"]], "persistent (abjad.instruments.contrabassclarinet attribute)": [[45, "abjad.instruments.ContrabassClarinet.persistent"]], "persistent (abjad.instruments.contrabassflute attribute)": [[45, "abjad.instruments.ContrabassFlute.persistent"]], "persistent (abjad.instruments.contrabasssaxophone attribute)": [[45, "abjad.instruments.ContrabassSaxophone.persistent"]], "persistent (abjad.instruments.contrabassoon attribute)": [[45, "abjad.instruments.Contrabassoon.persistent"]], "persistent (abjad.instruments.englishhorn attribute)": [[45, "abjad.instruments.EnglishHorn.persistent"]], "persistent (abjad.instruments.flute attribute)": [[45, "abjad.instruments.Flute.persistent"]], "persistent (abjad.instruments.frenchhorn attribute)": [[45, "abjad.instruments.FrenchHorn.persistent"]], "persistent (abjad.instruments.glockenspiel attribute)": [[45, "abjad.instruments.Glockenspiel.persistent"]], "persistent (abjad.instruments.guitar attribute)": [[45, "abjad.instruments.Guitar.persistent"]], "persistent (abjad.instruments.harp attribute)": [[45, "abjad.instruments.Harp.persistent"]], "persistent (abjad.instruments.harpsichord attribute)": [[45, "abjad.instruments.Harpsichord.persistent"]], "persistent (abjad.instruments.instrument attribute)": [[45, "abjad.instruments.Instrument.persistent"]], "persistent (abjad.instruments.marimba attribute)": [[45, "abjad.instruments.Marimba.persistent"]], "persistent (abjad.instruments.mezzosopranovoice attribute)": [[45, "abjad.instruments.MezzoSopranoVoice.persistent"]], "persistent (abjad.instruments.oboe attribute)": [[45, "abjad.instruments.Oboe.persistent"]], "persistent (abjad.instruments.percussion attribute)": [[45, "abjad.instruments.Percussion.persistent"]], "persistent (abjad.instruments.piano attribute)": [[45, "abjad.instruments.Piano.persistent"]], "persistent (abjad.instruments.piccolo attribute)": [[45, "abjad.instruments.Piccolo.persistent"]], "persistent (abjad.instruments.sopraninosaxophone attribute)": [[45, "abjad.instruments.SopraninoSaxophone.persistent"]], "persistent (abjad.instruments.sopranosaxophone attribute)": [[45, "abjad.instruments.SopranoSaxophone.persistent"]], "persistent (abjad.instruments.sopranovoice attribute)": [[45, "abjad.instruments.SopranoVoice.persistent"]], "persistent (abjad.instruments.tenorsaxophone attribute)": [[45, "abjad.instruments.TenorSaxophone.persistent"]], "persistent (abjad.instruments.tenortrombone attribute)": [[45, "abjad.instruments.TenorTrombone.persistent"]], "persistent (abjad.instruments.tenorvoice attribute)": [[45, "abjad.instruments.TenorVoice.persistent"]], "persistent (abjad.instruments.trumpet attribute)": [[45, "abjad.instruments.Trumpet.persistent"]], "persistent (abjad.instruments.tuba attribute)": [[45, "abjad.instruments.Tuba.persistent"]], "persistent (abjad.instruments.vibraphone attribute)": [[45, "abjad.instruments.Vibraphone.persistent"]], "persistent (abjad.instruments.viola attribute)": [[45, "abjad.instruments.Viola.persistent"]], "persistent (abjad.instruments.violin attribute)": [[45, "abjad.instruments.Violin.persistent"]], "persistent (abjad.instruments.xylophone attribute)": [[45, "abjad.instruments.Xylophone.persistent"]], "pitch_ranges (abjad.instruments.tuning attribute)": [[45, "abjad.instruments.Tuning.pitch_ranges"]], "redraw (abjad.instruments.accordion attribute)": [[45, "abjad.instruments.Accordion.redraw"]], "redraw (abjad.instruments.altoflute attribute)": [[45, "abjad.instruments.AltoFlute.redraw"]], "redraw (abjad.instruments.altosaxophone attribute)": [[45, "abjad.instruments.AltoSaxophone.redraw"]], "redraw (abjad.instruments.altotrombone attribute)": [[45, "abjad.instruments.AltoTrombone.redraw"]], "redraw (abjad.instruments.altovoice attribute)": [[45, "abjad.instruments.AltoVoice.redraw"]], "redraw (abjad.instruments.baritonesaxophone attribute)": [[45, "abjad.instruments.BaritoneSaxophone.redraw"]], "redraw (abjad.instruments.baritonevoice attribute)": [[45, "abjad.instruments.BaritoneVoice.redraw"]], "redraw (abjad.instruments.bassclarinet attribute)": [[45, "abjad.instruments.BassClarinet.redraw"]], "redraw (abjad.instruments.bassflute attribute)": [[45, "abjad.instruments.BassFlute.redraw"]], "redraw (abjad.instruments.basssaxophone attribute)": [[45, "abjad.instruments.BassSaxophone.redraw"]], "redraw (abjad.instruments.basstrombone attribute)": [[45, "abjad.instruments.BassTrombone.redraw"]], "redraw (abjad.instruments.bassvoice attribute)": [[45, "abjad.instruments.BassVoice.redraw"]], "redraw (abjad.instruments.bassoon attribute)": [[45, "abjad.instruments.Bassoon.redraw"]], "redraw (abjad.instruments.cello attribute)": [[45, "abjad.instruments.Cello.redraw"]], "redraw (abjad.instruments.clarinetina attribute)": [[45, "abjad.instruments.ClarinetInA.redraw"]], "redraw (abjad.instruments.clarinetinbflat attribute)": [[45, "abjad.instruments.ClarinetInBFlat.redraw"]], "redraw (abjad.instruments.clarinetineflat attribute)": [[45, "abjad.instruments.ClarinetInEFlat.redraw"]], "redraw (abjad.instruments.contrabass attribute)": [[45, "abjad.instruments.Contrabass.redraw"]], "redraw (abjad.instruments.contrabassclarinet attribute)": [[45, "abjad.instruments.ContrabassClarinet.redraw"]], "redraw (abjad.instruments.contrabassflute attribute)": [[45, "abjad.instruments.ContrabassFlute.redraw"]], "redraw (abjad.instruments.contrabasssaxophone attribute)": [[45, "abjad.instruments.ContrabassSaxophone.redraw"]], "redraw (abjad.instruments.contrabassoon attribute)": [[45, "abjad.instruments.Contrabassoon.redraw"]], "redraw (abjad.instruments.englishhorn attribute)": [[45, "abjad.instruments.EnglishHorn.redraw"]], "redraw (abjad.instruments.flute attribute)": [[45, "abjad.instruments.Flute.redraw"]], "redraw (abjad.instruments.frenchhorn attribute)": [[45, "abjad.instruments.FrenchHorn.redraw"]], "redraw (abjad.instruments.glockenspiel attribute)": [[45, "abjad.instruments.Glockenspiel.redraw"]], "redraw (abjad.instruments.guitar attribute)": [[45, "abjad.instruments.Guitar.redraw"]], "redraw (abjad.instruments.harp attribute)": [[45, "abjad.instruments.Harp.redraw"]], "redraw (abjad.instruments.harpsichord attribute)": [[45, "abjad.instruments.Harpsichord.redraw"]], "redraw (abjad.instruments.instrument attribute)": [[45, "abjad.instruments.Instrument.redraw"]], "redraw (abjad.instruments.marimba attribute)": [[45, "abjad.instruments.Marimba.redraw"]], "redraw (abjad.instruments.mezzosopranovoice attribute)": [[45, "abjad.instruments.MezzoSopranoVoice.redraw"]], "redraw (abjad.instruments.oboe attribute)": [[45, "abjad.instruments.Oboe.redraw"]], "redraw (abjad.instruments.percussion attribute)": [[45, "abjad.instruments.Percussion.redraw"]], "redraw (abjad.instruments.piano attribute)": [[45, "abjad.instruments.Piano.redraw"]], "redraw (abjad.instruments.piccolo attribute)": [[45, "abjad.instruments.Piccolo.redraw"]], "redraw (abjad.instruments.sopraninosaxophone attribute)": [[45, "abjad.instruments.SopraninoSaxophone.redraw"]], "redraw (abjad.instruments.sopranosaxophone attribute)": [[45, "abjad.instruments.SopranoSaxophone.redraw"]], "redraw (abjad.instruments.sopranovoice attribute)": [[45, "abjad.instruments.SopranoVoice.redraw"]], "redraw (abjad.instruments.tenorsaxophone attribute)": [[45, "abjad.instruments.TenorSaxophone.redraw"]], "redraw (abjad.instruments.tenortrombone attribute)": [[45, "abjad.instruments.TenorTrombone.redraw"]], "redraw (abjad.instruments.tenorvoice attribute)": [[45, "abjad.instruments.TenorVoice.redraw"]], "redraw (abjad.instruments.trumpet attribute)": [[45, "abjad.instruments.Trumpet.redraw"]], "redraw (abjad.instruments.tuba attribute)": [[45, "abjad.instruments.Tuba.redraw"]], "redraw (abjad.instruments.vibraphone attribute)": [[45, "abjad.instruments.Vibraphone.redraw"]], "redraw (abjad.instruments.viola attribute)": [[45, "abjad.instruments.Viola.redraw"]], "redraw (abjad.instruments.violin attribute)": [[45, "abjad.instruments.Violin.redraw"]], "redraw (abjad.instruments.xylophone attribute)": [[45, "abjad.instruments.Xylophone.redraw"]], "roman_numerals (abjad.instruments.stringnumber attribute)": [[45, "abjad.instruments.StringNumber.roman_numerals"]], "voice_pitch_classes() (abjad.instruments.tuning method)": [[45, "abjad.instruments.Tuning.voice_pitch_classes"]], "abjadgrapher (class in abjad.io)": [[46, "abjad.io.AbjadGrapher"]], "illustrator (class in abjad.io)": [[46, "abjad.io.Illustrator"]], "lilypondio (class in abjad.io)": [[46, "abjad.io.LilyPondIO"]], "player (class in abjad.io)": [[46, "abjad.io.Player"]], "__call__() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.__call__"]], "__call__() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.__call__"]], "__call__() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.__call__"]], "__call__() (abjad.io.player method)": [[46, "abjad.io.Player.__call__"]], "abjad.io": [[46, "module-abjad.io"]], "compare_files() (in module abjad.io)": [[46, "abjad.io.compare_files"]], "copy_stylesheets() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.copy_stylesheets"]], "copy_stylesheets() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.copy_stylesheets"]], "copy_stylesheets() (abjad.io.player method)": [[46, "abjad.io.Player.copy_stylesheets"]], "count_function_calls() (in module abjad.io)": [[46, "abjad.io.count_function_calls"]], "execute_file() (in module abjad.io)": [[46, "abjad.io.execute_file"]], "execute_string() (in module abjad.io)": [[46, "abjad.io.execute_string"]], "find_executable() (in module abjad.io)": [[46, "abjad.io.find_executable"]], "get_format() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_format"]], "get_layout() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_layout"]], "get_lilypond_path() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_lilypond_path"]], "get_lilypond_path() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_lilypond_path"]], "get_lilypond_path() (abjad.io.player method)": [[46, "abjad.io.Player.get_lilypond_path"]], "get_openable_paths() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_openable_paths"]], "get_openable_paths() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_openable_paths"]], "get_openable_paths() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_openable_paths"]], "get_openable_paths() (abjad.io.player method)": [[46, "abjad.io.Player.get_openable_paths"]], "get_output_directory() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_output_directory"]], "get_output_directory() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_output_directory"]], "get_output_directory() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_output_directory"]], "get_output_directory() (abjad.io.player method)": [[46, "abjad.io.Player.get_output_directory"]], "get_render_command() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_render_command"]], "get_render_command() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_render_command"]], "get_render_command() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_render_command"]], "get_render_command() (abjad.io.player method)": [[46, "abjad.io.Player.get_render_command"]], "get_render_directory() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_render_directory"]], "get_render_directory() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_render_directory"]], "get_render_directory() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_render_directory"]], "get_render_directory() (abjad.io.player method)": [[46, "abjad.io.Player.get_render_directory"]], "get_render_prefix() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_render_prefix"]], "get_render_prefix() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_render_prefix"]], "get_render_prefix() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_render_prefix"]], "get_render_prefix() (abjad.io.player method)": [[46, "abjad.io.Player.get_render_prefix"]], "get_string() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.get_string"]], "get_string() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_string"]], "get_string() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_string"]], "get_string() (abjad.io.player method)": [[46, "abjad.io.Player.get_string"]], "get_stylesheets_directories() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.get_stylesheets_directories"]], "get_stylesheets_directories() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.get_stylesheets_directories"]], "get_stylesheets_directories() (abjad.io.player method)": [[46, "abjad.io.Player.get_stylesheets_directories"]], "graph() (in module abjad.io)": [[46, "abjad.io.graph"]], "make_subprocess() (in module abjad.io)": [[46, "abjad.io.make_subprocess"]], "migrate_assets() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.migrate_assets"]], "migrate_assets() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.migrate_assets"]], "migrate_assets() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.migrate_assets"]], "migrate_assets() (abjad.io.player method)": [[46, "abjad.io.Player.migrate_assets"]], "open_file() (in module abjad.io)": [[46, "abjad.io.open_file"]], "open_last_log() (in module abjad.io)": [[46, "abjad.io.open_last_log"]], "open_output_path() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.open_output_path"]], "open_output_path() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.open_output_path"]], "open_output_path() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.open_output_path"]], "open_output_path() (abjad.io.player method)": [[46, "abjad.io.Player.open_output_path"]], "persist_log() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.persist_log"]], "persist_log() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.persist_log"]], "persist_log() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.persist_log"]], "persist_log() (abjad.io.player method)": [[46, "abjad.io.Player.persist_log"]], "persist_string() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.persist_string"]], "persist_string() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.persist_string"]], "persist_string() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.persist_string"]], "persist_string() (abjad.io.player method)": [[46, "abjad.io.Player.persist_string"]], "profile() (in module abjad.io)": [[46, "abjad.io.profile"]], "run_command() (abjad.io.abjadgrapher method)": [[46, "abjad.io.AbjadGrapher.run_command"]], "run_command() (abjad.io.illustrator method)": [[46, "abjad.io.Illustrator.run_command"]], "run_command() (abjad.io.lilypondio method)": [[46, "abjad.io.LilyPondIO.run_command"]], "run_command() (abjad.io.player method)": [[46, "abjad.io.Player.run_command"]], "run_command() (in module abjad.io)": [[46, "abjad.io.run_command"]], "run_lilypond() (in module abjad.io)": [[46, "abjad.io.run_lilypond"]], "show() (in module abjad.io)": [[46, "abjad.io.show"]], "spawn_subprocess() (in module abjad.io)": [[46, "abjad.io.spawn_subprocess"]], "abjad.iterate": [[47, "module-abjad.iterate"]], "components() (in module abjad.iterate)": [[47, "abjad.iterate.components"]], "leaves() (in module abjad.iterate)": [[47, "abjad.iterate.leaves"]], "logical_ties() (in module abjad.iterate)": [[47, "abjad.iterate.logical_ties"]], "pitches() (in module abjad.iterate)": [[47, "abjad.iterate.pitches"]], "timeline() (in module abjad.iterate)": [[47, "abjad.iterate.timeline"]], "abjad.iterpitches": [[48, "module-abjad.iterpitches"]], "iterate_out_of_range() (in module abjad.iterpitches)": [[48, "abjad.iterpitches.iterate_out_of_range"]], "respell_with_flats() (in module abjad.iterpitches)": [[48, "abjad.iterpitches.respell_with_flats"]], "respell_with_sharps() (in module abjad.iterpitches)": [[48, "abjad.iterpitches.respell_with_sharps"]], "sounding_pitches_are_in_range() (in module abjad.iterpitches)": [[48, "abjad.iterpitches.sounding_pitches_are_in_range"]], "transpose_from_sounding_pitch() (in module abjad.iterpitches)": [[48, "abjad.iterpitches.transpose_from_sounding_pitch"]], "transpose_from_written_pitch() (in module abjad.iterpitches)": [[48, "abjad.iterpitches.transpose_from_written_pitch"]], "colormap (class in abjad.label)": [[49, "abjad.label.ColorMap"]], "__eq__() (abjad.label.colormap method)": [[49, "abjad.label.ColorMap.__eq__"]], "__getitem__() (abjad.label.colormap method)": [[49, "abjad.label.ColorMap.__getitem__"]], "__hash__() (abjad.label.colormap method)": [[49, "abjad.label.ColorMap.__hash__"]], "__post_init__() (abjad.label.colormap method)": [[49, "abjad.label.ColorMap.__post_init__"]], "__repr__() (abjad.label.colormap method)": [[49, "abjad.label.ColorMap.__repr__"]], "abjad.label": [[49, "module-abjad.label"]], "by_selector() (in module abjad.label)": [[49, "abjad.label.by_selector"]], "color_container() (in module abjad.label)": [[49, "abjad.label.color_container"]], "color_leaves() (in module abjad.label)": [[49, "abjad.label.color_leaves"]], "color_note_heads() (in module abjad.label)": [[49, "abjad.label.color_note_heads"]], "get() (abjad.label.colormap method)": [[49, "abjad.label.ColorMap.get"]], "is_twelve_tone_complete (abjad.label.colormap attribute)": [[49, "abjad.label.ColorMap.is_twelve_tone_complete"]], "is_twenty_four_tone_complete (abjad.label.colormap attribute)": [[49, "abjad.label.ColorMap.is_twenty_four_tone_complete"]], "pairs (abjad.label.colormap attribute)": [[49, "abjad.label.ColorMap.pairs"]], "remove_markup() (in module abjad.label)": [[49, "abjad.label.remove_markup"]], "vertical_moments() (in module abjad.label)": [[49, "abjad.label.vertical_moments"]], "with_durations() (in module abjad.label)": [[49, "abjad.label.with_durations"]], "with_indices() (in module abjad.label)": [[49, "abjad.label.with_indices"]], "with_intervals() (in module abjad.label)": [[49, "abjad.label.with_intervals"]], "with_pitches() (in module abjad.label)": [[49, "abjad.label.with_pitches"]], "with_set_classes() (in module abjad.label)": [[49, "abjad.label.with_set_classes"]], "with_start_offsets() (in module abjad.label)": [[49, "abjad.label.with_start_offsets"]], "block (class in abjad.lilypondfile)": [[50, "abjad.lilypondfile.Block"]], "lilypondfile (class in abjad.lilypondfile)": [[50, "abjad.lilypondfile.LilyPondFile"]], "__contains__() (abjad.lilypondfile.lilypondfile method)": [[50, "abjad.lilypondfile.LilyPondFile.__contains__"]], "__eq__() (abjad.lilypondfile.block method)": [[50, "abjad.lilypondfile.Block.__eq__"]], "__eq__() (abjad.lilypondfile.lilypondfile method)": [[50, "abjad.lilypondfile.LilyPondFile.__eq__"]], "__getitem__() (abjad.lilypondfile.lilypondfile method)": [[50, "abjad.lilypondfile.LilyPondFile.__getitem__"]], "__post_init__() (abjad.lilypondfile.block method)": [[50, "abjad.lilypondfile.Block.__post_init__"]], "__repr__() (abjad.lilypondfile.block method)": [[50, "abjad.lilypondfile.Block.__repr__"]], "__repr__() (abjad.lilypondfile.lilypondfile method)": [[50, "abjad.lilypondfile.LilyPondFile.__repr__"]], "abjad.lilypondfile": [[50, "module-abjad.lilypondfile"]], "get_tag() (abjad.lilypondfile.lilypondfile method)": [[50, "abjad.lilypondfile.LilyPondFile.get_tag"]], "lilypondcontext (class in abjad.lyproxy)": [[51, "abjad.lyproxy.LilyPondContext"]], "lilypondengraver (class in abjad.lyproxy)": [[51, "abjad.lyproxy.LilyPondEngraver"]], "lilypondgrob (class in abjad.lyproxy)": [[51, "abjad.lyproxy.LilyPondGrob"]], "lilypondgrobinterface (class in abjad.lyproxy)": [[51, "abjad.lyproxy.LilyPondGrobInterface"]], "__new__() (abjad.lyproxy.lilypondcontext static method)": [[51, "abjad.lyproxy.LilyPondContext.__new__"]], "__new__() (abjad.lyproxy.lilypondengraver static method)": [[51, "abjad.lyproxy.LilyPondEngraver.__new__"]], "__new__() (abjad.lyproxy.lilypondgrob static method)": [[51, "abjad.lyproxy.LilyPondGrob.__new__"]], "__new__() (abjad.lyproxy.lilypondgrobinterface static method)": [[51, "abjad.lyproxy.LilyPondGrobInterface.__new__"]], "__repr__() (abjad.lyproxy.lilypondcontext method)": [[51, "abjad.lyproxy.LilyPondContext.__repr__"]], "__repr__() (abjad.lyproxy.lilypondengraver method)": [[51, "abjad.lyproxy.LilyPondEngraver.__repr__"]], "__repr__() (abjad.lyproxy.lilypondgrob method)": [[51, "abjad.lyproxy.LilyPondGrob.__repr__"]], "__repr__() (abjad.lyproxy.lilypondgrobinterface method)": [[51, "abjad.lyproxy.LilyPondGrobInterface.__repr__"]], "abjad.lyproxy": [[51, "module-abjad.lyproxy"]], "accepted_by (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.accepted_by"]], "accepts (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.accepts"]], "alias (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.alias"]], "default_child (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.default_child"]], "engravers (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.engravers"]], "grobs (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.grobs"]], "grobs (abjad.lyproxy.lilypondengraver attribute)": [[51, "abjad.lyproxy.LilyPondEngraver.grobs"]], "interfaces (abjad.lyproxy.lilypondgrob attribute)": [[51, "abjad.lyproxy.LilyPondGrob.interfaces"]], "is_bottom_context (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.is_bottom_context"]], "is_custom (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.is_custom"]], "is_global_context (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.is_global_context"]], "is_score_context (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.is_score_context"]], "is_staff_context (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.is_staff_context"]], "is_staff_group_context (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.is_staff_group_context"]], "list_all_contexts() (abjad.lyproxy.lilypondcontext static method)": [[51, "abjad.lyproxy.LilyPondContext.list_all_contexts"]], "list_all_engravers() (abjad.lyproxy.lilypondengraver static method)": [[51, "abjad.lyproxy.LilyPondEngraver.list_all_engravers"]], "list_all_grobs() (abjad.lyproxy.lilypondgrob static method)": [[51, "abjad.lyproxy.LilyPondGrob.list_all_grobs"]], "list_all_interfaces() (abjad.lyproxy.lilypondgrobinterface static method)": [[51, "abjad.lyproxy.LilyPondGrobInterface.list_all_interfaces"]], "name (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.name"]], "name (abjad.lyproxy.lilypondengraver attribute)": [[51, "abjad.lyproxy.LilyPondEngraver.name"]], "name (abjad.lyproxy.lilypondgrob attribute)": [[51, "abjad.lyproxy.LilyPondGrob.name"]], "name (abjad.lyproxy.lilypondgrobinterface attribute)": [[51, "abjad.lyproxy.LilyPondGrobInterface.name"]], "property_names (abjad.lyproxy.lilypondcontext attribute)": [[51, "abjad.lyproxy.LilyPondContext.property_names"]], "property_names (abjad.lyproxy.lilypondengraver attribute)": [[51, "abjad.lyproxy.LilyPondEngraver.property_names"]], "property_names (abjad.lyproxy.lilypondgrob attribute)": [[51, "abjad.lyproxy.LilyPondGrob.property_names"]], "property_names (abjad.lyproxy.lilypondgrobinterface attribute)": [[51, "abjad.lyproxy.LilyPondGrobInterface.property_names"]], "register() (abjad.lyproxy.lilypondcontext class method)": [[51, "abjad.lyproxy.LilyPondContext.register"]], "unregister() (abjad.lyproxy.lilypondcontext method)": [[51, "abjad.lyproxy.LilyPondContext.unregister"]], "abjad.makers": [[52, "module-abjad.makers"]], "make_leaves() (in module abjad.makers)": [[52, "abjad.makers.make_leaves"]], "make_notes() (in module abjad.makers)": [[52, "abjad.makers.make_notes"]], "tuplet_from_duration_and_ratio() (in module abjad.makers)": [[52, "abjad.makers.tuplet_from_duration_and_ratio"]], "tuplet_from_leaf_and_ratio() (in module abjad.makers)": [[52, "abjad.makers.tuplet_from_leaf_and_ratio"]], "tuplet_from_ratio_and_pair() (in module abjad.makers)": [[52, "abjad.makers.tuplet_from_ratio_and_pair"]], "infinity (class in abjad.math)": [[53, "abjad.math.Infinity"]], "negativeinfinity (class in abjad.math)": [[53, "abjad.math.NegativeInfinity"]], "__eq__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__eq__"]], "__eq__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__eq__"]], "__float__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__float__"]], "__float__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__float__"]], "__ge__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__ge__"]], "__ge__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__ge__"]], "__gt__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__gt__"]], "__gt__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__gt__"]], "__hash__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__hash__"]], "__hash__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__hash__"]], "__le__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__le__"]], "__le__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__le__"]], "__lt__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__lt__"]], "__lt__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__lt__"]], "__repr__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__repr__"]], "__repr__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__repr__"]], "__sub__() (abjad.math.infinity method)": [[53, "abjad.math.Infinity.__sub__"]], "__sub__() (abjad.math.negativeinfinity method)": [[53, "abjad.math.NegativeInfinity.__sub__"]], "abjad.math": [[53, "module-abjad.math"]], "all_are_equal() (in module abjad.math)": [[53, "abjad.math.all_are_equal"]], "all_are_integer_equivalent() (in module abjad.math)": [[53, "abjad.math.all_are_integer_equivalent"]], "all_are_integer_equivalent_numbers() (in module abjad.math)": [[53, "abjad.math.all_are_integer_equivalent_numbers"]], "all_are_nonnegative_integer_equivalent_numbers() (in module abjad.math)": [[53, "abjad.math.all_are_nonnegative_integer_equivalent_numbers"]], "all_are_nonnegative_integer_powers_of_two() (in module abjad.math)": [[53, "abjad.math.all_are_nonnegative_integer_powers_of_two"]], "all_are_nonnegative_integers() (in module abjad.math)": [[53, "abjad.math.all_are_nonnegative_integers"]], "all_are_pairs_of_types() (in module abjad.math)": [[53, "abjad.math.all_are_pairs_of_types"]], "all_are_positive_integers() (in module abjad.math)": [[53, "abjad.math.all_are_positive_integers"]], "are_relatively_prime() (in module abjad.math)": [[53, "abjad.math.are_relatively_prime"]], "arithmetic_mean() (in module abjad.math)": [[53, "abjad.math.arithmetic_mean"]], "binomial_coefficient() (in module abjad.math)": [[53, "abjad.math.binomial_coefficient"]], "cumulative_products() (in module abjad.math)": [[53, "abjad.math.cumulative_products"]], "cumulative_sums() (in module abjad.math)": [[53, "abjad.math.cumulative_sums"]], "difference_series() (in module abjad.math)": [[53, "abjad.math.difference_series"]], "divisors() (in module abjad.math)": [[53, "abjad.math.divisors"]], "factors() (in module abjad.math)": [[53, "abjad.math.factors"]], "fraction_to_proper_fraction() (in module abjad.math)": [[53, "abjad.math.fraction_to_proper_fraction"]], "greatest_common_divisor() (in module abjad.math)": [[53, "abjad.math.greatest_common_divisor"]], "greatest_power_of_two_less_equal() (in module abjad.math)": [[53, "abjad.math.greatest_power_of_two_less_equal"]], "integer_equivalent_number_to_integer() (in module abjad.math)": [[53, "abjad.math.integer_equivalent_number_to_integer"]], "integer_to_base_k_tuple() (in module abjad.math)": [[53, "abjad.math.integer_to_base_k_tuple"]], "integer_to_binary_string() (in module abjad.math)": [[53, "abjad.math.integer_to_binary_string"]], "is_assignable_integer() (in module abjad.math)": [[53, "abjad.math.is_assignable_integer"]], "is_integer_equivalent() (in module abjad.math)": [[53, "abjad.math.is_integer_equivalent"]], "is_integer_equivalent_n_tuple() (in module abjad.math)": [[53, "abjad.math.is_integer_equivalent_n_tuple"]], "is_integer_equivalent_number() (in module abjad.math)": [[53, "abjad.math.is_integer_equivalent_number"]], "is_nonnegative_integer() (in module abjad.math)": [[53, "abjad.math.is_nonnegative_integer"]], "is_nonnegative_integer_equivalent_number() (in module abjad.math)": [[53, "abjad.math.is_nonnegative_integer_equivalent_number"]], "is_nonnegative_integer_power_of_two() (in module abjad.math)": [[53, "abjad.math.is_nonnegative_integer_power_of_two"]], "is_positive_integer() (in module abjad.math)": [[53, "abjad.math.is_positive_integer"]], "is_positive_integer_equivalent_number() (in module abjad.math)": [[53, "abjad.math.is_positive_integer_equivalent_number"]], "is_positive_integer_power_of_two() (in module abjad.math)": [[53, "abjad.math.is_positive_integer_power_of_two"]], "least_common_multiple() (in module abjad.math)": [[53, "abjad.math.least_common_multiple"]], "partition_integer_into_canonic_parts() (in module abjad.math)": [[53, "abjad.math.partition_integer_into_canonic_parts"]], "sign() (in module abjad.math)": [[53, "abjad.math.sign"]], "weight() (in module abjad.math)": [[53, "abjad.math.weight"]], "yield_all_compositions_of_integer() (in module abjad.math)": [[53, "abjad.math.yield_all_compositions_of_integer"]], "meter (class in abjad.meter)": [[54, "abjad.meter.Meter"]], "metricaccentkernel (class in abjad.meter)": [[54, "abjad.meter.MetricAccentKernel"]], "__call__() (abjad.meter.metricaccentkernel method)": [[54, "abjad.meter.MetricAccentKernel.__call__"]], "__eq__() (abjad.meter.meter method)": [[54, "abjad.meter.Meter.__eq__"]], "__eq__() (abjad.meter.metricaccentkernel method)": [[54, "abjad.meter.MetricAccentKernel.__eq__"]], "__graph__() (abjad.meter.meter method)": [[54, "abjad.meter.Meter.__graph__"]], "__hash__() (abjad.meter.meter method)": [[54, "abjad.meter.Meter.__hash__"]], "__hash__() (abjad.meter.metricaccentkernel method)": [[54, "abjad.meter.MetricAccentKernel.__hash__"]], "__iter__() (abjad.meter.meter method)": [[54, "abjad.meter.Meter.__iter__"]], "__repr__() (abjad.meter.meter method)": [[54, "abjad.meter.Meter.__repr__"]], "__repr__() (abjad.meter.metricaccentkernel method)": [[54, "abjad.meter.MetricAccentKernel.__repr__"]], "abjad.meter": [[54, "module-abjad.meter"]], "count_offsets() (abjad.meter.metricaccentkernel static method)": [[54, "abjad.meter.MetricAccentKernel.count_offsets"]], "denominator (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.denominator"]], "depthwise_offset_inventory (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.depthwise_offset_inventory"]], "duration (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.duration"]], "duration (abjad.meter.metricaccentkernel attribute)": [[54, "abjad.meter.MetricAccentKernel.duration"]], "fit_meters() (abjad.meter.meter static method)": [[54, "abjad.meter.Meter.fit_meters"]], "fraction (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.fraction"]], "from_meter() (abjad.meter.metricaccentkernel static method)": [[54, "abjad.meter.MetricAccentKernel.from_meter"]], "generate_offset_kernel_to_denominator() (abjad.meter.meter method)": [[54, "abjad.meter.Meter.generate_offset_kernel_to_denominator"]], "illustrate_meter_list() (in module abjad.meter)": [[54, "abjad.meter.illustrate_meter_list"]], "implied_time_signature (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.implied_time_signature"]], "increase_monotonic (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.increase_monotonic"]], "is_compound (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.is_compound"]], "is_simple (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.is_simple"]], "kernel (abjad.meter.metricaccentkernel attribute)": [[54, "abjad.meter.MetricAccentKernel.kernel"]], "numerator (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.numerator"]], "pair (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.pair"]], "preferred_boundary_depth (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.preferred_boundary_depth"]], "pretty_rtm_format (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.pretty_rtm_format"]], "rewrite_meter() (abjad.meter.meter static method)": [[54, "abjad.meter.Meter.rewrite_meter"]], "root_node (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.root_node"]], "rtm_format (abjad.meter.meter attribute)": [[54, "abjad.meter.Meter.rtm_format"]], "metricmodulation (class in abjad.metricmodulation)": [[55, "abjad.metricmodulation.MetricModulation"]], "__eq__() (abjad.metricmodulation.metricmodulation method)": [[55, "abjad.metricmodulation.MetricModulation.__eq__"]], "__hash__() (abjad.metricmodulation.metricmodulation method)": [[55, "abjad.metricmodulation.MetricModulation.__hash__"]], "__repr__() (abjad.metricmodulation.metricmodulation method)": [[55, "abjad.metricmodulation.MetricModulation.__repr__"]], "abjad.metricmodulation": [[55, "module-abjad.metricmodulation"]], "hide (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.hide"]], "left_markup (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.left_markup"]], "left_rhythm (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.left_rhythm"]], "ratio (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.ratio"]], "right_markup (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.right_markup"]], "right_rhythm (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.right_rhythm"]], "scale (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.scale"]], "tweaks (abjad.metricmodulation.metricmodulation attribute)": [[55, "abjad.metricmodulation.MetricModulation.tweaks"]], "abjad.mutate": [[56, "module-abjad.mutate"]], "copy() (in module abjad.mutate)": [[56, "abjad.mutate.copy"]], "eject_contents() (in module abjad.mutate)": [[56, "abjad.mutate.eject_contents"]], "extract() (in module abjad.mutate)": [[56, "abjad.mutate.extract"]], "fuse() (in module abjad.mutate)": [[56, "abjad.mutate.fuse"]], "logical_tie_to_tuplet() (in module abjad.mutate)": [[56, "abjad.mutate.logical_tie_to_tuplet"]], "replace() (in module abjad.mutate)": [[56, "abjad.mutate.replace"]], "scale() (in module abjad.mutate)": [[56, "abjad.mutate.scale"]], "split() (in module abjad.mutate)": [[56, "abjad.mutate.split"]], "swap() (in module abjad.mutate)": [[56, "abjad.mutate.swap"]], "transpose() (in module abjad.mutate)": [[56, "abjad.mutate.transpose"]], "wrap() (in module abjad.mutate)": [[56, "abjad.mutate.wrap"]], "onbeatgracecontainer (class in abjad.obgc)": [[57, "abjad.obgc.OnBeatGraceContainer"]], "__contains__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__contains__"]], "__copy__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__copy__"]], "__delitem__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__delitem__"]], "__getitem__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__getitem__"]], "__iter__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__iter__"]], "__len__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__len__"]], "__repr__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__repr__"]], "__setitem__() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.__setitem__"]], "abjad.obgc": [[57, "module-abjad.obgc"]], "append() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.append"]], "components (abjad.obgc.onbeatgracecontainer attribute)": [[57, "abjad.obgc.OnBeatGraceContainer.components"]], "extend() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.extend"]], "identifier (abjad.obgc.onbeatgracecontainer attribute)": [[57, "abjad.obgc.OnBeatGraceContainer.identifier"]], "index() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.index"]], "insert() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.insert"]], "leaf_duration (abjad.obgc.onbeatgracecontainer attribute)": [[57, "abjad.obgc.OnBeatGraceContainer.leaf_duration"]], "name (abjad.obgc.onbeatgracecontainer attribute)": [[57, "abjad.obgc.OnBeatGraceContainer.name"]], "on_beat_grace_container() (in module abjad.obgc)": [[57, "abjad.obgc.on_beat_grace_container"]], "pop() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.pop"]], "remove() (abjad.obgc.onbeatgracecontainer method)": [[57, "abjad.obgc.OnBeatGraceContainer.remove"]], "simultaneous (abjad.obgc.onbeatgracecontainer attribute)": [[57, "abjad.obgc.OnBeatGraceContainer.simultaneous"]], "tag (abjad.obgc.onbeatgracecontainer attribute)": [[57, "abjad.obgc.OnBeatGraceContainer.tag"]], "interface (class in abjad.overrides)": [[58, "abjad.overrides.Interface"]], "lilypondoverride (class in abjad.overrides)": [[58, "abjad.overrides.LilyPondOverride"]], "lilypondsetting (class in abjad.overrides)": [[58, "abjad.overrides.LilyPondSetting"]], "overrideinterface (class in abjad.overrides)": [[58, "abjad.overrides.OverrideInterface"]], "settinginterface (class in abjad.overrides)": [[58, "abjad.overrides.SettingInterface"]], "__eq__() (abjad.overrides.interface method)": [[58, "abjad.overrides.Interface.__eq__"]], "__eq__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__eq__"]], "__eq__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__eq__"]], "__eq__() (abjad.overrides.overrideinterface method)": [[58, "abjad.overrides.OverrideInterface.__eq__"]], "__eq__() (abjad.overrides.settinginterface method)": [[58, "abjad.overrides.SettingInterface.__eq__"]], "__ge__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__ge__"]], "__ge__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__ge__"]], "__getattr__() (abjad.overrides.overrideinterface method)": [[58, "abjad.overrides.OverrideInterface.__getattr__"]], "__getattr__() (abjad.overrides.settinginterface method)": [[58, "abjad.overrides.SettingInterface.__getattr__"]], "__gt__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__gt__"]], "__gt__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__gt__"]], "__hash__() (abjad.overrides.interface method)": [[58, "abjad.overrides.Interface.__hash__"]], "__hash__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__hash__"]], "__hash__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__hash__"]], "__hash__() (abjad.overrides.overrideinterface method)": [[58, "abjad.overrides.OverrideInterface.__hash__"]], "__hash__() (abjad.overrides.settinginterface method)": [[58, "abjad.overrides.SettingInterface.__hash__"]], "__le__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__le__"]], "__le__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__le__"]], "__lt__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__lt__"]], "__lt__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__lt__"]], "__post_init__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__post_init__"]], "__post_init__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__post_init__"]], "__repr__() (abjad.overrides.interface method)": [[58, "abjad.overrides.Interface.__repr__"]], "__repr__() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.__repr__"]], "__repr__() (abjad.overrides.lilypondsetting method)": [[58, "abjad.overrides.LilyPondSetting.__repr__"]], "__repr__() (abjad.overrides.overrideinterface method)": [[58, "abjad.overrides.OverrideInterface.__repr__"]], "__repr__() (abjad.overrides.settinginterface method)": [[58, "abjad.overrides.SettingInterface.__repr__"]], "__setattr__() (abjad.overrides.overrideinterface method)": [[58, "abjad.overrides.OverrideInterface.__setattr__"]], "abjad.overrides": [[58, "module-abjad.overrides"]], "format_pieces (abjad.overrides.lilypondsetting attribute)": [[58, "abjad.overrides.LilyPondSetting.format_pieces"]], "override() (in module abjad.overrides)": [[58, "abjad.overrides.override"]], "override_format_pieces (abjad.overrides.lilypondoverride attribute)": [[58, "abjad.overrides.LilyPondOverride.override_format_pieces"]], "override_string (abjad.overrides.lilypondoverride attribute)": [[58, "abjad.overrides.LilyPondOverride.override_string"]], "revert_format_pieces (abjad.overrides.lilypondoverride attribute)": [[58, "abjad.overrides.LilyPondOverride.revert_format_pieces"]], "revert_string (abjad.overrides.lilypondoverride attribute)": [[58, "abjad.overrides.LilyPondOverride.revert_string"]], "setting() (in module abjad.overrides)": [[58, "abjad.overrides.setting"]], "tweak_string() (abjad.overrides.lilypondoverride method)": [[58, "abjad.overrides.LilyPondOverride.tweak_string"]], "parentage (class in abjad.parentage)": [[59, "abjad.parentage.Parentage"]], "__class_getitem__() (abjad.parentage.parentage class method)": [[59, "abjad.parentage.Parentage.__class_getitem__"]], "__contains__() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.__contains__"]], "__getitem__() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.__getitem__"]], "__iter__() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.__iter__"]], "__len__() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.__len__"]], "__repr__() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.__repr__"]], "__reversed__() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.__reversed__"]], "abjad.parentage": [[59, "module-abjad.parentage"]], "component (abjad.parentage.parentage attribute)": [[59, "abjad.parentage.Parentage.component"]], "components (abjad.parentage.parentage attribute)": [[59, "abjad.parentage.Parentage.components"]], "count() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.count"]], "get() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.get"]], "index() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.index"]], "logical_voice() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.logical_voice"]], "orphan (abjad.parentage.parentage attribute)": [[59, "abjad.parentage.Parentage.orphan"]], "parent (abjad.parentage.parentage attribute)": [[59, "abjad.parentage.Parentage.parent"]], "prolation (abjad.parentage.parentage attribute)": [[59, "abjad.parentage.Parentage.prolation"]], "root (abjad.parentage.parentage attribute)": [[59, "abjad.parentage.Parentage.root"]], "score_index() (abjad.parentage.parentage method)": [[59, "abjad.parentage.Parentage.score_index"]], "parser (class in abjad.parsers.base)": [[60, "abjad.parsers.base.Parser"]], "__call__() (abjad.parsers.base.parser method)": [[60, "abjad.parsers.base.Parser.__call__"]], "abjad.parsers.base": [[60, "module-abjad.parsers.base"]], "debug (abjad.parsers.base.parser attribute)": [[60, "abjad.parsers.base.Parser.debug"]], "lexer (abjad.parsers.base.parser attribute)": [[60, "abjad.parsers.base.Parser.lexer"]], "logger (abjad.parsers.base.parser attribute)": [[60, "abjad.parsers.base.Parser.logger"]], "logger_path (abjad.parsers.base.parser attribute)": [[60, "abjad.parsers.base.Parser.logger_path"]], "output_path (abjad.parsers.base.parser attribute)": [[60, "abjad.parsers.base.Parser.output_path"]], "parser (abjad.parsers.base.parser attribute)": [[60, "abjad.parsers.base.Parser.parser"]], "pickle_path (abjad.parsers.base.parser attribute)": [[60, "abjad.parsers.base.Parser.pickle_path"]], "tokenize() (abjad.parsers.base.parser method)": [[60, "abjad.parsers.base.Parser.tokenize"]], "abjad.parsers": [[61, "module-abjad.parsers"]], "abjad.parsers.parse": [[62, "module-abjad.parsers.parse"]], "parse() (in module abjad.parsers.parse)": [[62, "abjad.parsers.parse.parse"]], "contextspeccedmusic (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.ContextSpeccedMusic"]], "guileproxy (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.GuileProxy"]], "lilypondduration (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.LilyPondDuration"]], "lilypondevent (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.LilyPondEvent"]], "lilypondfraction (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.LilyPondFraction"]], "lilypondgrammargenerator (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.LilyPondGrammarGenerator"]], "lilypondlexicaldefinition (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition"]], "lilypondparser (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.LilyPondParser"]], "lilypondsyntacticaldefinition (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition"]], "markupcommand (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.MarkupCommand"]], "music (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.Music"]], "sequentialmusic (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.SequentialMusic"]], "simultaneousmusic (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.SimultaneousMusic"]], "syntaxnode (class in abjad.parsers.parser)": [[63, "abjad.parsers.parser.SyntaxNode"]], "__call__() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.__call__"]], "__call__() (abjad.parsers.parser.lilypondgrammargenerator method)": [[63, "abjad.parsers.parser.LilyPondGrammarGenerator.__call__"]], "__call__() (abjad.parsers.parser.lilypondparser method)": [[63, "abjad.parsers.parser.LilyPondParser.__call__"]], "__eq__() (abjad.parsers.parser.markupcommand method)": [[63, "abjad.parsers.parser.MarkupCommand.__eq__"]], "__getitem__() (abjad.parsers.parser.syntaxnode method)": [[63, "abjad.parsers.parser.SyntaxNode.__getitem__"]], "__hash__() (abjad.parsers.parser.markupcommand method)": [[63, "abjad.parsers.parser.MarkupCommand.__hash__"]], "__len__() (abjad.parsers.parser.syntaxnode method)": [[63, "abjad.parsers.parser.SyntaxNode.__len__"]], "__repr__() (abjad.parsers.parser.lilypondevent method)": [[63, "abjad.parsers.parser.LilyPondEvent.__repr__"]], "__repr__() (abjad.parsers.parser.markupcommand method)": [[63, "abjad.parsers.parser.MarkupCommand.__repr__"]], "__repr__() (abjad.parsers.parser.syntaxnode method)": [[63, "abjad.parsers.parser.SyntaxNode.__repr__"]], "abjad.parsers.parser": [[63, "module-abjad.parsers.parser"]], "acciaccatura() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.acciaccatura"]], "appoggiatura() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.appoggiatura"]], "available_languages (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.available_languages"]], "bar() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.bar"]], "breathe() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.breathe"]], "clef() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.clef"]], "construct() (abjad.parsers.parser.contextspeccedmusic method)": [[63, "abjad.parsers.parser.ContextSpeccedMusic.construct"]], "construct() (abjad.parsers.parser.sequentialmusic method)": [[63, "abjad.parsers.parser.SequentialMusic.construct"]], "debug (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.debug"]], "default_language (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.default_language"]], "grace() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.grace"]], "key() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.key"]], "known_contexts (abjad.parsers.parser.contextspeccedmusic attribute)": [[63, "abjad.parsers.parser.ContextSpeccedMusic.known_contexts"]], "language() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.language"]], "lexer (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.lexer"]], "lexer_rules_object (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.lexer_rules_object"]], "list_known_contexts() (abjad.parsers.parser.lilypondparser static method)": [[63, "abjad.parsers.parser.LilyPondParser.list_known_contexts"]], "list_known_dynamics() (abjad.parsers.parser.lilypondparser static method)": [[63, "abjad.parsers.parser.LilyPondParser.list_known_dynamics"]], "list_known_grobs() (abjad.parsers.parser.lilypondparser static method)": [[63, "abjad.parsers.parser.LilyPondParser.list_known_grobs"]], "list_known_languages() (abjad.parsers.parser.lilypondparser static method)": [[63, "abjad.parsers.parser.LilyPondParser.list_known_languages"]], "list_known_markup_functions() (abjad.parsers.parser.lilypondparser static method)": [[63, "abjad.parsers.parser.LilyPondParser.list_known_markup_functions"]], "list_known_music_functions() (abjad.parsers.parser.lilypondparser static method)": [[63, "abjad.parsers.parser.LilyPondParser.list_known_music_functions"]], "logger (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.logger"]], "logger_path (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.logger_path"]], "makeclusters() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.makeClusters"]], "mark() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.mark"]], "onevoice() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.oneVoice"]], "output_path (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.output_path"]], "p_assignment__assignment_id__chr61__identifier_init() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_assignment__assignment_id__Chr61__identifier_init"]], "p_assignment__embedded_scm() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_assignment__embedded_scm"]], "p_assignment_id__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_assignment_id__STRING"]], "p_bare_number__real__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_bare_number__REAL__NUMBER_IDENTIFIER"]], "p_bare_number__unsigned__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_bare_number__UNSIGNED__NUMBER_IDENTIFIER"]], "p_bare_number__bare_number_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_bare_number__bare_number_closed"]], "p_bare_number_closed__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_bare_number_closed__NUMBER_IDENTIFIER"]], "p_bare_number_closed__real() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_bare_number_closed__REAL"]], "p_bare_number_closed__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_bare_number_closed__UNSIGNED"]], "p_bare_unsigned__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_bare_unsigned__UNSIGNED"]], "p_braced_music_list__chr123__music_list__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_braced_music_list__Chr123__music_list__Chr125"]], "p_chord_body__angle_open__chord_body_elements__angle_close() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_chord_body__ANGLE_OPEN__chord_body_elements__ANGLE_CLOSE"]], "p_chord_body_element__music_function_chord_body() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_chord_body_element__music_function_chord_body"]], "p_chord_body_element__pitch__exclamations__questions__octave_check__post_events() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_chord_body_element__pitch__exclamations__questions__octave_check__post_events"]], "p_chord_body_elements__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_chord_body_elements__Empty"]], "p_chord_body_elements__chord_body_elements__chord_body_element() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_chord_body_elements__chord_body_elements__chord_body_element"]], "p_closed_music__complex_music_prefix__closed_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_closed_music__complex_music_prefix__closed_music"]], "p_closed_music__music_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_closed_music__music_bare"]], "p_command_element__chr124() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_command_element__Chr124"]], "p_command_element__e_backslash() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_command_element__E_BACKSLASH"]], "p_command_element__command_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_command_element__command_event"]], "p_command_event__tempo_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_command_event__tempo_event"]], "p_complex_music__complex_music_prefix__music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_complex_music__complex_music_prefix__music"]], "p_complex_music__music_function_call() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_complex_music__music_function_call"]], "p_complex_music_prefix__context__simple_string__optional_id__optional_context_mod() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_complex_music_prefix__CONTEXT__simple_string__optional_id__optional_context_mod"]], "p_complex_music_prefix__newcontext__simple_string__optional_id__optional_context_mod() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_complex_music_prefix__NEWCONTEXT__simple_string__optional_id__optional_context_mod"]], "p_composite_music__complex_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_composite_music__complex_music"]], "p_composite_music__music_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_composite_music__music_bare"]], "p_context_change__change__string__chr61__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_change__CHANGE__STRING__Chr61__STRING"]], "p_context_def_spec_block__context__chr123__context_def_spec_body__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_def_spec_block__CONTEXT__Chr123__context_def_spec_body__Chr125"]], "p_context_def_spec_body__context_def_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_def_spec_body__CONTEXT_DEF_IDENTIFIER"]], "p_context_def_spec_body__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_def_spec_body__Empty"]], "p_context_def_spec_body__context_def_spec_body__context_mod() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_def_spec_body__context_def_spec_body__context_mod"]], "p_context_def_spec_body__context_def_spec_body__context_modification() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_def_spec_body__context_def_spec_body__context_modification"]], "p_context_def_spec_body__context_def_spec_body__embedded_scm() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_def_spec_body__context_def_spec_body__embedded_scm"]], "p_context_mod__property_operation() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_mod__property_operation"]], "p_context_mod_list__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_mod_list__Empty"]], "p_context_mod_list__context_mod_list__context_mod_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_mod_list__context_mod_list__CONTEXT_MOD_IDENTIFIER"]], "p_context_mod_list__context_mod_list__context_mod() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_mod_list__context_mod_list__context_mod"]], "p_context_mod_list__context_mod_list__embedded_scm() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_mod_list__context_mod_list__embedded_scm"]], "p_context_modification__context_mod_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_modification__CONTEXT_MOD_IDENTIFIER"]], "p_context_modification__with__context_mod_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_modification__WITH__CONTEXT_MOD_IDENTIFIER"]], "p_context_modification__with__chr123__context_mod_list__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_modification__WITH__Chr123__context_mod_list__Chr125"]], "p_context_modification__with__embedded_scm_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_modification__WITH__embedded_scm_closed"]], "p_context_prop_spec__simple_string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_prop_spec__simple_string"]], "p_context_prop_spec__simple_string__chr46__simple_string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_context_prop_spec__simple_string__Chr46__simple_string"]], "p_direction_less_char__chr126() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__Chr126"]], "p_direction_less_char__chr40() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__Chr40"]], "p_direction_less_char__chr41() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__Chr41"]], "p_direction_less_char__chr91() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__Chr91"]], "p_direction_less_char__chr93() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__Chr93"]], "p_direction_less_char__e_angle_close() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__E_ANGLE_CLOSE"]], "p_direction_less_char__e_angle_open() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__E_ANGLE_OPEN"]], "p_direction_less_char__e_close() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__E_CLOSE"]], "p_direction_less_char__e_exclamation() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__E_EXCLAMATION"]], "p_direction_less_char__e_open() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_char__E_OPEN"]], "p_direction_less_event__event_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_event__EVENT_IDENTIFIER"]], "p_direction_less_event__direction_less_char() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_event__direction_less_char"]], "p_direction_less_event__event_function_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_event__event_function_event"]], "p_direction_less_event__tremolo_type() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_less_event__tremolo_type"]], "p_direction_reqd_event__gen_text_def() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_reqd_event__gen_text_def"]], "p_direction_reqd_event__script_abbreviation() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_direction_reqd_event__script_abbreviation"]], "p_dots__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_dots__Empty"]], "p_dots__dots__chr46() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_dots__dots__Chr46"]], "p_duration_length__multiplied_duration() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_duration_length__multiplied_duration"]], "p_embedded_scm__embedded_scm_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm__embedded_scm_bare"]], "p_embedded_scm__scm_function_call() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm__scm_function_call"]], "p_embedded_scm_arg__embedded_scm_bare_arg() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_arg__embedded_scm_bare_arg"]], "p_embedded_scm_arg__music_arg() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_arg__music_arg"]], "p_embedded_scm_arg__scm_function_call() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_arg__scm_function_call"]], "p_embedded_scm_arg_closed__closed_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_arg_closed__closed_music"]], "p_embedded_scm_arg_closed__embedded_scm_bare_arg() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_arg_closed__embedded_scm_bare_arg"]], "p_embedded_scm_arg_closed__scm_function_call_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_arg_closed__scm_function_call_closed"]], "p_embedded_scm_bare__scm_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare__SCM_IDENTIFIER"]], "p_embedded_scm_bare__scm_token() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare__SCM_TOKEN"]], "p_embedded_scm_bare_arg__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__STRING"]], "p_embedded_scm_bare_arg__string_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__STRING_IDENTIFIER"]], "p_embedded_scm_bare_arg__context_def_spec_block() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__context_def_spec_block"]], "p_embedded_scm_bare_arg__context_modification() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__context_modification"]], "p_embedded_scm_bare_arg__embedded_scm_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__embedded_scm_bare"]], "p_embedded_scm_bare_arg__full_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__full_markup"]], "p_embedded_scm_bare_arg__full_markup_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__full_markup_list"]], "p_embedded_scm_bare_arg__output_def() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__output_def"]], "p_embedded_scm_bare_arg__score_block() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_bare_arg__score_block"]], "p_embedded_scm_chord_body__scm_function__music_function_chord_body_arglist() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_chord_body__SCM_FUNCTION__music_function_chord_body_arglist"]], "p_embedded_scm_chord_body__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_chord_body__bare_number"]], "p_embedded_scm_chord_body__chord_body_element() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_chord_body__chord_body_element"]], "p_embedded_scm_chord_body__embedded_scm_bare_arg() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_chord_body__embedded_scm_bare_arg"]], "p_embedded_scm_chord_body__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_chord_body__fraction"]], "p_embedded_scm_closed__embedded_scm_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_closed__embedded_scm_bare"]], "p_embedded_scm_closed__scm_function_call_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_embedded_scm_closed__scm_function_call_closed"]], "p_error() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_error"]], "p_event_chord__chord_repetition__optional_notemode_duration__post_events() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_event_chord__CHORD_REPETITION__optional_notemode_duration__post_events"]], "p_event_chord__multi_measure_rest__optional_notemode_duration__post_events() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_event_chord__MULTI_MEASURE_REST__optional_notemode_duration__post_events"]], "p_event_chord__command_element() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_event_chord__command_element"]], "p_event_chord__note_chord_element() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_event_chord__note_chord_element"]], "p_event_chord__simple_chord_elements__post_events() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_event_chord__simple_chord_elements__post_events"]], "p_event_function_event__event_function__function_arglist_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_event_function_event__EVENT_FUNCTION__function_arglist_closed"]], "p_exclamations__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_exclamations__Empty"]], "p_exclamations__exclamations__chr33() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_exclamations__exclamations__Chr33"]], "p_fingering__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_fingering__UNSIGNED"]], "p_fraction__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_fraction__FRACTION"]], "p_fraction__unsigned__chr47__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_fraction__UNSIGNED__Chr47__UNSIGNED"]], "p_full_markup__markup_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_full_markup__MARKUP_IDENTIFIER"]], "p_full_markup__markup__markup_top() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_full_markup__MARKUP__markup_top"]], "p_full_markup_list__markuplist_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_full_markup_list__MARKUPLIST_IDENTIFIER"]], "p_full_markup_list__markuplist__markup_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_full_markup_list__MARKUPLIST__markup_list"]], "p_function_arglist__function_arglist_common() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist__function_arglist_common"]], "p_function_arglist__function_arglist_nonbackup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist__function_arglist_nonbackup"]], "p_function_arglist_backup__expect_optional__expect_duration__function_arglist_closed_keep__duration_length() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_closed_keep__duration_length"]], "p_function_arglist_backup__expect_optional__expect_pitch__function_arglist_keep__pitch_also_in_chords() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_keep__pitch_also_in_chords"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_backup__backup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_backup__BACKUP"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__chr45__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__Chr45__NUMBER_IDENTIFIER"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__chr45__real() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__Chr45__REAL"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__chr45__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__Chr45__UNSIGNED"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__FRACTION"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__NUMBER_IDENTIFIER"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__real() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__REAL"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__UNSIGNED"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_closed_keep__post_event_nofinger() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed_keep__post_event_nofinger"]], "p_function_arglist_backup__expect_optional__expect_scm__function_arglist_keep__embedded_scm_arg_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_keep__embedded_scm_arg_closed"]], "p_function_arglist_backup__function_arglist_backup__reparse__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__function_arglist_backup__REPARSE__bare_number"]], "p_function_arglist_backup__function_arglist_backup__reparse__embedded_scm_arg_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__function_arglist_backup__REPARSE__embedded_scm_arg_closed"]], "p_function_arglist_backup__function_arglist_backup__reparse__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_backup__function_arglist_backup__REPARSE__fraction"]], "p_function_arglist_bare__expect_duration__function_arglist_closed_optional__duration_length() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_bare__EXPECT_DURATION__function_arglist_closed_optional__duration_length"]], "p_function_arglist_bare__expect_no_more_args() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_bare__EXPECT_NO_MORE_ARGS"]], "p_function_arglist_bare__expect_optional__expect_duration__function_arglist_skip__default() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_bare__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_skip__DEFAULT"]], "p_function_arglist_bare__expect_optional__expect_pitch__function_arglist_skip__default() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_bare__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_skip__DEFAULT"]], "p_function_arglist_bare__expect_optional__expect_scm__function_arglist_skip__default() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_bare__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_skip__DEFAULT"]], "p_function_arglist_bare__expect_pitch__function_arglist_optional__pitch_also_in_chords() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_bare__EXPECT_PITCH__function_arglist_optional__pitch_also_in_chords"]], "p_function_arglist_closed__function_arglist_closed_common() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed__function_arglist_closed_common"]], "p_function_arglist_closed__function_arglist_nonbackup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed__function_arglist_nonbackup"]], "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__chr45__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__Chr45__NUMBER_IDENTIFIER"]], "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__chr45__real() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__Chr45__REAL"]], "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__chr45__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__Chr45__UNSIGNED"]], "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__bare_number"]], "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__fraction"]], "p_function_arglist_closed_common__expect_scm__function_arglist_closed_optional__post_event_nofinger() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__EXPECT_SCM__function_arglist_closed_optional__post_event_nofinger"]], "p_function_arglist_closed_common__expect_scm__function_arglist_optional__embedded_scm_arg_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__EXPECT_SCM__function_arglist_optional__embedded_scm_arg_closed"]], "p_function_arglist_closed_common__function_arglist_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_common__function_arglist_bare"]], "p_function_arglist_closed_keep__function_arglist_backup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_keep__function_arglist_backup"]], "p_function_arglist_closed_keep__function_arglist_closed_common() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_keep__function_arglist_closed_common"]], "p_function_arglist_closed_optional__expect_optional__expect_duration__function_arglist_closed_optional() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_optional__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_closed_optional"]], "p_function_arglist_closed_optional__expect_optional__expect_pitch__function_arglist_closed_optional() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_optional__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_closed_optional"]], "p_function_arglist_closed_optional__function_arglist_backup__backup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_optional__function_arglist_backup__BACKUP"]], "p_function_arglist_closed_optional__function_arglist_closed_keep() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_closed_optional__function_arglist_closed_keep"]], "p_function_arglist_common__expect_scm__function_arglist_closed_optional__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common__EXPECT_SCM__function_arglist_closed_optional__bare_number"]], "p_function_arglist_common__expect_scm__function_arglist_closed_optional__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common__EXPECT_SCM__function_arglist_closed_optional__fraction"]], "p_function_arglist_common__expect_scm__function_arglist_closed_optional__post_event_nofinger() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common__EXPECT_SCM__function_arglist_closed_optional__post_event_nofinger"]], "p_function_arglist_common__expect_scm__function_arglist_optional__embedded_scm_arg() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common__EXPECT_SCM__function_arglist_optional__embedded_scm_arg"]], "p_function_arglist_common__function_arglist_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common__function_arglist_bare"]], "p_function_arglist_common__function_arglist_common_minus() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common__function_arglist_common_minus"]], "p_function_arglist_common_minus__expect_scm__function_arglist_closed_optional__chr45__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common_minus__EXPECT_SCM__function_arglist_closed_optional__Chr45__NUMBER_IDENTIFIER"]], "p_function_arglist_common_minus__expect_scm__function_arglist_closed_optional__chr45__real() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common_minus__EXPECT_SCM__function_arglist_closed_optional__Chr45__REAL"]], "p_function_arglist_common_minus__expect_scm__function_arglist_closed_optional__chr45__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common_minus__EXPECT_SCM__function_arglist_closed_optional__Chr45__UNSIGNED"]], "p_function_arglist_common_minus__function_arglist_common_minus__reparse__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_common_minus__function_arglist_common_minus__REPARSE__bare_number"]], "p_function_arglist_keep__function_arglist_backup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_keep__function_arglist_backup"]], "p_function_arglist_keep__function_arglist_common() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_keep__function_arglist_common"]], "p_function_arglist_nonbackup__expect_optional__expect_duration__function_arglist_closed__duration_length() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_closed__duration_length"]], "p_function_arglist_nonbackup__expect_optional__expect_pitch__function_arglist__pitch_also_in_chords() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist__pitch_also_in_chords"]], "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist__embedded_scm_arg_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist__embedded_scm_arg_closed"]], "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__chr45__number_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__Chr45__NUMBER_IDENTIFIER"]], "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__chr45__real() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__Chr45__REAL"]], "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__chr45__unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__Chr45__UNSIGNED"]], "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__FRACTION"]], "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__bare_number_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__bare_number_closed"]], "p_function_arglist_nonbackup__expect_optional__expect_scm__function_arglist_closed__post_event_nofinger() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_nonbackup__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_closed__post_event_nofinger"]], "p_function_arglist_optional__expect_optional__expect_duration__function_arglist_optional() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_optional__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_optional"]], "p_function_arglist_optional__expect_optional__expect_pitch__function_arglist_optional() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_optional__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_optional"]], "p_function_arglist_optional__function_arglist_backup__backup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_optional__function_arglist_backup__BACKUP"]], "p_function_arglist_optional__function_arglist_keep() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_optional__function_arglist_keep"]], "p_function_arglist_skip__expect_optional__expect_duration__function_arglist_skip() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_skip__EXPECT_OPTIONAL__EXPECT_DURATION__function_arglist_skip"]], "p_function_arglist_skip__expect_optional__expect_pitch__function_arglist_skip() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_skip__EXPECT_OPTIONAL__EXPECT_PITCH__function_arglist_skip"]], "p_function_arglist_skip__expect_optional__expect_scm__function_arglist_skip() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_skip__EXPECT_OPTIONAL__EXPECT_SCM__function_arglist_skip"]], "p_function_arglist_skip__function_arglist_common() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_function_arglist_skip__function_arglist_common"]], "p_gen_text_def__full_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_gen_text_def__full_markup"]], "p_gen_text_def__simple_string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_gen_text_def__simple_string"]], "p_grouped_music_list__sequential_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_grouped_music_list__sequential_music"]], "p_grouped_music_list__simultaneous_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_grouped_music_list__simultaneous_music"]], "p_identifier_init__context_def_spec_block() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__context_def_spec_block"]], "p_identifier_init__context_modification() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__context_modification"]], "p_identifier_init__embedded_scm() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__embedded_scm"]], "p_identifier_init__full_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__full_markup"]], "p_identifier_init__full_markup_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__full_markup_list"]], "p_identifier_init__music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__music"]], "p_identifier_init__number_expression() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__number_expression"]], "p_identifier_init__output_def() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__output_def"]], "p_identifier_init__post_event_nofinger() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__post_event_nofinger"]], "p_identifier_init__score_block() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__score_block"]], "p_identifier_init__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_identifier_init__string"]], "p_lilypond__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_lilypond__Empty"]], "p_lilypond__lilypond__assignment() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_lilypond__lilypond__assignment"]], "p_lilypond__lilypond__error() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_lilypond__lilypond__error"]], "p_lilypond__lilypond__toplevel_expression() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_lilypond__lilypond__toplevel_expression"]], "p_lilypond_header__header__chr123__lilypond_header_body__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_lilypond_header__HEADER__Chr123__lilypond_header_body__Chr125"]], "p_lilypond_header_body__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_lilypond_header_body__Empty"]], "p_lilypond_header_body__lilypond_header_body__assignment() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_lilypond_header_body__lilypond_header_body__assignment"]], "p_markup__markup_head_1_list__simple_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup__markup_head_1_list__simple_markup"]], "p_markup__simple_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup__simple_markup"]], "p_markup_braced_list__chr123__markup_braced_list_body__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_braced_list__Chr123__markup_braced_list_body__Chr125"]], "p_markup_braced_list_body__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_braced_list_body__Empty"]], "p_markup_braced_list_body__markup_braced_list_body__markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_braced_list_body__markup_braced_list_body__markup"]], "p_markup_braced_list_body__markup_braced_list_body__markup_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_braced_list_body__markup_braced_list_body__markup_list"]], "p_markup_command_basic_arguments__expect_markup_list__markup_command_list_arguments__markup_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_command_basic_arguments__EXPECT_MARKUP_LIST__markup_command_list_arguments__markup_list"]], "p_markup_command_basic_arguments__expect_no_more_args() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_command_basic_arguments__EXPECT_NO_MORE_ARGS"]], "p_markup_command_basic_arguments__expect_scm__markup_command_list_arguments__embedded_scm_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_command_basic_arguments__EXPECT_SCM__markup_command_list_arguments__embedded_scm_closed"]], "p_markup_command_list__markup_list_function__markup_command_list_arguments() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_command_list__MARKUP_LIST_FUNCTION__markup_command_list_arguments"]], "p_markup_command_list_arguments__expect_markup__markup_command_list_arguments__markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_command_list_arguments__EXPECT_MARKUP__markup_command_list_arguments__markup"]], "p_markup_command_list_arguments__markup_command_basic_arguments() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_command_list_arguments__markup_command_basic_arguments"]], "p_markup_composed_list__markup_head_1_list__markup_braced_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_composed_list__markup_head_1_list__markup_braced_list"]], "p_markup_head_1_item__markup_function__expect_markup__markup_command_list_arguments() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_head_1_item__MARKUP_FUNCTION__EXPECT_MARKUP__markup_command_list_arguments"]], "p_markup_head_1_list__markup_head_1_item() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_head_1_list__markup_head_1_item"]], "p_markup_head_1_list__markup_head_1_list__markup_head_1_item() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_head_1_list__markup_head_1_list__markup_head_1_item"]], "p_markup_list__markuplist_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_list__MARKUPLIST_IDENTIFIER"]], "p_markup_list__markup_braced_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_list__markup_braced_list"]], "p_markup_list__markup_command_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_list__markup_command_list"]], "p_markup_list__markup_composed_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_list__markup_composed_list"]], "p_markup_list__markup_scm__markuplist_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_list__markup_scm__MARKUPLIST_IDENTIFIER"]], "p_markup_scm__embedded_scm_bare__backup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_scm__embedded_scm_bare__BACKUP"]], "p_markup_top__markup_head_1_list__simple_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_top__markup_head_1_list__simple_markup"]], "p_markup_top__markup_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_top__markup_list"]], "p_markup_top__simple_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_markup_top__simple_markup"]], "p_multiplied_duration__multiplied_duration__chr42__fraction() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_multiplied_duration__multiplied_duration__Chr42__FRACTION"]], "p_multiplied_duration__multiplied_duration__chr42__bare_unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_multiplied_duration__multiplied_duration__Chr42__bare_unsigned"]], "p_multiplied_duration__steno_duration() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_multiplied_duration__steno_duration"]], "p_music__composite_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music__composite_music"]], "p_music__simple_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music__simple_music"]], "p_music_arg__composite_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_arg__composite_music"]], "p_music_arg__simple_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_arg__simple_music"]], "p_music_bare__music_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_bare__MUSIC_IDENTIFIER"]], "p_music_bare__grouped_music_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_bare__grouped_music_list"]], "p_music_function_call__music_function__function_arglist() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_function_call__MUSIC_FUNCTION__function_arglist"]], "p_music_function_chord_body__music_function__music_function_chord_body_arglist() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_function_chord_body__MUSIC_FUNCTION__music_function_chord_body_arglist"]], "p_music_function_chord_body_arglist__expect_scm__music_function_chord_body_arglist__embedded_scm_chord_body() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_function_chord_body_arglist__EXPECT_SCM__music_function_chord_body_arglist__embedded_scm_chord_body"]], "p_music_function_chord_body_arglist__function_arglist_bare() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_function_chord_body_arglist__function_arglist_bare"]], "p_music_function_event__music_function__function_arglist_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_function_event__MUSIC_FUNCTION__function_arglist_closed"]], "p_music_list__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_list__Empty"]], "p_music_list__music_list__embedded_scm() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_list__music_list__embedded_scm"]], "p_music_list__music_list__error() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_list__music_list__error"]], "p_music_list__music_list__music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_list__music_list__music"]], "p_music_property_def__simple_music_property_def() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_music_property_def__simple_music_property_def"]], "p_note_chord_element__chord_body__optional_notemode_duration__post_events() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_note_chord_element__chord_body__optional_notemode_duration__post_events"]], "p_number_expression__number_expression__chr43__number_term() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_expression__number_expression__Chr43__number_term"]], "p_number_expression__number_expression__chr45__number_term() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_expression__number_expression__Chr45__number_term"]], "p_number_expression__number_term() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_expression__number_term"]], "p_number_factor__chr45__number_factor() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_factor__Chr45__number_factor"]], "p_number_factor__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_factor__bare_number"]], "p_number_term__number_factor() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_term__number_factor"]], "p_number_term__number_factor__chr42__number_factor() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_term__number_factor__Chr42__number_factor"]], "p_number_term__number_factor__chr47__number_factor() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_number_term__number_factor__Chr47__number_factor"]], "p_octave_check__chr61() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_octave_check__Chr61"]], "p_octave_check__chr61__sub_quotes() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_octave_check__Chr61__sub_quotes"]], "p_octave_check__chr61__sup_quotes() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_octave_check__Chr61__sup_quotes"]], "p_octave_check__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_octave_check__Empty"]], "p_optional_context_mod__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_context_mod__Empty"]], "p_optional_context_mod__context_modification() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_context_mod__context_modification"]], "p_optional_id__chr61__simple_string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_id__Chr61__simple_string"]], "p_optional_id__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_id__Empty"]], "p_optional_notemode_duration__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_notemode_duration__Empty"]], "p_optional_notemode_duration__multiplied_duration() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_notemode_duration__multiplied_duration"]], "p_optional_rest__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_rest__Empty"]], "p_optional_rest__rest() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_optional_rest__REST"]], "p_output_def__output_def_body__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def__output_def_body__Chr125"]], "p_output_def_body__output_def_body__assignment() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def_body__output_def_body__assignment"]], "p_output_def_body__output_def_head_with_mode_switch__chr123() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def_body__output_def_head_with_mode_switch__Chr123"]], "p_output_def_body__output_def_head_with_mode_switch__chr123__output_def_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def_body__output_def_head_with_mode_switch__Chr123__OUTPUT_DEF_IDENTIFIER"]], "p_output_def_head__layout() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def_head__LAYOUT"]], "p_output_def_head__midi() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def_head__MIDI"]], "p_output_def_head__paper() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def_head__PAPER"]], "p_output_def_head_with_mode_switch__output_def_head() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_output_def_head_with_mode_switch__output_def_head"]], "p_pitch__pitch_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_pitch__PITCH_IDENTIFIER"]], "p_pitch__steno_pitch() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_pitch__steno_pitch"]], "p_pitch_also_in_chords__pitch() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_pitch_also_in_chords__pitch"]], "p_pitch_also_in_chords__steno_tonic_pitch() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_pitch_also_in_chords__steno_tonic_pitch"]], "p_post_event__chr45__fingering() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event__Chr45__fingering"]], "p_post_event__post_event_nofinger() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event__post_event_nofinger"]], "p_post_event_nofinger__chr94__fingering() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__Chr94__fingering"]], "p_post_event_nofinger__chr95__fingering() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__Chr95__fingering"]], "p_post_event_nofinger__extender() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__EXTENDER"]], "p_post_event_nofinger__hyphen() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__HYPHEN"]], "p_post_event_nofinger__direction_less_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__direction_less_event"]], "p_post_event_nofinger__script_dir__direction_less_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__script_dir__direction_less_event"]], "p_post_event_nofinger__script_dir__direction_reqd_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__script_dir__direction_reqd_event"]], "p_post_event_nofinger__script_dir__music_function_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__script_dir__music_function_event"]], "p_post_event_nofinger__string_number_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_event_nofinger__string_number_event"]], "p_post_events__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_events__Empty"]], "p_post_events__post_events__post_event() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_post_events__post_events__post_event"]], "p_property_operation__override__simple_string__property_path__chr61__scalar() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_property_operation__OVERRIDE__simple_string__property_path__Chr61__scalar"]], "p_property_operation__revert__simple_string__embedded_scm() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_property_operation__REVERT__simple_string__embedded_scm"]], "p_property_operation__string__chr61__scalar() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_property_operation__STRING__Chr61__scalar"]], "p_property_operation__unset__simple_string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_property_operation__UNSET__simple_string"]], "p_property_path__property_path_revved() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_property_path__property_path_revved"]], "p_property_path_revved__embedded_scm_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_property_path_revved__embedded_scm_closed"]], "p_property_path_revved__property_path_revved__embedded_scm_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_property_path_revved__property_path_revved__embedded_scm_closed"]], "p_questions__empty() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_questions__Empty"]], "p_questions__questions__chr63() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_questions__questions__Chr63"]], "p_scalar__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_scalar__bare_number"]], "p_scalar__embedded_scm_arg() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_scalar__embedded_scm_arg"]], "p_scalar_closed__bare_number() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_scalar_closed__bare_number"]], "p_scalar_closed__embedded_scm_arg_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_scalar_closed__embedded_scm_arg_closed"]], "p_scm_function_call__scm_function__function_arglist() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_scm_function_call__SCM_FUNCTION__function_arglist"]], "p_scm_function_call_closed__scm_function__function_arglist_closed() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_scm_function_call_closed__SCM_FUNCTION__function_arglist_closed"]], "p_score_block__score__chr123__score_body__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_score_block__SCORE__Chr123__score_body__Chr125"]], "p_score_body__score_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_score_body__SCORE_IDENTIFIER"]], "p_score_body__music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_score_body__music"]], "p_score_body__score_body__lilypond_header() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_score_body__score_body__lilypond_header"]], "p_score_body__score_body__output_def() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_score_body__score_body__output_def"]], "p_script_abbreviation__angle_close() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_abbreviation__ANGLE_CLOSE"]], "p_script_abbreviation__chr33() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_abbreviation__Chr33"]], "p_script_abbreviation__chr43() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_abbreviation__Chr43"]], "p_script_abbreviation__chr45() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_abbreviation__Chr45"]], "p_script_abbreviation__chr46() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_abbreviation__Chr46"]], "p_script_abbreviation__chr94() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_abbreviation__Chr94"]], "p_script_abbreviation__chr95() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_abbreviation__Chr95"]], "p_script_dir__chr45() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_dir__Chr45"]], "p_script_dir__chr94() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_dir__Chr94"]], "p_script_dir__chr95() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_script_dir__Chr95"]], "p_sequential_music__sequential__braced_music_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_sequential_music__SEQUENTIAL__braced_music_list"]], "p_sequential_music__braced_music_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_sequential_music__braced_music_list"]], "p_simple_chord_elements__simple_element() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_chord_elements__simple_element"]], "p_simple_element__restname__optional_notemode_duration() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_element__RESTNAME__optional_notemode_duration"]], "p_simple_element__pitch__exclamations__questions__octave_check__optional_notemode_duration__optional_rest() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_element__pitch__exclamations__questions__octave_check__optional_notemode_duration__optional_rest"]], "p_simple_markup__markup_function__markup_command_basic_arguments() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_markup__MARKUP_FUNCTION__markup_command_basic_arguments"]], "p_simple_markup__markup_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_markup__MARKUP_IDENTIFIER"]], "p_simple_markup__score__chr123__score_body__chr125() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_markup__SCORE__Chr123__score_body__Chr125"]], "p_simple_markup__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_markup__STRING"]], "p_simple_markup__string_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_markup__STRING_IDENTIFIER"]], "p_simple_music__context_change() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_music__context_change"]], "p_simple_music__event_chord() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_music__event_chord"]], "p_simple_music__music_property_def() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_music__music_property_def"]], "p_simple_music_property_def__override__context_prop_spec__property_path__chr61__scalar() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_music_property_def__OVERRIDE__context_prop_spec__property_path__Chr61__scalar"]], "p_simple_music_property_def__revert__context_prop_spec__embedded_scm() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_music_property_def__REVERT__context_prop_spec__embedded_scm"]], "p_simple_music_property_def__set__context_prop_spec__chr61__scalar() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_music_property_def__SET__context_prop_spec__Chr61__scalar"]], "p_simple_music_property_def__unset__context_prop_spec() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_music_property_def__UNSET__context_prop_spec"]], "p_simple_string__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_string__STRING"]], "p_simple_string__string_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simple_string__STRING_IDENTIFIER"]], "p_simultaneous_music__double_angle_open__music_list__double_angle_close() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simultaneous_music__DOUBLE_ANGLE_OPEN__music_list__DOUBLE_ANGLE_CLOSE"]], "p_simultaneous_music__simultaneous__braced_music_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_simultaneous_music__SIMULTANEOUS__braced_music_list"]], "p_start_symbol__lilypond() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_start_symbol__lilypond"]], "p_steno_duration__duration_identifier__dots() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_duration__DURATION_IDENTIFIER__dots"]], "p_steno_duration__bare_unsigned__dots() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_duration__bare_unsigned__dots"]], "p_steno_pitch__notename_pitch() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_pitch__NOTENAME_PITCH"]], "p_steno_pitch__notename_pitch__sub_quotes() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_pitch__NOTENAME_PITCH__sub_quotes"]], "p_steno_pitch__notename_pitch__sup_quotes() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_pitch__NOTENAME_PITCH__sup_quotes"]], "p_steno_tonic_pitch__tonicname_pitch() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_tonic_pitch__TONICNAME_PITCH"]], "p_steno_tonic_pitch__tonicname_pitch__sub_quotes() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_tonic_pitch__TONICNAME_PITCH__sub_quotes"]], "p_steno_tonic_pitch__tonicname_pitch__sup_quotes() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_steno_tonic_pitch__TONICNAME_PITCH__sup_quotes"]], "p_string__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_string__STRING"]], "p_string__string_identifier() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_string__STRING_IDENTIFIER"]], "p_string__string__chr43__string() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_string__string__Chr43__string"]], "p_string_number_event__e_unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_string_number_event__E_UNSIGNED"]], "p_sub_quotes__chr44() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_sub_quotes__Chr44"]], "p_sub_quotes__sub_quotes__chr44() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_sub_quotes__sub_quotes__Chr44"]], "p_sup_quotes__chr39() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_sup_quotes__Chr39"]], "p_sup_quotes__sup_quotes__chr39() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_sup_quotes__sup_quotes__Chr39"]], "p_tempo_event__tempo__scalar() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_tempo_event__TEMPO__scalar"]], "p_tempo_event__tempo__scalar_closed__steno_duration__chr61__tempo_range() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_tempo_event__TEMPO__scalar_closed__steno_duration__Chr61__tempo_range"]], "p_tempo_event__tempo__steno_duration__chr61__tempo_range() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_tempo_event__TEMPO__steno_duration__Chr61__tempo_range"]], "p_tempo_range__bare_unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_tempo_range__bare_unsigned"]], "p_tempo_range__bare_unsigned__chr45__bare_unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_tempo_range__bare_unsigned__Chr45__bare_unsigned"]], "p_toplevel_expression__composite_music() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_toplevel_expression__composite_music"]], "p_toplevel_expression__full_markup() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_toplevel_expression__full_markup"]], "p_toplevel_expression__full_markup_list() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_toplevel_expression__full_markup_list"]], "p_toplevel_expression__lilypond_header() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_toplevel_expression__lilypond_header"]], "p_toplevel_expression__output_def() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_toplevel_expression__output_def"]], "p_toplevel_expression__score_block() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_toplevel_expression__score_block"]], "p_tremolo_type__chr58() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_tremolo_type__Chr58"]], "p_tremolo_type__chr58__bare_unsigned() (abjad.parsers.parser.lilypondsyntacticaldefinition method)": [[63, "abjad.parsers.parser.LilyPondSyntacticalDefinition.p_tremolo_type__Chr58__bare_unsigned"]], "parser (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.parser"]], "parser_rules_object (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.parser_rules_object"]], "pickle_path (abjad.parsers.parser.lilypondparser attribute)": [[63, "abjad.parsers.parser.LilyPondParser.pickle_path"]], "push_signature() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.push_signature"]], "register_markup_function() (abjad.parsers.parser.lilypondparser class method)": [[63, "abjad.parsers.parser.LilyPondParser.register_markup_function"]], "relative() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.relative"]], "scan_bare_word() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.scan_bare_word"]], "scan_escaped_word() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.scan_escaped_word"]], "skip() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.skip"]], "slashed_grace_container() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.slashed_grace_container"]], "t_651_a() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_651_a"]], "t_651_b() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_651_b"]], "t_661() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_661"]], "t_666() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_666"]], "t_any_165() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_ANY_165"]], "t_initial_643() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_643"]], "t_initial_646() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_646"]], "t_initial_markup_notes_210() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_210"]], "t_initial_markup_notes_214() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_214"]], "t_initial_markup_notes_214_eof() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_214_EOF"]], "t_initial_markup_notes_216() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_216"]], "t_initial_markup_notes_218() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_218"]], "t_initial_markup_notes_220() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_220"]], "t_initial_markup_notes_222() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_222"]], "t_initial_markup_notes_227() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_227"]], "t_initial_markup_notes_353() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_markup_notes_353"]], "t_initial_notes_233() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_notes_233"]], "t_initial_notes_387() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_notes_387"]], "t_initial_notes_390() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_notes_390"]], "t_initial_notes_396() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_notes_396"]], "t_initial_notes_399() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_notes_399"]], "t_initial_notes_686() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_INITIAL_notes_686"]], "t_error() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_error"]], "t_longcomment_291() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_longcomment_291"]], "t_longcomment_293() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_longcomment_293"]], "t_longcomment_296() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_longcomment_296"]], "t_longcomment_error() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_longcomment_error"]], "t_markup_545() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_markup_545"]], "t_markup_548() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_markup_548"]], "t_markup_601() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_markup_601"]], "t_markup_error() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_markup_error"]], "t_newline() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_newline"]], "t_notes_417() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_notes_417"]], "t_notes_421() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_notes_421"]], "t_notes_424() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_notes_424"]], "t_notes_428() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_notes_428"]], "t_notes_428b() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_notes_428b"]], "t_notes_433() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_notes_433"]], "t_notes_error() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_notes_error"]], "t_quote_440() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_quote_440"]], "t_quote_443() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_quote_443"]], "t_quote_446() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_quote_446"]], "t_quote_456() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_quote_456"]], "t_quote_xxx() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_quote_XXX"]], "t_quote_error() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_quote_error"]], "t_scheme_error() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_scheme_error"]], "t_version_242() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_version_242"]], "t_version_278() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_version_278"]], "t_version_341() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_version_341"]], "t_version_error() (abjad.parsers.parser.lilypondlexicaldefinition method)": [[63, "abjad.parsers.parser.LilyPondLexicalDefinition.t_version_error"]], "time() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.time"]], "times() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.times"]], "tokenize() (abjad.parsers.parser.lilypondparser method)": [[63, "abjad.parsers.parser.LilyPondParser.tokenize"]], "transpose() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.transpose"]], "tuplet() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.tuplet"]], "voicefour() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.voiceFour"]], "voiceone() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.voiceOne"]], "voicethree() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.voiceThree"]], "voicetwo() (abjad.parsers.parser.guileproxy method)": [[63, "abjad.parsers.parser.GuileProxy.voiceTwo"]], "reducedlyparser (class in abjad.parsers.reduced)": [[64, "abjad.parsers.reduced.ReducedLyParser"]], "__call__() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.__call__"]], "abjad.parsers.reduced": [[64, "module-abjad.parsers.reduced"]], "debug (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.debug"]], "lexer (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.lexer"]], "lexer_rules_object (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.lexer_rules_object"]], "logger (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.logger"]], "logger_path (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.logger_path"]], "output_path (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.output_path"]], "p_apostrophes__apostrophe() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_apostrophes__APOSTROPHE"]], "p_apostrophes__apostrophes__apostrophe() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_apostrophes__apostrophes__APOSTROPHE"]], "p_beam__bracket_l() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_beam__BRACKET_L"]], "p_beam__bracket_r() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_beam__BRACKET_R"]], "p_chord_body__chord_pitches() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_chord_body__chord_pitches"]], "p_chord_body__chord_pitches__positive_leaf_duration() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_chord_body__chord_pitches__positive_leaf_duration"]], "p_chord_pitches__carat_l__pitches__carat_r() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_chord_pitches__CARAT_L__pitches__CARAT_R"]], "p_commas__comma() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_commas__COMMA"]], "p_commas__commas__commas() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_commas__commas__commas"]], "p_component__container() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_component__container"]], "p_component__fixed_duration_container() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_component__fixed_duration_container"]], "p_component__leaf() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_component__leaf"]], "p_component__tuplet() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_component__tuplet"]], "p_component_list__empty() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_component_list__EMPTY"]], "p_component_list__component_list__component() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_component_list__component_list__component"]], "p_container__brace_l__component_list__brace_r() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_container__BRACE_L__component_list__BRACE_R"]], "p_dots__empty() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_dots__EMPTY"]], "p_dots__dots__dot() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_dots__dots__DOT"]], "p_error() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_error"]], "p_fixed_duration_container__brace_l__fraction__brace_r() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_fixed_duration_container__BRACE_L__FRACTION__BRACE_R"]], "p_leaf__leaf_body__post_events() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_leaf__leaf_body__post_events"]], "p_leaf_body__chord_body() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_leaf_body__chord_body"]], "p_leaf_body__note_body() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_leaf_body__note_body"]], "p_leaf_body__rest_body() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_leaf_body__rest_body"]], "p_measure__pipe__fraction__component_list__pipe() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_measure__PIPE__FRACTION__component_list__PIPE"]], "p_negative_leaf_duration__integer_n__dots() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_negative_leaf_duration__INTEGER_N__dots"]], "p_note_body__pitch() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_note_body__pitch"]], "p_note_body__pitch__positive_leaf_duration() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_note_body__pitch__positive_leaf_duration"]], "p_note_body__positive_leaf_duration() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_note_body__positive_leaf_duration"]], "p_pitch__pitchname() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_pitch__PITCHNAME"]], "p_pitch__pitchname__apostrophes() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_pitch__PITCHNAME__apostrophes"]], "p_pitch__pitchname__commas() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_pitch__PITCHNAME__commas"]], "p_pitches__pitch() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_pitches__pitch"]], "p_pitches__pitches__pitch() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_pitches__pitches__pitch"]], "p_positive_leaf_duration__integer_p__dots() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_positive_leaf_duration__INTEGER_P__dots"]], "p_post_event__beam() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_post_event__beam"]], "p_post_event__slur() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_post_event__slur"]], "p_post_event__tie() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_post_event__tie"]], "p_post_events__empty() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_post_events__EMPTY"]], "p_post_events__post_events__post_event() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_post_events__post_events__post_event"]], "p_rest_body__restname() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_rest_body__RESTNAME"]], "p_rest_body__restname__positive_leaf_duration() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_rest_body__RESTNAME__positive_leaf_duration"]], "p_rest_body__negative_leaf_duration() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_rest_body__negative_leaf_duration"]], "p_slur__paren_l() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_slur__PAREN_L"]], "p_slur__paren_r() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_slur__PAREN_R"]], "p_start__empty() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_start__EMPTY"]], "p_start__start__component() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_start__start__component"]], "p_start__start__measure() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_start__start__measure"]], "p_tie__tilde() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_tie__TILDE"]], "p_tuplet__fraction__container() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.p_tuplet__FRACTION__container"]], "parse_reduced_ly_syntax() (in module abjad.parsers.reduced)": [[64, "abjad.parsers.reduced.parse_reduced_ly_syntax"]], "parser (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.parser"]], "parser_rules_object (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.parser_rules_object"]], "pickle_path (abjad.parsers.reduced.reducedlyparser attribute)": [[64, "abjad.parsers.reduced.ReducedLyParser.pickle_path"]], "t_fraction() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.t_FRACTION"]], "t_integer_n() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.t_INTEGER_N"]], "t_integer_p() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.t_INTEGER_P"]], "t_pitchname() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.t_PITCHNAME"]], "t_error() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.t_error"]], "t_newline() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.t_newline"]], "tokenize() (abjad.parsers.reduced.reducedlyparser method)": [[64, "abjad.parsers.reduced.ReducedLyParser.tokenize"]], "scheme (class in abjad.parsers.scheme)": [[65, "abjad.parsers.scheme.Scheme"]], "schemeparser (class in abjad.parsers.scheme)": [[65, "abjad.parsers.scheme.SchemeParser"]], "__call__() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.__call__"]], "__eq__() (abjad.parsers.scheme.scheme method)": [[65, "abjad.parsers.scheme.Scheme.__eq__"]], "__repr__() (abjad.parsers.scheme.scheme method)": [[65, "abjad.parsers.scheme.Scheme.__repr__"]], "abjad.parsers.scheme": [[65, "module-abjad.parsers.scheme"]], "debug (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.debug"]], "lexer (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.lexer"]], "lexer_rules_object (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.lexer_rules_object"]], "logger (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.logger"]], "logger_path (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.logger_path"]], "output_path (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.output_path"]], "p_boolean__boolean() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_boolean__BOOLEAN"]], "p_constant__boolean() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_constant__boolean"]], "p_constant__number() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_constant__number"]], "p_constant__string() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_constant__string"]], "p_data__empty() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_data__EMPTY"]], "p_data__data__datum() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_data__data__datum"]], "p_datum__constant() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_datum__constant"]], "p_datum__list() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_datum__list"]], "p_datum__symbol() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_datum__symbol"]], "p_datum__vector() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_datum__vector"]], "p_error() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_error"]], "p_expression__quote__datum() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_expression__QUOTE__datum"]], "p_expression__constant() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_expression__constant"]], "p_expression__variable() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_expression__variable"]], "p_form__expression() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_form__expression"]], "p_forms__empty() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_forms__EMPTY"]], "p_forms__forms__form() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_forms__forms__form"]], "p_list__l_paren__data__r_paren() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_list__L_PAREN__data__R_PAREN"]], "p_list__l_paren__data__datum__period__datum__r_paren() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_list__L_PAREN__data__datum__PERIOD__datum__R_PAREN"]], "p_number__decimal() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_number__DECIMAL"]], "p_number__hexadecimal() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_number__HEXADECIMAL"]], "p_number__integer() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_number__INTEGER"]], "p_program__forms() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_program__forms"]], "p_string__string() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_string__STRING"]], "p_symbol__identifier() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_symbol__IDENTIFIER"]], "p_variable__identifier() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_variable__IDENTIFIER"]], "p_vector__hash__l_paren__data__r_paren() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.p_vector__HASH__L_PAREN__data__R_PAREN"]], "parser (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.parser"]], "parser_rules_object (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.parser_rules_object"]], "pickle_path (abjad.parsers.scheme.schemeparser attribute)": [[65, "abjad.parsers.scheme.SchemeParser.pickle_path"]], "t_boolean() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_BOOLEAN"]], "t_decimal() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_DECIMAL"]], "t_hash() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_HASH"]], "t_hexadecimal() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_HEXADECIMAL"]], "t_identifier() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_IDENTIFIER"]], "t_integer() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_INTEGER"]], "t_l_paren() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_L_PAREN"]], "t_r_paren() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_R_PAREN"]], "t_anything() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_anything"]], "t_error() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_error"]], "t_newline() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_newline"]], "t_quote() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_quote"]], "t_quote_440() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_quote_440"]], "t_quote_443() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_quote_443"]], "t_quote_446() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_quote_446"]], "t_quote_456() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_quote_456"]], "t_quote_error() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_quote_error"]], "t_whitespace() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.t_whitespace"]], "tokenize() (abjad.parsers.scheme.schemeparser method)": [[65, "abjad.parsers.scheme.SchemeParser.tokenize"]], "pattern (class in abjad.pattern)": [[66, "abjad.pattern.Pattern"]], "patterntuple (class in abjad.pattern)": [[66, "abjad.pattern.PatternTuple"]], "__and__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__and__"]], "__eq__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__eq__"]], "__eq__() (abjad.pattern.patterntuple method)": [[66, "abjad.pattern.PatternTuple.__eq__"]], "__hash__() (abjad.pattern.patterntuple method)": [[66, "abjad.pattern.PatternTuple.__hash__"]], "__invert__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__invert__"]], "__len__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__len__"]], "__or__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__or__"]], "__post_init__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__post_init__"]], "__post_init__() (abjad.pattern.patterntuple method)": [[66, "abjad.pattern.PatternTuple.__post_init__"]], "__repr__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__repr__"]], "__repr__() (abjad.pattern.patterntuple method)": [[66, "abjad.pattern.PatternTuple.__repr__"]], "__xor__() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.__xor__"]], "abjad.pattern": [[66, "module-abjad.pattern"]], "advance() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.advance"]], "from_vector() (abjad.pattern.pattern class method)": [[66, "abjad.pattern.Pattern.from_vector"]], "get_boolean_vector() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.get_boolean_vector"]], "get_matching_items() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.get_matching_items"]], "get_matching_pattern() (abjad.pattern.patterntuple method)": [[66, "abjad.pattern.PatternTuple.get_matching_pattern"]], "get_matching_payload() (abjad.pattern.patterntuple method)": [[66, "abjad.pattern.PatternTuple.get_matching_payload"]], "index() (abjad.pattern.pattern static method)": [[66, "abjad.pattern.Pattern.index"]], "index_all() (abjad.pattern.pattern static method)": [[66, "abjad.pattern.Pattern.index_all"]], "index_first() (abjad.pattern.pattern static method)": [[66, "abjad.pattern.Pattern.index_first"]], "index_last() (abjad.pattern.pattern static method)": [[66, "abjad.pattern.Pattern.index_last"]], "matches_index() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.matches_index"]], "reverse() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.reverse"]], "rotate() (abjad.pattern.pattern method)": [[66, "abjad.pattern.Pattern.rotate"]], "weight (abjad.pattern.pattern attribute)": [[66, "abjad.pattern.Pattern.weight"]], "pitchclasssegment (class in abjad.pcollections)": [[67, "abjad.pcollections.PitchClassSegment"]], "pitchclassset (class in abjad.pcollections)": [[67, "abjad.pcollections.PitchClassSet"]], "pitchrange (class in abjad.pcollections)": [[67, "abjad.pcollections.PitchRange"]], "pitchsegment (class in abjad.pcollections)": [[67, "abjad.pcollections.PitchSegment"]], "pitchset (class in abjad.pcollections)": [[67, "abjad.pcollections.PitchSet"]], "twelvetonerow (class in abjad.pcollections)": [[67, "abjad.pcollections.TwelveToneRow"]], "__add__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__add__"]], "__add__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__add__"]], "__and__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__and__"]], "__and__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__and__"]], "__call__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__call__"]], "__class_getitem__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__class_getitem__"]], "__class_getitem__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__class_getitem__"]], "__contains__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__contains__"]], "__contains__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__contains__"]], "__contains__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__contains__"]], "__contains__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__contains__"]], "__contains__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__contains__"]], "__contains__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__contains__"]], "__eq__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__eq__"]], "__eq__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__eq__"]], "__eq__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__eq__"]], "__eq__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__eq__"]], "__eq__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__eq__"]], "__eq__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__eq__"]], "__ge__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__ge__"]], "__ge__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__ge__"]], "__ge__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__ge__"]], "__getitem__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__getitem__"]], "__getitem__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__getitem__"]], "__getitem__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__getitem__"]], "__gt__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__gt__"]], "__gt__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__gt__"]], "__gt__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__gt__"]], "__hash__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__hash__"]], "__hash__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__hash__"]], "__hash__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__hash__"]], "__iter__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__iter__"]], "__iter__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__iter__"]], "__iter__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__iter__"]], "__iter__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__iter__"]], "__iter__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__iter__"]], "__le__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__le__"]], "__le__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__le__"]], "__le__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__le__"]], "__len__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__len__"]], "__len__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__len__"]], "__len__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__len__"]], "__len__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__len__"]], "__len__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__len__"]], "__lt__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__lt__"]], "__lt__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__lt__"]], "__lt__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__lt__"]], "__mul__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__mul__"]], "__mul__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__mul__"]], "__ne__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__ne__"]], "__ne__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__ne__"]], "__new__() (abjad.pcollections.pitchclassset static method)": [[67, "abjad.pcollections.PitchClassSet.__new__"]], "__new__() (abjad.pcollections.pitchset static method)": [[67, "abjad.pcollections.PitchSet.__new__"]], "__or__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__or__"]], "__or__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__or__"]], "__post_init__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__post_init__"]], "__post_init__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__post_init__"]], "__post_init__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__post_init__"]], "__rand__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__rand__"]], "__rand__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__rand__"]], "__repr__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__repr__"]], "__repr__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__repr__"]], "__repr__() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.__repr__"]], "__repr__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__repr__"]], "__repr__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__repr__"]], "__repr__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__repr__"]], "__rmul__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__rmul__"]], "__rmul__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__rmul__"]], "__ror__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__ror__"]], "__ror__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__ror__"]], "__rsub__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__rsub__"]], "__rsub__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__rsub__"]], "__rxor__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__rxor__"]], "__rxor__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__rxor__"]], "__str__() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.__str__"]], "__str__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__str__"]], "__str__() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.__str__"]], "__str__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__str__"]], "__str__() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.__str__"]], "__sub__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__sub__"]], "__sub__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__sub__"]], "__xor__() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.__xor__"]], "__xor__() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.__xor__"]], "abjad.pcollections": [[67, "module-abjad.pcollections"]], "cardinality (abjad.pcollections.pitchclassset attribute)": [[67, "abjad.pcollections.PitchClassSet.cardinality"]], "copy() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.copy"]], "copy() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.copy"]], "count() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.count"]], "difference() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.difference"]], "difference() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.difference"]], "from_octave() (abjad.pcollections.pitchrange static method)": [[67, "abjad.pcollections.PitchRange.from_octave"]], "get_normal_order() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.get_normal_order"]], "get_prime_form() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.get_prime_form"]], "index() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.index"]], "intersection() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.intersection"]], "intersection() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.intersection"]], "invert() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.invert"]], "invert() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.invert"]], "invert() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.invert"]], "invert() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.invert"]], "isdisjoint() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.isdisjoint"]], "isdisjoint() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.isdisjoint"]], "issubset() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.issubset"]], "issubset() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.issubset"]], "issuperset() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.issuperset"]], "issuperset() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.issuperset"]], "make_interval_class_vector() (in module abjad.pcollections)": [[67, "abjad.pcollections.make_interval_class_vector"]], "multiply() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.multiply"]], "multiply() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.multiply"]], "multiply() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.multiply"]], "multiply() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.multiply"]], "range_string (abjad.pcollections.pitchrange attribute)": [[67, "abjad.pcollections.PitchRange.range_string"]], "retrograde() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.retrograde"]], "retrograde() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.retrograde"]], "retrograde() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.retrograde"]], "rotate() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.rotate"]], "rotate() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.rotate"]], "rotate() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.rotate"]], "start_pitch (abjad.pcollections.pitchrange attribute)": [[67, "abjad.pcollections.PitchRange.start_pitch"]], "stop_pitch (abjad.pcollections.pitchrange attribute)": [[67, "abjad.pcollections.PitchRange.stop_pitch"]], "symmetric_difference() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.symmetric_difference"]], "symmetric_difference() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.symmetric_difference"]], "transpose() (abjad.pcollections.pitchclasssegment method)": [[67, "abjad.pcollections.PitchClassSegment.transpose"]], "transpose() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.transpose"]], "transpose() (abjad.pcollections.pitchsegment method)": [[67, "abjad.pcollections.PitchSegment.transpose"]], "transpose() (abjad.pcollections.twelvetonerow method)": [[67, "abjad.pcollections.TwelveToneRow.transpose"]], "union() (abjad.pcollections.pitchclassset method)": [[67, "abjad.pcollections.PitchClassSet.union"]], "union() (abjad.pcollections.pitchset method)": [[67, "abjad.pcollections.PitchSet.union"]], "voice_horizontally() (in module abjad.pcollections)": [[67, "abjad.pcollections.voice_horizontally"]], "voice_pitch_class() (abjad.pcollections.pitchrange method)": [[67, "abjad.pcollections.PitchRange.voice_pitch_class"]], "voice_vertically() (in module abjad.pcollections)": [[67, "abjad.pcollections.voice_vertically"]], "abjad.persist": [[68, "module-abjad.persist"]], "as_ly() (in module abjad.persist)": [[68, "abjad.persist.as_ly"]], "as_midi() (in module abjad.persist)": [[68, "abjad.persist.as_midi"]], "as_pdf() (in module abjad.persist)": [[68, "abjad.persist.as_pdf"]], "as_png() (in module abjad.persist)": [[68, "abjad.persist.as_png"]], "accidental (class in abjad.pitch)": [[69, "abjad.pitch.Accidental"]], "interval (class in abjad.pitch)": [[69, "abjad.pitch.Interval"]], "intervalclass (class in abjad.pitch)": [[69, "abjad.pitch.IntervalClass"]], "namedinterval (class in abjad.pitch)": [[69, "abjad.pitch.NamedInterval"]], "namedintervalclass (class in abjad.pitch)": [[69, "abjad.pitch.NamedIntervalClass"]], "namedinversionequivalentintervalclass (class in abjad.pitch)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass"]], "namedpitch (class in abjad.pitch)": [[69, "abjad.pitch.NamedPitch"]], "namedpitchclass (class in abjad.pitch)": [[69, "abjad.pitch.NamedPitchClass"]], "numberedinterval (class in abjad.pitch)": [[69, "abjad.pitch.NumberedInterval"]], "numberedintervalclass (class in abjad.pitch)": [[69, "abjad.pitch.NumberedIntervalClass"]], "numberedinversionequivalentintervalclass (class in abjad.pitch)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass"]], "numberedpitch (class in abjad.pitch)": [[69, "abjad.pitch.NumberedPitch"]], "numberedpitchclass (class in abjad.pitch)": [[69, "abjad.pitch.NumberedPitchClass"]], "octave (class in abjad.pitch)": [[69, "abjad.pitch.Octave"]], "pitch (class in abjad.pitch)": [[69, "abjad.pitch.Pitch"]], "pitchclass (class in abjad.pitch)": [[69, "abjad.pitch.PitchClass"]], "staffposition (class in abjad.pitch)": [[69, "abjad.pitch.StaffPosition"]], "__abs__() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.__abs__"]], "__abs__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__abs__"]], "__abs__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__abs__"]], "__abs__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__abs__"]], "__abs__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__abs__"]], "__abs__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__abs__"]], "__abs__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__abs__"]], "__add__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__add__"]], "__add__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__add__"]], "__add__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__add__"]], "__add__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__add__"]], "__add__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__add__"]], "__add__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__add__"]], "__add__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__add__"]], "__add__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__add__"]], "__add__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__add__"]], "__add__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__add__"]], "__add__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__add__"]], "__call__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__call__"]], "__copy__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__copy__"]], "__copy__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__copy__"]], "__copy__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__copy__"]], "__copy__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__copy__"]], "__delattr__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__delattr__"]], "__eq__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__eq__"]], "__eq__() (abjad.pitch.interval method)": [[69, "abjad.pitch.Interval.__eq__"]], "__eq__() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.__eq__"]], "__eq__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__eq__"]], "__eq__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__eq__"]], "__eq__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__eq__"]], "__eq__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__eq__"]], "__eq__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__eq__"]], "__eq__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__eq__"]], "__eq__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__eq__"]], "__eq__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__eq__"]], "__eq__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__eq__"]], "__eq__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__eq__"]], "__eq__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__eq__"]], "__eq__() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.__eq__"]], "__eq__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__eq__"]], "__float__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__float__"]], "__float__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__float__"]], "__float__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__float__"]], "__float__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__float__"]], "__float__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__float__"]], "__float__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__float__"]], "__float__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__float__"]], "__float__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__float__"]], "__float__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__float__"]], "__float__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__float__"]], "__float__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__float__"]], "__float__() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.__float__"]], "__float__() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.__float__"]], "__ge__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__ge__"]], "__ge__() (abjad.pitch.interval method)": [[69, "abjad.pitch.Interval.__ge__"]], "__ge__() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.__ge__"]], "__ge__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__ge__"]], "__ge__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__ge__"]], "__ge__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__ge__"]], "__ge__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__ge__"]], "__ge__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__ge__"]], "__ge__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__ge__"]], "__ge__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__ge__"]], "__ge__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__ge__"]], "__ge__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__ge__"]], "__ge__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__ge__"]], "__ge__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__ge__"]], "__ge__() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.__ge__"]], "__ge__() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.__ge__"]], "__ge__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__ge__"]], "__gt__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__gt__"]], "__gt__() (abjad.pitch.interval method)": [[69, "abjad.pitch.Interval.__gt__"]], "__gt__() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.__gt__"]], "__gt__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__gt__"]], "__gt__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__gt__"]], "__gt__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__gt__"]], "__gt__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__gt__"]], "__gt__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__gt__"]], "__gt__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__gt__"]], "__gt__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__gt__"]], "__gt__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__gt__"]], "__gt__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__gt__"]], "__gt__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__gt__"]], "__gt__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__gt__"]], "__gt__() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.__gt__"]], "__gt__() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.__gt__"]], "__gt__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__gt__"]], "__hash__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__hash__"]], "__hash__() (abjad.pitch.interval method)": [[69, "abjad.pitch.Interval.__hash__"]], "__hash__() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.__hash__"]], "__hash__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__hash__"]], "__hash__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__hash__"]], "__hash__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__hash__"]], "__hash__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__hash__"]], "__hash__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__hash__"]], "__hash__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__hash__"]], "__hash__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__hash__"]], "__hash__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__hash__"]], "__hash__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__hash__"]], "__hash__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__hash__"]], "__hash__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__hash__"]], "__hash__() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.__hash__"]], "__hash__() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.__hash__"]], "__hash__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__hash__"]], "__int__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__int__"]], "__le__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__le__"]], "__le__() (abjad.pitch.interval method)": [[69, "abjad.pitch.Interval.__le__"]], "__le__() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.__le__"]], "__le__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__le__"]], "__le__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__le__"]], "__le__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__le__"]], "__le__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__le__"]], "__le__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__le__"]], "__le__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__le__"]], "__le__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__le__"]], "__le__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__le__"]], "__le__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__le__"]], "__le__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__le__"]], "__le__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__le__"]], "__le__() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.__le__"]], "__le__() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.__le__"]], "__le__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__le__"]], "__lt__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__lt__"]], "__lt__() (abjad.pitch.interval method)": [[69, "abjad.pitch.Interval.__lt__"]], "__lt__() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.__lt__"]], "__lt__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__lt__"]], "__lt__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__lt__"]], "__lt__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__lt__"]], "__lt__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__lt__"]], "__lt__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__lt__"]], "__lt__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__lt__"]], "__lt__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__lt__"]], "__lt__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__lt__"]], "__lt__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__lt__"]], "__lt__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__lt__"]], "__lt__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__lt__"]], "__lt__() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.__lt__"]], "__lt__() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.__lt__"]], "__lt__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__lt__"]], "__mul__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__mul__"]], "__neg__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__neg__"]], "__neg__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__neg__"]], "__neg__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__neg__"]], "__neg__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__neg__"]], "__neg__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__neg__"]], "__neg__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__neg__"]], "__post_init__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__post_init__"]], "__post_init__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__post_init__"]], "__post_init__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__post_init__"]], "__radd__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__radd__"]], "__radd__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__radd__"]], "__radd__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__radd__"]], "__radd__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__radd__"]], "__radd__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__radd__"]], "__radd__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__radd__"]], "__radd__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__radd__"]], "__radd__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__radd__"]], "__radd__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__radd__"]], "__radd__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__radd__"]], "__radd__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__radd__"]], "__repr__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__repr__"]], "__repr__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__repr__"]], "__repr__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__repr__"]], "__repr__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__repr__"]], "__repr__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__repr__"]], "__repr__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__repr__"]], "__repr__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__repr__"]], "__repr__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__repr__"]], "__repr__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__repr__"]], "__repr__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__repr__"]], "__repr__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__repr__"]], "__repr__() (abjad.pitch.octave method)": [[69, "abjad.pitch.Octave.__repr__"]], "__repr__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__repr__"]], "__rmul__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__rmul__"]], "__setattr__() (abjad.pitch.staffposition method)": [[69, "abjad.pitch.StaffPosition.__setattr__"]], "__str__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__str__"]], "__sub__() (abjad.pitch.accidental method)": [[69, "abjad.pitch.Accidental.__sub__"]], "__sub__() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.__sub__"]], "__sub__() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.__sub__"]], "__sub__() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.__sub__"]], "__sub__() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.__sub__"]], "__sub__() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.__sub__"]], "__sub__() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.__sub__"]], "__sub__() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.__sub__"]], "__sub__() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.__sub__"]], "__sub__() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.__sub__"]], "__sub__() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.__sub__"]], "abjad.pitch": [[69, "module-abjad.pitch"]], "accidental (abjad.pitch.namedpitch attribute)": [[69, "abjad.pitch.NamedPitch.accidental"]], "accidental (abjad.pitch.namedpitchclass attribute)": [[69, "abjad.pitch.NamedPitchClass.accidental"]], "accidental (abjad.pitch.numberedpitch attribute)": [[69, "abjad.pitch.NumberedPitch.accidental"]], "accidental (abjad.pitch.numberedpitchclass attribute)": [[69, "abjad.pitch.NumberedPitchClass.accidental"]], "accidental() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.accidental"]], "arrow (abjad.pitch.namedpitch attribute)": [[69, "abjad.pitch.NamedPitch.arrow"]], "arrow (abjad.pitch.namedpitchclass attribute)": [[69, "abjad.pitch.NamedPitchClass.arrow"]], "arrow (abjad.pitch.numberedpitch attribute)": [[69, "abjad.pitch.NumberedPitch.arrow"]], "arrow (abjad.pitch.numberedpitchclass attribute)": [[69, "abjad.pitch.NumberedPitchClass.arrow"]], "arrow (abjad.pitch.pitch attribute)": [[69, "abjad.pitch.Pitch.arrow"]], "cents (abjad.pitch.interval attribute)": [[69, "abjad.pitch.Interval.cents"]], "cents (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.cents"]], "cents (abjad.pitch.numberedinterval attribute)": [[69, "abjad.pitch.NumberedInterval.cents"]], "direction_number (abjad.pitch.interval attribute)": [[69, "abjad.pitch.Interval.direction_number"]], "direction_number (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.direction_number"]], "direction_number (abjad.pitch.namedintervalclass attribute)": [[69, "abjad.pitch.NamedIntervalClass.direction_number"]], "direction_number (abjad.pitch.namedinversionequivalentintervalclass attribute)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.direction_number"]], "direction_number (abjad.pitch.numberedinterval attribute)": [[69, "abjad.pitch.NumberedInterval.direction_number"]], "direction_number (abjad.pitch.numberedintervalclass attribute)": [[69, "abjad.pitch.NumberedIntervalClass.direction_number"]], "direction_number (abjad.pitch.numberedinversionequivalentintervalclass attribute)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.direction_number"]], "from_hertz() (abjad.pitch.namedpitch class method)": [[69, "abjad.pitch.NamedPitch.from_hertz"]], "from_hertz() (abjad.pitch.numberedpitch class method)": [[69, "abjad.pitch.NumberedPitch.from_hertz"]], "from_hertz() (abjad.pitch.pitch class method)": [[69, "abjad.pitch.Pitch.from_hertz"]], "from_pitch() (abjad.pitch.octave class method)": [[69, "abjad.pitch.Octave.from_pitch"]], "from_pitch_carriers() (abjad.pitch.namedinterval class method)": [[69, "abjad.pitch.NamedInterval.from_pitch_carriers"]], "from_pitch_carriers() (abjad.pitch.namedintervalclass class method)": [[69, "abjad.pitch.NamedIntervalClass.from_pitch_carriers"]], "from_pitch_carriers() (abjad.pitch.namedinversionequivalentintervalclass class method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.from_pitch_carriers"]], "from_pitch_carriers() (abjad.pitch.numberedinterval class method)": [[69, "abjad.pitch.NumberedInterval.from_pitch_carriers"]], "from_pitch_carriers() (abjad.pitch.numberedintervalclass class method)": [[69, "abjad.pitch.NumberedIntervalClass.from_pitch_carriers"]], "from_pitch_carriers() (abjad.pitch.numberedinversionequivalentintervalclass class method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.from_pitch_carriers"]], "from_ticks() (abjad.pitch.octave class method)": [[69, "abjad.pitch.Octave.from_ticks"]], "get_name() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.get_name"]], "get_name() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.get_name"]], "get_name() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.get_name"]], "hertz (abjad.pitch.namedpitch attribute)": [[69, "abjad.pitch.NamedPitch.hertz"]], "hertz (abjad.pitch.numberedpitch attribute)": [[69, "abjad.pitch.NumberedPitch.hertz"]], "hertz (abjad.pitch.pitch attribute)": [[69, "abjad.pitch.Pitch.hertz"]], "interpolate() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.interpolate"]], "interval_class (abjad.pitch.interval attribute)": [[69, "abjad.pitch.Interval.interval_class"]], "interval_class (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.interval_class"]], "interval_class (abjad.pitch.numberedinterval attribute)": [[69, "abjad.pitch.NumberedInterval.interval_class"]], "invert() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.invert"]], "invert() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.invert"]], "invert() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.invert"]], "invert() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.invert"]], "invert() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.invert"]], "invert() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.invert"]], "multiply() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.multiply"]], "multiply() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.multiply"]], "multiply() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.multiply"]], "multiply() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.multiply"]], "multiply() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.multiply"]], "multiply() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.multiply"]], "name (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.name"]], "name (abjad.pitch.namedintervalclass attribute)": [[69, "abjad.pitch.NamedIntervalClass.name"]], "name (abjad.pitch.namedinversionequivalentintervalclass attribute)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.name"]], "name (abjad.pitch.namedpitch attribute)": [[69, "abjad.pitch.NamedPitch.name"]], "name (abjad.pitch.namedpitchclass attribute)": [[69, "abjad.pitch.NamedPitchClass.name"]], "name (abjad.pitch.numberedpitch attribute)": [[69, "abjad.pitch.NumberedPitch.name"]], "name (abjad.pitch.numberedpitchclass attribute)": [[69, "abjad.pitch.NumberedPitchClass.name"]], "name (abjad.pitch.pitch attribute)": [[69, "abjad.pitch.Pitch.name"]], "number (abjad.pitch.interval attribute)": [[69, "abjad.pitch.Interval.number"]], "number (abjad.pitch.intervalclass attribute)": [[69, "abjad.pitch.IntervalClass.number"]], "number (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.number"]], "number (abjad.pitch.namedintervalclass attribute)": [[69, "abjad.pitch.NamedIntervalClass.number"]], "number (abjad.pitch.namedinversionequivalentintervalclass attribute)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.number"]], "number (abjad.pitch.namedpitch attribute)": [[69, "abjad.pitch.NamedPitch.number"]], "number (abjad.pitch.namedpitchclass attribute)": [[69, "abjad.pitch.NamedPitchClass.number"]], "number (abjad.pitch.numberedinterval attribute)": [[69, "abjad.pitch.NumberedInterval.number"]], "number (abjad.pitch.numberedintervalclass attribute)": [[69, "abjad.pitch.NumberedIntervalClass.number"]], "number (abjad.pitch.numberedinversionequivalentintervalclass attribute)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.number"]], "number (abjad.pitch.numberedpitch attribute)": [[69, "abjad.pitch.NumberedPitch.number"]], "number (abjad.pitch.numberedpitchclass attribute)": [[69, "abjad.pitch.NumberedPitchClass.number"]], "number (abjad.pitch.pitch attribute)": [[69, "abjad.pitch.Pitch.number"]], "octave (abjad.pitch.namedpitch attribute)": [[69, "abjad.pitch.NamedPitch.octave"]], "octave (abjad.pitch.numberedpitch attribute)": [[69, "abjad.pitch.NumberedPitch.octave"]], "octave (abjad.pitch.pitch attribute)": [[69, "abjad.pitch.Pitch.octave"]], "octaves (abjad.pitch.interval attribute)": [[69, "abjad.pitch.Interval.octaves"]], "octaves (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.octaves"]], "octaves (abjad.pitch.numberedinterval attribute)": [[69, "abjad.pitch.NumberedInterval.octaves"]], "pitch_class (abjad.pitch.namedpitch attribute)": [[69, "abjad.pitch.NamedPitch.pitch_class"]], "pitch_class (abjad.pitch.numberedpitch attribute)": [[69, "abjad.pitch.NumberedPitch.pitch_class"]], "pitch_class (abjad.pitch.pitch attribute)": [[69, "abjad.pitch.Pitch.pitch_class"]], "pitch_class_label (abjad.pitch.namedpitchclass attribute)": [[69, "abjad.pitch.NamedPitchClass.pitch_class_label"]], "pitch_class_label (abjad.pitch.numberedpitchclass attribute)": [[69, "abjad.pitch.NumberedPitchClass.pitch_class_label"]], "pitch_class_label() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.pitch_class_label"]], "pitch_number (abjad.pitch.octave attribute)": [[69, "abjad.pitch.Octave.pitch_number"]], "quality (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.quality"]], "quality (abjad.pitch.namedintervalclass attribute)": [[69, "abjad.pitch.NamedIntervalClass.quality"]], "quality (abjad.pitch.namedinversionequivalentintervalclass attribute)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.quality"]], "respell() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.respell"]], "semitones (abjad.pitch.interval attribute)": [[69, "abjad.pitch.Interval.semitones"]], "semitones (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.semitones"]], "semitones (abjad.pitch.numberedinterval attribute)": [[69, "abjad.pitch.NumberedInterval.semitones"]], "signed_string (abjad.pitch.numberedinterval attribute)": [[69, "abjad.pitch.NumberedInterval.signed_string"]], "signed_string (abjad.pitch.numberedintervalclass attribute)": [[69, "abjad.pitch.NumberedIntervalClass.signed_string"]], "signed_string (abjad.pitch.numberedinversionequivalentintervalclass attribute)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.signed_string"]], "simplify() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.simplify"]], "staff_spaces (abjad.pitch.namedinterval attribute)": [[69, "abjad.pitch.NamedInterval.staff_spaces"]], "symbol (abjad.pitch.accidental attribute)": [[69, "abjad.pitch.Accidental.symbol"]], "ticks (abjad.pitch.octave attribute)": [[69, "abjad.pitch.Octave.ticks"]], "transpose() (abjad.pitch.interval method)": [[69, "abjad.pitch.Interval.transpose"]], "transpose() (abjad.pitch.intervalclass method)": [[69, "abjad.pitch.IntervalClass.transpose"]], "transpose() (abjad.pitch.namedinterval method)": [[69, "abjad.pitch.NamedInterval.transpose"]], "transpose() (abjad.pitch.namedintervalclass method)": [[69, "abjad.pitch.NamedIntervalClass.transpose"]], "transpose() (abjad.pitch.namedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NamedInversionEquivalentIntervalClass.transpose"]], "transpose() (abjad.pitch.namedpitch method)": [[69, "abjad.pitch.NamedPitch.transpose"]], "transpose() (abjad.pitch.namedpitchclass method)": [[69, "abjad.pitch.NamedPitchClass.transpose"]], "transpose() (abjad.pitch.numberedinterval method)": [[69, "abjad.pitch.NumberedInterval.transpose"]], "transpose() (abjad.pitch.numberedintervalclass method)": [[69, "abjad.pitch.NumberedIntervalClass.transpose"]], "transpose() (abjad.pitch.numberedinversionequivalentintervalclass method)": [[69, "abjad.pitch.NumberedInversionEquivalentIntervalClass.transpose"]], "transpose() (abjad.pitch.numberedpitch method)": [[69, "abjad.pitch.NumberedPitch.transpose"]], "transpose() (abjad.pitch.numberedpitchclass method)": [[69, "abjad.pitch.NumberedPitchClass.transpose"]], "transpose() (abjad.pitch.pitch method)": [[69, "abjad.pitch.Pitch.transpose"]], "transpose() (abjad.pitch.pitchclass method)": [[69, "abjad.pitch.PitchClass.transpose"]], "nonreducedratio (class in abjad.ratio)": [[70, "abjad.ratio.NonreducedRatio"]], "ratio (class in abjad.ratio)": [[70, "abjad.ratio.Ratio"]], "__class_getitem__() (abjad.ratio.nonreducedratio class method)": [[70, "abjad.ratio.NonreducedRatio.__class_getitem__"]], "__class_getitem__() (abjad.ratio.ratio class method)": [[70, "abjad.ratio.Ratio.__class_getitem__"]], "__contains__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__contains__"]], "__contains__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__contains__"]], "__eq__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__eq__"]], "__eq__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__eq__"]], "__getitem__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__getitem__"]], "__getitem__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__getitem__"]], "__hash__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__hash__"]], "__hash__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__hash__"]], "__iter__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__iter__"]], "__iter__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__iter__"]], "__len__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__len__"]], "__len__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__len__"]], "__post_init__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__post_init__"]], "__post_init__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__post_init__"]], "__rdiv__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__rdiv__"]], "__rdiv__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__rdiv__"]], "__repr__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__repr__"]], "__repr__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__repr__"]], "__reversed__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__reversed__"]], "__reversed__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__reversed__"]], "__rtruediv__() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.__rtruediv__"]], "__rtruediv__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__rtruediv__"]], "__str__() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.__str__"]], "abjad.ratio": [[70, "module-abjad.ratio"]], "count() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.count"]], "count() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.count"]], "index() (abjad.ratio.nonreducedratio method)": [[70, "abjad.ratio.NonreducedRatio.index"]], "index() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.index"]], "multipliers (abjad.ratio.nonreducedratio attribute)": [[70, "abjad.ratio.NonreducedRatio.multipliers"]], "multipliers (abjad.ratio.ratio attribute)": [[70, "abjad.ratio.Ratio.multipliers"]], "partition_integer() (abjad.ratio.ratio method)": [[70, "abjad.ratio.Ratio.partition_integer"]], "reciprocal (abjad.ratio.ratio attribute)": [[70, "abjad.ratio.Ratio.reciprocal"]], "rhythmtreecontainer (class in abjad.rhythmtrees)": [[71, "abjad.rhythmtrees.RhythmTreeContainer"]], "rhythmtreeleaf (class in abjad.rhythmtrees)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf"]], "rhythmtreemixin (class in abjad.rhythmtrees)": [[71, "abjad.rhythmtrees.RhythmTreeMixin"]], "rhythmtreeparser (class in abjad.rhythmtrees)": [[71, "abjad.rhythmtrees.RhythmTreeParser"]], "__add__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__add__"]], "__call__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__call__"]], "__call__() (abjad.rhythmtrees.rhythmtreeleaf method)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.__call__"]], "__call__() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.__call__"]], "__contains__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__contains__"]], "__delitem__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__delitem__"]], "__getitem__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__getitem__"]], "__graph__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__graph__"]], "__graph__() (abjad.rhythmtrees.rhythmtreeleaf method)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.__graph__"]], "__iter__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__iter__"]], "__len__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__len__"]], "__radd__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__radd__"]], "__repr__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__repr__"]], "__repr__() (abjad.rhythmtrees.rhythmtreeleaf method)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.__repr__"]], "__setitem__() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.__setitem__"]], "abjad.rhythmtrees": [[71, "module-abjad.rhythmtrees"]], "append() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.append"]], "children (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.children"]], "debug (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.debug"]], "depth (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.depth"]], "depth (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.depth"]], "depth_first() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.depth_first"]], "duration (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.duration"]], "duration (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.duration"]], "duration (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.duration"]], "extend() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.extend"]], "graph_order (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.graph_order"]], "graph_order (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.graph_order"]], "index() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.index"]], "insert() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.insert"]], "is_pitched (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.is_pitched"]], "lexer (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.lexer"]], "lexer_rules_object (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.lexer_rules_object"]], "logger (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.logger"]], "logger_path (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.logger_path"]], "name (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.name"]], "name (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.name"]], "output_path (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.output_path"]], "p_container__lparen__duration__node_list_closed__rparen() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_container__LPAREN__DURATION__node_list_closed__RPAREN"]], "p_error() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_error"]], "p_leaf__integer() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_leaf__INTEGER"]], "p_node__container() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_node__container"]], "p_node__leaf() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_node__leaf"]], "p_node_list__node_list__node_list_item() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_node_list__node_list__node_list_item"]], "p_node_list__node_list_item() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_node_list__node_list_item"]], "p_node_list_closed__lparen__node_list__rparen() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_node_list_closed__LPAREN__node_list__RPAREN"]], "p_node_list_item__node() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_node_list_item__node"]], "p_toplevel__empty() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_toplevel__EMPTY"]], "p_toplevel__toplevel__node() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.p_toplevel__toplevel__node"]], "parent (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.parent"]], "parent (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.parent"]], "parentage (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.parentage"]], "parentage (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.parentage"]], "parentage_ratios (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.parentage_ratios"]], "parentage_ratios (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.parentage_ratios"]], "parentage_ratios (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.parentage_ratios"]], "parse_rtm_syntax() (in module abjad.rhythmtrees)": [[71, "abjad.rhythmtrees.parse_rtm_syntax"]], "parser (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.parser"]], "parser_rules_object (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.parser_rules_object"]], "pickle_path (abjad.rhythmtrees.rhythmtreeparser attribute)": [[71, "abjad.rhythmtrees.RhythmTreeParser.pickle_path"]], "pop() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.pop"]], "preprolated_duration (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.preprolated_duration"]], "preprolated_duration (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.preprolated_duration"]], "preprolated_duration (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.preprolated_duration"]], "pretty_rtm_format (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.pretty_rtm_format"]], "pretty_rtm_format (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.pretty_rtm_format"]], "pretty_rtm_format (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.pretty_rtm_format"]], "prolation (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.prolation"]], "prolation (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.prolation"]], "prolation (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.prolation"]], "prolations (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.prolations"]], "prolations (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.prolations"]], "prolations (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.prolations"]], "recurse() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.recurse"]], "remove() (abjad.rhythmtrees.rhythmtreecontainer method)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.remove"]], "root (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.root"]], "root (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.root"]], "rtm_format (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.rtm_format"]], "rtm_format (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.rtm_format"]], "start_offset (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.start_offset"]], "start_offset (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.start_offset"]], "start_offset (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.start_offset"]], "stop_offset (abjad.rhythmtrees.rhythmtreecontainer attribute)": [[71, "abjad.rhythmtrees.RhythmTreeContainer.stop_offset"]], "stop_offset (abjad.rhythmtrees.rhythmtreeleaf attribute)": [[71, "abjad.rhythmtrees.RhythmTreeLeaf.stop_offset"]], "stop_offset (abjad.rhythmtrees.rhythmtreemixin attribute)": [[71, "abjad.rhythmtrees.RhythmTreeMixin.stop_offset"]], "t_duration() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.t_DURATION"]], "t_error() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.t_error"]], "t_newline() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.t_newline"]], "tokenize() (abjad.rhythmtrees.rhythmtreeparser method)": [[71, "abjad.rhythmtrees.RhythmTreeParser.tokenize"]], "aftergracecontainer (class in abjad.score)": [[72, "abjad.score.AfterGraceContainer"]], "beforegracecontainer (class in abjad.score)": [[72, "abjad.score.BeforeGraceContainer"]], "chord (class in abjad.score)": [[72, "abjad.score.Chord"]], "cluster (class in abjad.score)": [[72, "abjad.score.Cluster"]], "component (class in abjad.score)": [[72, "abjad.score.Component"]], "container (class in abjad.score)": [[72, "abjad.score.Container"]], "context (class in abjad.score)": [[72, "abjad.score.Context"]], "drumnotehead (class in abjad.score)": [[72, "abjad.score.DrumNoteHead"]], "leaf (class in abjad.score)": [[72, "abjad.score.Leaf"]], "multimeasurerest (class in abjad.score)": [[72, "abjad.score.MultimeasureRest"]], "note (class in abjad.score)": [[72, "abjad.score.Note"]], "notehead (class in abjad.score)": [[72, "abjad.score.NoteHead"]], "noteheadlist (class in abjad.score)": [[72, "abjad.score.NoteHeadList"]], "rest (class in abjad.score)": [[72, "abjad.score.Rest"]], "score (class in abjad.score)": [[72, "abjad.score.Score"]], "skip (class in abjad.score)": [[72, "abjad.score.Skip"]], "staff (class in abjad.score)": [[72, "abjad.score.Staff"]], "staffgroup (class in abjad.score)": [[72, "abjad.score.StaffGroup"]], "tremolocontainer (class in abjad.score)": [[72, "abjad.score.TremoloContainer"]], "tuplet (class in abjad.score)": [[72, "abjad.score.Tuplet"]], "voice (class in abjad.score)": [[72, "abjad.score.Voice"]], "__add__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__add__"]], "__class_getitem__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__class_getitem__"]], "__contains__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__contains__"]], "__contains__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__contains__"]], "__contains__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__contains__"]], "__contains__() (abjad.score.container method)": [[72, "abjad.score.Container.__contains__"]], "__contains__() (abjad.score.context method)": [[72, "abjad.score.Context.__contains__"]], "__contains__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__contains__"]], "__contains__() (abjad.score.score method)": [[72, "abjad.score.Score.__contains__"]], "__contains__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__contains__"]], "__contains__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__contains__"]], "__contains__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__contains__"]], "__contains__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__contains__"]], "__contains__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__contains__"]], "__copy__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__copy__"]], "__copy__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__copy__"]], "__copy__() (abjad.score.chord method)": [[72, "abjad.score.Chord.__copy__"]], "__copy__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__copy__"]], "__copy__() (abjad.score.component method)": [[72, "abjad.score.Component.__copy__"]], "__copy__() (abjad.score.container method)": [[72, "abjad.score.Container.__copy__"]], "__copy__() (abjad.score.context method)": [[72, "abjad.score.Context.__copy__"]], "__copy__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__copy__"]], "__copy__() (abjad.score.leaf method)": [[72, "abjad.score.Leaf.__copy__"]], "__copy__() (abjad.score.multimeasurerest method)": [[72, "abjad.score.MultimeasureRest.__copy__"]], "__copy__() (abjad.score.note method)": [[72, "abjad.score.Note.__copy__"]], "__copy__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__copy__"]], "__copy__() (abjad.score.rest method)": [[72, "abjad.score.Rest.__copy__"]], "__copy__() (abjad.score.score method)": [[72, "abjad.score.Score.__copy__"]], "__copy__() (abjad.score.skip method)": [[72, "abjad.score.Skip.__copy__"]], "__copy__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__copy__"]], "__copy__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__copy__"]], "__copy__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__copy__"]], "__copy__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__copy__"]], "__copy__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__copy__"]], "__delitem__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__delitem__"]], "__delitem__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__delitem__"]], "__delitem__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__delitem__"]], "__delitem__() (abjad.score.container method)": [[72, "abjad.score.Container.__delitem__"]], "__delitem__() (abjad.score.context method)": [[72, "abjad.score.Context.__delitem__"]], "__delitem__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__delitem__"]], "__delitem__() (abjad.score.score method)": [[72, "abjad.score.Score.__delitem__"]], "__delitem__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__delitem__"]], "__delitem__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__delitem__"]], "__delitem__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__delitem__"]], "__delitem__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__delitem__"]], "__delitem__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__delitem__"]], "__eq__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__eq__"]], "__eq__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__eq__"]], "__eq__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__eq__"]], "__ge__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__ge__"]], "__ge__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__ge__"]], "__ge__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__ge__"]], "__getitem__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__getitem__"]], "__getitem__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__getitem__"]], "__getitem__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__getitem__"]], "__getitem__() (abjad.score.container method)": [[72, "abjad.score.Container.__getitem__"]], "__getitem__() (abjad.score.context method)": [[72, "abjad.score.Context.__getitem__"]], "__getitem__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__getitem__"]], "__getitem__() (abjad.score.score method)": [[72, "abjad.score.Score.__getitem__"]], "__getitem__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__getitem__"]], "__getitem__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__getitem__"]], "__getitem__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__getitem__"]], "__getitem__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__getitem__"]], "__getitem__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__getitem__"]], "__gt__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__gt__"]], "__gt__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__gt__"]], "__gt__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__gt__"]], "__hash__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__hash__"]], "__hash__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__hash__"]], "__iadd__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__iadd__"]], "__imul__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__imul__"]], "__iter__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__iter__"]], "__iter__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__iter__"]], "__iter__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__iter__"]], "__iter__() (abjad.score.container method)": [[72, "abjad.score.Container.__iter__"]], "__iter__() (abjad.score.context method)": [[72, "abjad.score.Context.__iter__"]], "__iter__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__iter__"]], "__iter__() (abjad.score.score method)": [[72, "abjad.score.Score.__iter__"]], "__iter__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__iter__"]], "__iter__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__iter__"]], "__iter__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__iter__"]], "__iter__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__iter__"]], "__iter__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__iter__"]], "__le__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__le__"]], "__le__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__le__"]], "__le__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__le__"]], "__len__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__len__"]], "__len__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__len__"]], "__len__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__len__"]], "__len__() (abjad.score.container method)": [[72, "abjad.score.Container.__len__"]], "__len__() (abjad.score.context method)": [[72, "abjad.score.Context.__len__"]], "__len__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__len__"]], "__len__() (abjad.score.score method)": [[72, "abjad.score.Score.__len__"]], "__len__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__len__"]], "__len__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__len__"]], "__len__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__len__"]], "__len__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__len__"]], "__len__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__len__"]], "__lt__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__lt__"]], "__lt__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__lt__"]], "__lt__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__lt__"]], "__mul__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__mul__"]], "__ne__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__ne__"]], "__new__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__new__"]], "__repr__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__repr__"]], "__repr__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__repr__"]], "__repr__() (abjad.score.chord method)": [[72, "abjad.score.Chord.__repr__"]], "__repr__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__repr__"]], "__repr__() (abjad.score.container method)": [[72, "abjad.score.Container.__repr__"]], "__repr__() (abjad.score.context method)": [[72, "abjad.score.Context.__repr__"]], "__repr__() (abjad.score.drumnotehead method)": [[72, "abjad.score.DrumNoteHead.__repr__"]], "__repr__() (abjad.score.leaf method)": [[72, "abjad.score.Leaf.__repr__"]], "__repr__() (abjad.score.multimeasurerest method)": [[72, "abjad.score.MultimeasureRest.__repr__"]], "__repr__() (abjad.score.note method)": [[72, "abjad.score.Note.__repr__"]], "__repr__() (abjad.score.notehead method)": [[72, "abjad.score.NoteHead.__repr__"]], "__repr__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__repr__"]], "__repr__() (abjad.score.rest method)": [[72, "abjad.score.Rest.__repr__"]], "__repr__() (abjad.score.score method)": [[72, "abjad.score.Score.__repr__"]], "__repr__() (abjad.score.skip method)": [[72, "abjad.score.Skip.__repr__"]], "__repr__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__repr__"]], "__repr__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__repr__"]], "__repr__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__repr__"]], "__repr__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__repr__"]], "__repr__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__repr__"]], "__reversed__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__reversed__"]], "__rmul__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__rmul__"]], "__setitem__() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.__setitem__"]], "__setitem__() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.__setitem__"]], "__setitem__() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.__setitem__"]], "__setitem__() (abjad.score.container method)": [[72, "abjad.score.Container.__setitem__"]], "__setitem__() (abjad.score.context method)": [[72, "abjad.score.Context.__setitem__"]], "__setitem__() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.__setitem__"]], "__setitem__() (abjad.score.score method)": [[72, "abjad.score.Score.__setitem__"]], "__setitem__() (abjad.score.staff method)": [[72, "abjad.score.Staff.__setitem__"]], "__setitem__() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.__setitem__"]], "__setitem__() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.__setitem__"]], "__setitem__() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.__setitem__"]], "__setitem__() (abjad.score.voice method)": [[72, "abjad.score.Voice.__setitem__"]], "abjad.score": [[72, "module-abjad.score"]], "alternative (abjad.score.drumnotehead attribute)": [[72, "abjad.score.DrumNoteHead.alternative"]], "alternative (abjad.score.notehead attribute)": [[72, "abjad.score.NoteHead.alternative"]], "append() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.append"]], "append() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.append"]], "append() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.append"]], "append() (abjad.score.container method)": [[72, "abjad.score.Container.append"]], "append() (abjad.score.context method)": [[72, "abjad.score.Context.append"]], "append() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.append"]], "append() (abjad.score.score method)": [[72, "abjad.score.Score.append"]], "append() (abjad.score.staff method)": [[72, "abjad.score.Staff.append"]], "append() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.append"]], "append() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.append"]], "append() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.append"]], "append() (abjad.score.voice method)": [[72, "abjad.score.Voice.append"]], "augmentation() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.augmentation"]], "clear() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.clear"]], "colon_string (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.colon_string"]], "command (abjad.score.beforegracecontainer attribute)": [[72, "abjad.score.BeforeGraceContainer.command"]], "components (abjad.score.aftergracecontainer attribute)": [[72, "abjad.score.AfterGraceContainer.components"]], "components (abjad.score.beforegracecontainer attribute)": [[72, "abjad.score.BeforeGraceContainer.components"]], "components (abjad.score.cluster attribute)": [[72, "abjad.score.Cluster.components"]], "components (abjad.score.container attribute)": [[72, "abjad.score.Container.components"]], "components (abjad.score.context attribute)": [[72, "abjad.score.Context.components"]], "components (abjad.score.score attribute)": [[72, "abjad.score.Score.components"]], "components (abjad.score.staff attribute)": [[72, "abjad.score.Staff.components"]], "components (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.components"]], "components (abjad.score.tremolocontainer attribute)": [[72, "abjad.score.TremoloContainer.components"]], "components (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.components"]], "components (abjad.score.voice attribute)": [[72, "abjad.score.Voice.components"]], "consists_commands (abjad.score.context attribute)": [[72, "abjad.score.Context.consists_commands"]], "consists_commands (abjad.score.score attribute)": [[72, "abjad.score.Score.consists_commands"]], "consists_commands (abjad.score.staff attribute)": [[72, "abjad.score.Staff.consists_commands"]], "consists_commands (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.consists_commands"]], "consists_commands (abjad.score.voice attribute)": [[72, "abjad.score.Voice.consists_commands"]], "copy() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.copy"]], "count (abjad.score.tremolocontainer attribute)": [[72, "abjad.score.TremoloContainer.count"]], "count() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.count"]], "denominator (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.denominator"]], "diminution() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.diminution"]], "extend() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.extend"]], "extend() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.extend"]], "extend() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.extend"]], "extend() (abjad.score.container method)": [[72, "abjad.score.Container.extend"]], "extend() (abjad.score.context method)": [[72, "abjad.score.Context.extend"]], "extend() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.extend"]], "extend() (abjad.score.score method)": [[72, "abjad.score.Score.extend"]], "extend() (abjad.score.staff method)": [[72, "abjad.score.Staff.extend"]], "extend() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.extend"]], "extend() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.extend"]], "extend() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.extend"]], "extend() (abjad.score.voice method)": [[72, "abjad.score.Voice.extend"]], "force_fraction (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.force_fraction"]], "from_duration() (abjad.score.tuplet static method)": [[72, "abjad.score.Tuplet.from_duration"]], "from_pitch_and_duration() (abjad.score.note static method)": [[72, "abjad.score.Note.from_pitch_and_duration"]], "get() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.get"]], "hide (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.hide"]], "identifier (abjad.score.aftergracecontainer attribute)": [[72, "abjad.score.AfterGraceContainer.identifier"]], "identifier (abjad.score.beforegracecontainer attribute)": [[72, "abjad.score.BeforeGraceContainer.identifier"]], "identifier (abjad.score.cluster attribute)": [[72, "abjad.score.Cluster.identifier"]], "identifier (abjad.score.container attribute)": [[72, "abjad.score.Container.identifier"]], "identifier (abjad.score.context attribute)": [[72, "abjad.score.Context.identifier"]], "identifier (abjad.score.score attribute)": [[72, "abjad.score.Score.identifier"]], "identifier (abjad.score.staff attribute)": [[72, "abjad.score.Staff.identifier"]], "identifier (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.identifier"]], "identifier (abjad.score.tremolocontainer attribute)": [[72, "abjad.score.TremoloContainer.identifier"]], "identifier (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.identifier"]], "identifier (abjad.score.voice attribute)": [[72, "abjad.score.Voice.identifier"]], "implied_prolation (abjad.score.tremolocontainer attribute)": [[72, "abjad.score.TremoloContainer.implied_prolation"]], "implied_prolation (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.implied_prolation"]], "index() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.index"]], "index() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.index"]], "index() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.index"]], "index() (abjad.score.container method)": [[72, "abjad.score.Container.index"]], "index() (abjad.score.context method)": [[72, "abjad.score.Context.index"]], "index() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.index"]], "index() (abjad.score.score method)": [[72, "abjad.score.Score.index"]], "index() (abjad.score.staff method)": [[72, "abjad.score.Staff.index"]], "index() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.index"]], "index() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.index"]], "index() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.index"]], "index() (abjad.score.voice method)": [[72, "abjad.score.Voice.index"]], "insert() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.insert"]], "insert() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.insert"]], "insert() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.insert"]], "insert() (abjad.score.container method)": [[72, "abjad.score.Container.insert"]], "insert() (abjad.score.context method)": [[72, "abjad.score.Context.insert"]], "insert() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.insert"]], "insert() (abjad.score.score method)": [[72, "abjad.score.Score.insert"]], "insert() (abjad.score.staff method)": [[72, "abjad.score.Staff.insert"]], "insert() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.insert"]], "insert() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.insert"]], "insert() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.insert"]], "insert() (abjad.score.voice method)": [[72, "abjad.score.Voice.insert"]], "is_cautionary (abjad.score.drumnotehead attribute)": [[72, "abjad.score.DrumNoteHead.is_cautionary"]], "is_cautionary (abjad.score.notehead attribute)": [[72, "abjad.score.NoteHead.is_cautionary"]], "is_forced (abjad.score.drumnotehead attribute)": [[72, "abjad.score.DrumNoteHead.is_forced"]], "is_forced (abjad.score.notehead attribute)": [[72, "abjad.score.NoteHead.is_forced"]], "is_parenthesized (abjad.score.drumnotehead attribute)": [[72, "abjad.score.DrumNoteHead.is_parenthesized"]], "is_parenthesized (abjad.score.notehead attribute)": [[72, "abjad.score.NoteHead.is_parenthesized"]], "lilypond_context (abjad.score.context attribute)": [[72, "abjad.score.Context.lilypond_context"]], "lilypond_context (abjad.score.score attribute)": [[72, "abjad.score.Score.lilypond_context"]], "lilypond_context (abjad.score.staff attribute)": [[72, "abjad.score.Staff.lilypond_context"]], "lilypond_context (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.lilypond_context"]], "lilypond_context (abjad.score.voice attribute)": [[72, "abjad.score.Voice.lilypond_context"]], "lilypond_type (abjad.score.context attribute)": [[72, "abjad.score.Context.lilypond_type"]], "lilypond_type (abjad.score.score attribute)": [[72, "abjad.score.Score.lilypond_type"]], "lilypond_type (abjad.score.staff attribute)": [[72, "abjad.score.Staff.lilypond_type"]], "lilypond_type (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.lilypond_type"]], "lilypond_type (abjad.score.voice attribute)": [[72, "abjad.score.Voice.lilypond_type"]], "multiplied_duration (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.multiplied_duration"]], "multiplier (abjad.score.chord attribute)": [[72, "abjad.score.Chord.multiplier"]], "multiplier (abjad.score.leaf attribute)": [[72, "abjad.score.Leaf.multiplier"]], "multiplier (abjad.score.multimeasurerest attribute)": [[72, "abjad.score.MultimeasureRest.multiplier"]], "multiplier (abjad.score.note attribute)": [[72, "abjad.score.Note.multiplier"]], "multiplier (abjad.score.rest attribute)": [[72, "abjad.score.Rest.multiplier"]], "multiplier (abjad.score.skip attribute)": [[72, "abjad.score.Skip.multiplier"]], "multiplier (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.multiplier"]], "name (abjad.score.aftergracecontainer attribute)": [[72, "abjad.score.AfterGraceContainer.name"]], "name (abjad.score.beforegracecontainer attribute)": [[72, "abjad.score.BeforeGraceContainer.name"]], "name (abjad.score.cluster attribute)": [[72, "abjad.score.Cluster.name"]], "name (abjad.score.container attribute)": [[72, "abjad.score.Container.name"]], "name (abjad.score.context attribute)": [[72, "abjad.score.Context.name"]], "name (abjad.score.score attribute)": [[72, "abjad.score.Score.name"]], "name (abjad.score.staff attribute)": [[72, "abjad.score.Staff.name"]], "name (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.name"]], "name (abjad.score.tremolocontainer attribute)": [[72, "abjad.score.TremoloContainer.name"]], "name (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.name"]], "name (abjad.score.voice attribute)": [[72, "abjad.score.Voice.name"]], "named_pitch (abjad.score.drumnotehead attribute)": [[72, "abjad.score.DrumNoteHead.named_pitch"]], "named_pitch (abjad.score.notehead attribute)": [[72, "abjad.score.NoteHead.named_pitch"]], "normalize_multiplier() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.normalize_multiplier"]], "note_head (abjad.score.note attribute)": [[72, "abjad.score.Note.note_head"]], "note_heads (abjad.score.chord attribute)": [[72, "abjad.score.Chord.note_heads"]], "pop() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.pop"]], "pop() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.pop"]], "pop() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.pop"]], "pop() (abjad.score.container method)": [[72, "abjad.score.Container.pop"]], "pop() (abjad.score.context method)": [[72, "abjad.score.Context.pop"]], "pop() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.pop"]], "pop() (abjad.score.score method)": [[72, "abjad.score.Score.pop"]], "pop() (abjad.score.staff method)": [[72, "abjad.score.Staff.pop"]], "pop() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.pop"]], "pop() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.pop"]], "pop() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.pop"]], "pop() (abjad.score.voice method)": [[72, "abjad.score.Voice.pop"]], "remove() (abjad.score.aftergracecontainer method)": [[72, "abjad.score.AfterGraceContainer.remove"]], "remove() (abjad.score.beforegracecontainer method)": [[72, "abjad.score.BeforeGraceContainer.remove"]], "remove() (abjad.score.cluster method)": [[72, "abjad.score.Cluster.remove"]], "remove() (abjad.score.container method)": [[72, "abjad.score.Container.remove"]], "remove() (abjad.score.context method)": [[72, "abjad.score.Context.remove"]], "remove() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.remove"]], "remove() (abjad.score.score method)": [[72, "abjad.score.Score.remove"]], "remove() (abjad.score.staff method)": [[72, "abjad.score.Staff.remove"]], "remove() (abjad.score.staffgroup method)": [[72, "abjad.score.StaffGroup.remove"]], "remove() (abjad.score.tremolocontainer method)": [[72, "abjad.score.TremoloContainer.remove"]], "remove() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.remove"]], "remove() (abjad.score.voice method)": [[72, "abjad.score.Voice.remove"]], "remove_commands (abjad.score.context attribute)": [[72, "abjad.score.Context.remove_commands"]], "remove_commands (abjad.score.score attribute)": [[72, "abjad.score.Score.remove_commands"]], "remove_commands (abjad.score.staff attribute)": [[72, "abjad.score.Staff.remove_commands"]], "remove_commands (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.remove_commands"]], "remove_commands (abjad.score.voice attribute)": [[72, "abjad.score.Voice.remove_commands"]], "rest_filled() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.rest_filled"]], "reverse() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.reverse"]], "rewrite_dots() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.rewrite_dots"]], "set_minimum_denominator() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.set_minimum_denominator"]], "simultaneous (abjad.score.aftergracecontainer attribute)": [[72, "abjad.score.AfterGraceContainer.simultaneous"]], "simultaneous (abjad.score.beforegracecontainer attribute)": [[72, "abjad.score.BeforeGraceContainer.simultaneous"]], "simultaneous (abjad.score.cluster attribute)": [[72, "abjad.score.Cluster.simultaneous"]], "simultaneous (abjad.score.container attribute)": [[72, "abjad.score.Container.simultaneous"]], "simultaneous (abjad.score.context attribute)": [[72, "abjad.score.Context.simultaneous"]], "simultaneous (abjad.score.score attribute)": [[72, "abjad.score.Score.simultaneous"]], "simultaneous (abjad.score.staff attribute)": [[72, "abjad.score.Staff.simultaneous"]], "simultaneous (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.simultaneous"]], "simultaneous (abjad.score.tremolocontainer attribute)": [[72, "abjad.score.TremoloContainer.simultaneous"]], "simultaneous (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.simultaneous"]], "simultaneous (abjad.score.voice attribute)": [[72, "abjad.score.Voice.simultaneous"]], "sort() (abjad.score.noteheadlist method)": [[72, "abjad.score.NoteHeadList.sort"]], "tag (abjad.score.aftergracecontainer attribute)": [[72, "abjad.score.AfterGraceContainer.tag"]], "tag (abjad.score.beforegracecontainer attribute)": [[72, "abjad.score.BeforeGraceContainer.tag"]], "tag (abjad.score.chord attribute)": [[72, "abjad.score.Chord.tag"]], "tag (abjad.score.cluster attribute)": [[72, "abjad.score.Cluster.tag"]], "tag (abjad.score.component attribute)": [[72, "abjad.score.Component.tag"]], "tag (abjad.score.container attribute)": [[72, "abjad.score.Container.tag"]], "tag (abjad.score.context attribute)": [[72, "abjad.score.Context.tag"]], "tag (abjad.score.leaf attribute)": [[72, "abjad.score.Leaf.tag"]], "tag (abjad.score.multimeasurerest attribute)": [[72, "abjad.score.MultimeasureRest.tag"]], "tag (abjad.score.note attribute)": [[72, "abjad.score.Note.tag"]], "tag (abjad.score.rest attribute)": [[72, "abjad.score.Rest.tag"]], "tag (abjad.score.score attribute)": [[72, "abjad.score.Score.tag"]], "tag (abjad.score.skip attribute)": [[72, "abjad.score.Skip.tag"]], "tag (abjad.score.staff attribute)": [[72, "abjad.score.Staff.tag"]], "tag (abjad.score.staffgroup attribute)": [[72, "abjad.score.StaffGroup.tag"]], "tag (abjad.score.tremolocontainer attribute)": [[72, "abjad.score.TremoloContainer.tag"]], "tag (abjad.score.tuplet attribute)": [[72, "abjad.score.Tuplet.tag"]], "tag (abjad.score.voice attribute)": [[72, "abjad.score.Voice.tag"]], "toggle_prolation() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.toggle_prolation"]], "trivial() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.trivial"]], "trivializable() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.trivializable"]], "trivialize() (abjad.score.tuplet method)": [[72, "abjad.score.Tuplet.trivialize"]], "written_duration (abjad.score.chord attribute)": [[72, "abjad.score.Chord.written_duration"]], "written_duration (abjad.score.leaf attribute)": [[72, "abjad.score.Leaf.written_duration"]], "written_duration (abjad.score.multimeasurerest attribute)": [[72, "abjad.score.MultimeasureRest.written_duration"]], "written_duration (abjad.score.note attribute)": [[72, "abjad.score.Note.written_duration"]], "written_duration (abjad.score.rest attribute)": [[72, "abjad.score.Rest.written_duration"]], "written_duration (abjad.score.skip attribute)": [[72, "abjad.score.Skip.written_duration"]], "written_pitch (abjad.score.drumnotehead attribute)": [[72, "abjad.score.DrumNoteHead.written_pitch"]], "written_pitch (abjad.score.note attribute)": [[72, "abjad.score.Note.written_pitch"]], "written_pitch (abjad.score.notehead attribute)": [[72, "abjad.score.NoteHead.written_pitch"]], "written_pitches (abjad.score.chord attribute)": [[72, "abjad.score.Chord.written_pitches"]], "logicaltie (class in abjad.select)": [[73, "abjad.select.LogicalTie"]], "__class_getitem__() (abjad.select.logicaltie class method)": [[73, "abjad.select.LogicalTie.__class_getitem__"]], "__contains__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__contains__"]], "__eq__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__eq__"]], "__getitem__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__getitem__"]], "__hash__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__hash__"]], "__iter__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__iter__"]], "__len__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__len__"]], "__repr__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__repr__"]], "__reversed__() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.__reversed__"]], "abjad.select": [[73, "module-abjad.select"]], "chord() (in module abjad.select)": [[73, "abjad.select.chord"]], "chords() (in module abjad.select)": [[73, "abjad.select.chords"]], "components() (in module abjad.select)": [[73, "abjad.select.components"]], "count() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.count"]], "exclude() (in module abjad.select)": [[73, "abjad.select.exclude"]], "filter() (in module abjad.select)": [[73, "abjad.select.filter"]], "flatten() (in module abjad.select)": [[73, "abjad.select.flatten"]], "get() (in module abjad.select)": [[73, "abjad.select.get"]], "group() (in module abjad.select)": [[73, "abjad.select.group"]], "group_by() (in module abjad.select)": [[73, "abjad.select.group_by"]], "group_by_contiguity() (in module abjad.select)": [[73, "abjad.select.group_by_contiguity"]], "group_by_duration() (in module abjad.select)": [[73, "abjad.select.group_by_duration"]], "group_by_length() (in module abjad.select)": [[73, "abjad.select.group_by_length"]], "group_by_measure() (in module abjad.select)": [[73, "abjad.select.group_by_measure"]], "group_by_pitch() (in module abjad.select)": [[73, "abjad.select.group_by_pitch"]], "head (abjad.select.logicaltie attribute)": [[73, "abjad.select.LogicalTie.head"]], "index() (abjad.select.logicaltie method)": [[73, "abjad.select.LogicalTie.index"]], "is_pitched (abjad.select.logicaltie attribute)": [[73, "abjad.select.LogicalTie.is_pitched"]], "is_trivial (abjad.select.logicaltie attribute)": [[73, "abjad.select.LogicalTie.is_trivial"]], "items (abjad.select.logicaltie attribute)": [[73, "abjad.select.LogicalTie.items"]], "leaf() (in module abjad.select)": [[73, "abjad.select.leaf"]], "leaves() (in module abjad.select)": [[73, "abjad.select.leaves"]], "logical_tie() (in module abjad.select)": [[73, "abjad.select.logical_tie"]], "logical_ties() (in module abjad.select)": [[73, "abjad.select.logical_ties"]], "nontrivial() (in module abjad.select)": [[73, "abjad.select.nontrivial"]], "note() (in module abjad.select)": [[73, "abjad.select.note"]], "notes() (in module abjad.select)": [[73, "abjad.select.notes"]], "partition_by_counts() (in module abjad.select)": [[73, "abjad.select.partition_by_counts"]], "partition_by_durations() (in module abjad.select)": [[73, "abjad.select.partition_by_durations"]], "partition_by_ratio() (in module abjad.select)": [[73, "abjad.select.partition_by_ratio"]], "rest() (in module abjad.select)": [[73, "abjad.select.rest"]], "rests() (in module abjad.select)": [[73, "abjad.select.rests"]], "run() (in module abjad.select)": [[73, "abjad.select.run"]], "runs() (in module abjad.select)": [[73, "abjad.select.runs"]], "tail (abjad.select.logicaltie attribute)": [[73, "abjad.select.LogicalTie.tail"]], "top() (in module abjad.select)": [[73, "abjad.select.top"]], "tuplet() (in module abjad.select)": [[73, "abjad.select.tuplet"]], "tuplets() (in module abjad.select)": [[73, "abjad.select.tuplets"]], "with_next_leaf() (in module abjad.select)": [[73, "abjad.select.with_next_leaf"]], "with_previous_leaf() (in module abjad.select)": [[73, "abjad.select.with_previous_leaf"]], "written_duration (abjad.select.logicaltie attribute)": [[73, "abjad.select.LogicalTie.written_duration"]], "abjad.sequence": [[74, "module-abjad.sequence"]], "filter() (in module abjad.sequence)": [[74, "abjad.sequence.filter"]], "flatten() (in module abjad.sequence)": [[74, "abjad.sequence.flatten"]], "group_by() (in module abjad.sequence)": [[74, "abjad.sequence.group_by"]], "has_duplicates() (in module abjad.sequence)": [[74, "abjad.sequence.has_duplicates"]], "is_decreasing() (in module abjad.sequence)": [[74, "abjad.sequence.is_decreasing"]], "is_increasing() (in module abjad.sequence)": [[74, "abjad.sequence.is_increasing"]], "is_permutation() (in module abjad.sequence)": [[74, "abjad.sequence.is_permutation"]], "is_repetition_free() (in module abjad.sequence)": [[74, "abjad.sequence.is_repetition_free"]], "join() (in module abjad.sequence)": [[74, "abjad.sequence.join"]], "map() (in module abjad.sequence)": [[74, "abjad.sequence.map"]], "nwise() (in module abjad.sequence)": [[74, "abjad.sequence.nwise"]], "partition_by_counts() (in module abjad.sequence)": [[74, "abjad.sequence.partition_by_counts"]], "partition_by_ratio_of_lengths() (in module abjad.sequence)": [[74, "abjad.sequence.partition_by_ratio_of_lengths"]], "partition_by_ratio_of_weights() (in module abjad.sequence)": [[74, "abjad.sequence.partition_by_ratio_of_weights"]], "partition_by_weights() (in module abjad.sequence)": [[74, "abjad.sequence.partition_by_weights"]], "permute() (in module abjad.sequence)": [[74, "abjad.sequence.permute"]], "remove() (in module abjad.sequence)": [[74, "abjad.sequence.remove"]], "remove_repeats() (in module abjad.sequence)": [[74, "abjad.sequence.remove_repeats"]], "repeat() (in module abjad.sequence)": [[74, "abjad.sequence.repeat"]], "repeat_to_length() (in module abjad.sequence)": [[74, "abjad.sequence.repeat_to_length"]], "repeat_to_weight() (in module abjad.sequence)": [[74, "abjad.sequence.repeat_to_weight"]], "replace() (in module abjad.sequence)": [[74, "abjad.sequence.replace"]], "replace_at() (in module abjad.sequence)": [[74, "abjad.sequence.replace_at"]], "retain() (in module abjad.sequence)": [[74, "abjad.sequence.retain"]], "retain_pattern() (in module abjad.sequence)": [[74, "abjad.sequence.retain_pattern"]], "reverse() (in module abjad.sequence)": [[74, "abjad.sequence.reverse"]], "rotate() (in module abjad.sequence)": [[74, "abjad.sequence.rotate"]], "sort() (in module abjad.sequence)": [[74, "abjad.sequence.sort"]], "split() (in module abjad.sequence)": [[74, "abjad.sequence.split"]], "sum() (in module abjad.sequence)": [[74, "abjad.sequence.sum"]], "sum_by_sign() (in module abjad.sequence)": [[74, "abjad.sequence.sum_by_sign"]], "truncate() (in module abjad.sequence)": [[74, "abjad.sequence.truncate"]], "weight() (in module abjad.sequence)": [[74, "abjad.sequence.weight"]], "zip() (in module abjad.sequence)": [[74, "abjad.sequence.zip"]], "setclass (class in abjad.setclass)": [[75, "abjad.setclass.SetClass"]], "__eq__() (abjad.setclass.setclass method)": [[75, "abjad.setclass.SetClass.__eq__"]], "__hash__() (abjad.setclass.setclass method)": [[75, "abjad.setclass.SetClass.__hash__"]], "__post_init__() (abjad.setclass.setclass method)": [[75, "abjad.setclass.SetClass.__post_init__"]], "__repr__() (abjad.setclass.setclass method)": [[75, "abjad.setclass.SetClass.__repr__"]], "__str__() (abjad.setclass.setclass method)": [[75, "abjad.setclass.SetClass.__str__"]], "abjad.setclass": [[75, "module-abjad.setclass"]], "from_pitch_class_set() (abjad.setclass.setclass static method)": [[75, "abjad.setclass.SetClass.from_pitch_class_set"]], "is_inversion_equivalent (abjad.setclass.setclass attribute)": [[75, "abjad.setclass.SetClass.is_inversion_equivalent"]], "list_set_classes() (abjad.setclass.setclass static method)": [[75, "abjad.setclass.SetClass.list_set_classes"]], "prime_form (abjad.setclass.setclass attribute)": [[75, "abjad.setclass.SetClass.prime_form"]], "abjad.spanners": [[76, "module-abjad.spanners"]], "beam() (in module abjad.spanners)": [[76, "abjad.spanners.beam"]], "glissando() (in module abjad.spanners)": [[76, "abjad.spanners.glissando"]], "hairpin() (in module abjad.spanners)": [[76, "abjad.spanners.hairpin"]], "horizontal_bracket() (in module abjad.spanners)": [[76, "abjad.spanners.horizontal_bracket"]], "ottava() (in module abjad.spanners)": [[76, "abjad.spanners.ottava"]], "phrasing_slur() (in module abjad.spanners)": [[76, "abjad.spanners.phrasing_slur"]], "piano_pedal() (in module abjad.spanners)": [[76, "abjad.spanners.piano_pedal"]], "slur() (in module abjad.spanners)": [[76, "abjad.spanners.slur"]], "text_spanner() (in module abjad.spanners)": [[76, "abjad.spanners.text_spanner"]], "tie() (in module abjad.spanners)": [[76, "abjad.spanners.tie"]], "trill_spanner() (in module abjad.spanners)": [[76, "abjad.spanners.trill_spanner"]], "abjad.string": [[77, "module-abjad.string"]], "capitalize_start() (in module abjad.string)": [[77, "abjad.string.capitalize_start"]], "delimit_words() (in module abjad.string)": [[77, "abjad.string.delimit_words"]], "from_roman() (in module abjad.string)": [[77, "abjad.string.from_roman"]], "is_lilypond_identifier() (in module abjad.string)": [[77, "abjad.string.is_lilypond_identifier"]], "is_roman() (in module abjad.string)": [[77, "abjad.string.is_roman"]], "is_shout_case() (in module abjad.string)": [[77, "abjad.string.is_shout_case"]], "normalize() (in module abjad.string)": [[77, "abjad.string.normalize"]], "pluralize() (in module abjad.string)": [[77, "abjad.string.pluralize"]], "sort_roman() (in module abjad.string)": [[77, "abjad.string.sort_roman"]], "strip_roman() (in module abjad.string)": [[77, "abjad.string.strip_roman"]], "to_shout_case() (in module abjad.string)": [[77, "abjad.string.to_shout_case"]], "to_tridirectional_lilypond_symbol() (in module abjad.string)": [[77, "abjad.string.to_tridirectional_lilypond_symbol"]], "to_tridirectional_ordinal_constant() (in module abjad.string)": [[77, "abjad.string.to_tridirectional_ordinal_constant"]], "to_upper_camel_case() (in module abjad.string)": [[77, "abjad.string.to_upper_camel_case"]], "tag (class in abjad.tag)": [[78, "abjad.tag.Tag"]], "__delattr__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__delattr__"]], "__eq__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__eq__"]], "__ge__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__ge__"]], "__gt__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__gt__"]], "__hash__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__hash__"]], "__le__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__le__"]], "__lt__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__lt__"]], "__post_init__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__post_init__"]], "__repr__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__repr__"]], "__setattr__() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.__setattr__"]], "abjad.tag": [[78, "module-abjad.tag"]], "activate() (in module abjad.tag)": [[78, "abjad.tag.activate"]], "append() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.append"]], "deactivate() (in module abjad.tag)": [[78, "abjad.tag.deactivate"]], "double_tag() (in module abjad.tag)": [[78, "abjad.tag.double_tag"]], "editions() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.editions"]], "invert_edition_tags() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.invert_edition_tags"]], "left_shift_tags() (in module abjad.tag)": [[78, "abjad.tag.left_shift_tags"]], "not_editions() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.not_editions"]], "only_edition() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.only_edition"]], "remove_tags() (in module abjad.tag)": [[78, "abjad.tag.remove_tags"]], "words() (abjad.tag.tag method)": [[78, "abjad.tag.Tag.words"]], "offsetcounter (class in abjad.timespan)": [[79, "abjad.timespan.OffsetCounter"]], "timespan (class in abjad.timespan)": [[79, "abjad.timespan.Timespan"]], "timespanlist (class in abjad.timespan)": [[79, "abjad.timespan.TimespanList"]], "__add__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__add__"]], "__and__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__and__"]], "__and__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__and__"]], "__class_getitem__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__class_getitem__"]], "__contains__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__contains__"]], "__contains__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__contains__"]], "__delitem__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__delitem__"]], "__eq__() (abjad.timespan.offsetcounter method)": [[79, "abjad.timespan.OffsetCounter.__eq__"]], "__eq__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__eq__"]], "__eq__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__eq__"]], "__ge__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__ge__"]], "__ge__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__ge__"]], "__getitem__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__getitem__"]], "__gt__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__gt__"]], "__gt__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__gt__"]], "__hash__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__hash__"]], "__iadd__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__iadd__"]], "__imul__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__imul__"]], "__invert__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__invert__"]], "__iter__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__iter__"]], "__le__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__le__"]], "__le__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__le__"]], "__len__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__len__"]], "__len__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__len__"]], "__lt__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__lt__"]], "__lt__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__lt__"]], "__mul__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__mul__"]], "__ne__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__ne__"]], "__new__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__new__"]], "__or__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__or__"]], "__post_init__() (abjad.timespan.offsetcounter method)": [[79, "abjad.timespan.OffsetCounter.__post_init__"]], "__post_init__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__post_init__"]], "__repr__() (abjad.timespan.offsetcounter method)": [[79, "abjad.timespan.OffsetCounter.__repr__"]], "__repr__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__repr__"]], "__repr__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__repr__"]], "__reversed__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__reversed__"]], "__rmul__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__rmul__"]], "__setitem__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__setitem__"]], "__sub__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__sub__"]], "__sub__() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.__sub__"]], "__xor__() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.__xor__"]], "abjad.timespan": [[79, "module-abjad.timespan"]], "all_are_contiguous (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.all_are_contiguous"]], "all_are_nonoverlapping (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.all_are_nonoverlapping"]], "all_are_wellformed (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.all_are_wellformed"]], "append() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.append"]], "axis (abjad.timespan.timespan attribute)": [[79, "abjad.timespan.Timespan.axis"]], "axis (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.axis"]], "clear() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.clear"]], "clip_timespan_durations() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.clip_timespan_durations"]], "compute_logical_and() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.compute_logical_and"]], "compute_logical_or() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.compute_logical_or"]], "compute_logical_xor() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.compute_logical_xor"]], "compute_overlap_factor() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.compute_overlap_factor"]], "compute_overlap_factor_mapping() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.compute_overlap_factor_mapping"]], "copy() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.copy"]], "count() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.count"]], "count_offsets() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.count_offsets"]], "divide_by_ratio() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.divide_by_ratio"]], "duration (abjad.timespan.timespan attribute)": [[79, "abjad.timespan.Timespan.duration"]], "duration (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.duration"]], "explode() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.explode"]], "extend() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.extend"]], "get_overlap_with_timespan() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.get_overlap_with_timespan"]], "get_timespan_that_satisfies_time_relation() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.get_timespan_that_satisfies_time_relation"]], "get_timespans_that_satisfy_time_relation() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.get_timespans_that_satisfy_time_relation"]], "has_timespan_that_satisfies_time_relation() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.has_timespan_that_satisfies_time_relation"]], "index() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.index"]], "insert() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.insert"]], "is_sorted (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.is_sorted"]], "offsets (abjad.timespan.timespan attribute)": [[79, "abjad.timespan.Timespan.offsets"]], "partition() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.partition"]], "pop() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.pop"]], "reflect() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.reflect"]], "reflect() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.reflect"]], "remove() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.remove"]], "remove_degenerate_timespans() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.remove_degenerate_timespans"]], "repeat_to_stop_offset() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.repeat_to_stop_offset"]], "reverse() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.reverse"]], "rotate() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.rotate"]], "round_offsets() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.round_offsets"]], "round_offsets() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.round_offsets"]], "scale() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.scale"]], "scale() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.scale"]], "set_duration() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.set_duration"]], "set_offsets() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.set_offsets"]], "sort() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.sort"]], "split_at_offset() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.split_at_offset"]], "split_at_offset() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.split_at_offset"]], "split_at_offsets() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.split_at_offsets"]], "split_at_offsets() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.split_at_offsets"]], "start_offset (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.start_offset"]], "stop_offset (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.stop_offset"]], "stretch() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.stretch"]], "stretch() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.stretch"]], "timespan (abjad.timespan.timespanlist attribute)": [[79, "abjad.timespan.TimespanList.timespan"]], "translate() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.translate"]], "translate() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.translate"]], "translate_offsets() (abjad.timespan.timespan method)": [[79, "abjad.timespan.Timespan.translate_offsets"]], "translate_offsets() (abjad.timespan.timespanlist method)": [[79, "abjad.timespan.TimespanList.translate_offsets"]], "wellformed (abjad.timespan.timespan attribute)": [[79, "abjad.timespan.Timespan.wellformed"]], "bundle (class in abjad.tweaks)": [[80, "abjad.tweaks.Bundle"]], "tweak (class in abjad.tweaks)": [[80, "abjad.tweaks.Tweak"]], "__delattr__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__delattr__"]], "__delattr__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__delattr__"]], "__eq__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__eq__"]], "__eq__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__eq__"]], "__ge__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__ge__"]], "__ge__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__ge__"]], "__gt__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__gt__"]], "__gt__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__gt__"]], "__hash__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__hash__"]], "__hash__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__hash__"]], "__le__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__le__"]], "__le__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__le__"]], "__lt__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__lt__"]], "__lt__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__lt__"]], "__post_init__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__post_init__"]], "__post_init__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__post_init__"]], "__repr__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__repr__"]], "__repr__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__repr__"]], "__setattr__() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.__setattr__"]], "__setattr__() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.__setattr__"]], "abjad.tweaks": [[80, "module-abjad.tweaks"]], "attribute() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.attribute"]], "bundle() (in module abjad.tweaks)": [[80, "abjad.tweaks.bundle"]], "get_attribute() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.get_attribute"]], "post_event() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.post_event"]], "remove() (abjad.tweaks.bundle method)": [[80, "abjad.tweaks.Bundle.remove"]], "tweak() (in module abjad.tweaks)": [[80, "abjad.tweaks.tweak"]], "value() (abjad.tweaks.tweak method)": [[80, "abjad.tweaks.Tweak.value"]], "verticalmoment (class in abjad.verticalmoment)": [[81, "abjad.verticalmoment.VerticalMoment"]], "__eq__() (abjad.verticalmoment.verticalmoment method)": [[81, "abjad.verticalmoment.VerticalMoment.__eq__"]], "__hash__() (abjad.verticalmoment.verticalmoment method)": [[81, "abjad.verticalmoment.VerticalMoment.__hash__"]], "__len__() (abjad.verticalmoment.verticalmoment method)": [[81, "abjad.verticalmoment.VerticalMoment.__len__"]], "__repr__() (abjad.verticalmoment.verticalmoment method)": [[81, "abjad.verticalmoment.VerticalMoment.__repr__"]], "abjad.verticalmoment": [[81, "module-abjad.verticalmoment"]], "attack_count (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.attack_count"]], "components (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.components"]], "governors (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.governors"]], "iterate_leaf_pairs() (in module abjad.verticalmoment)": [[81, "abjad.verticalmoment.iterate_leaf_pairs"]], "iterate_pitch_pairs() (in module abjad.verticalmoment)": [[81, "abjad.verticalmoment.iterate_pitch_pairs"]], "iterate_vertical_moments() (in module abjad.verticalmoment)": [[81, "abjad.verticalmoment.iterate_vertical_moments"]], "leaves (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.leaves"]], "notes (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.notes"]], "notes_and_chords (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.notes_and_chords"]], "offset (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.offset"]], "overlap_components (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.overlap_components"]], "overlap_leaves (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.overlap_leaves"]], "overlap_notes (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.overlap_notes"]], "start_components (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.start_components"]], "start_leaves (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.start_leaves"]], "start_notes (abjad.verticalmoment.verticalmoment attribute)": [[81, "abjad.verticalmoment.VerticalMoment.start_notes"]], "abjad.wf": [[82, "module-abjad.wf"]], "check_beamed_long_notes() (in module abjad.wf)": [[82, "abjad.wf.check_beamed_long_notes"]], "check_duplicate_ids() (in module abjad.wf)": [[82, "abjad.wf.check_duplicate_ids"]], "check_empty_containers() (in module abjad.wf)": [[82, "abjad.wf.check_empty_containers"]], "check_missing_parents() (in module abjad.wf)": [[82, "abjad.wf.check_missing_parents"]], "check_notes_on_wrong_clef() (in module abjad.wf)": [[82, "abjad.wf.check_notes_on_wrong_clef"]], "check_out_of_range_pitches() (in module abjad.wf)": [[82, "abjad.wf.check_out_of_range_pitches"]], "check_overlapping_text_spanners() (in module abjad.wf)": [[82, "abjad.wf.check_overlapping_text_spanners"]], "check_unmatched_stop_text_spans() (in module abjad.wf)": [[82, "abjad.wf.check_unmatched_stop_text_spans"]], "check_unterminated_hairpins() (in module abjad.wf)": [[82, "abjad.wf.check_unterminated_hairpins"]], "check_unterminated_text_spanners() (in module abjad.wf)": [[82, "abjad.wf.check_unterminated_text_spanners"]], "tabulate_wellformedness() (in module abjad.wf)": [[82, "abjad.wf.tabulate_wellformedness"]], "wellformed() (in module abjad.wf)": [[82, "abjad.wf.wellformed"]], "abjadext": [[83, "module-abjadext"]], "attackpointoptimizer (class in abjadext.nauert.attackpointoptimizers)": [[84, "abjadext.nauert.attackpointoptimizers.AttackPointOptimizer"]], "measurewiseattackpointoptimizer (class in abjadext.nauert.attackpointoptimizers)": [[84, "abjadext.nauert.attackpointoptimizers.MeasurewiseAttackPointOptimizer"]], "naiveattackpointoptimizer (class in abjadext.nauert.attackpointoptimizers)": [[84, "abjadext.nauert.attackpointoptimizers.NaiveAttackPointOptimizer"]], "nullattackpointoptimizer (class in abjadext.nauert.attackpointoptimizers)": [[84, "abjadext.nauert.attackpointoptimizers.NullAttackPointOptimizer"]], "__call__() (abjadext.nauert.attackpointoptimizers.attackpointoptimizer method)": [[84, "abjadext.nauert.attackpointoptimizers.AttackPointOptimizer.__call__"]], "__call__() (abjadext.nauert.attackpointoptimizers.measurewiseattackpointoptimizer method)": [[84, "abjadext.nauert.attackpointoptimizers.MeasurewiseAttackPointOptimizer.__call__"]], "__call__() (abjadext.nauert.attackpointoptimizers.naiveattackpointoptimizer method)": [[84, "abjadext.nauert.attackpointoptimizers.NaiveAttackPointOptimizer.__call__"]], "__call__() (abjadext.nauert.attackpointoptimizers.nullattackpointoptimizer method)": [[84, "abjadext.nauert.attackpointoptimizers.NullAttackPointOptimizer.__call__"]], "abjadext.nauert.attackpointoptimizers": [[84, "module-abjadext.nauert.attackpointoptimizers"]], "collapsinggracehandler (class in abjadext.nauert.gracehandlers)": [[85, "abjadext.nauert.gracehandlers.CollapsingGraceHandler"]], "concatenatinggracehandler (class in abjadext.nauert.gracehandlers)": [[85, "abjadext.nauert.gracehandlers.ConcatenatingGraceHandler"]], "discardinggracehandler (class in abjadext.nauert.gracehandlers)": [[85, "abjadext.nauert.gracehandlers.DiscardingGraceHandler"]], "gracehandler (class in abjadext.nauert.gracehandlers)": [[85, "abjadext.nauert.gracehandlers.GraceHandler"]], "__call__() (abjadext.nauert.gracehandlers.collapsinggracehandler method)": [[85, "abjadext.nauert.gracehandlers.CollapsingGraceHandler.__call__"]], "__call__() (abjadext.nauert.gracehandlers.concatenatinggracehandler method)": [[85, "abjadext.nauert.gracehandlers.ConcatenatingGraceHandler.__call__"]], "__call__() (abjadext.nauert.gracehandlers.discardinggracehandler method)": [[85, "abjadext.nauert.gracehandlers.DiscardingGraceHandler.__call__"]], "__call__() (abjadext.nauert.gracehandlers.gracehandler method)": [[85, "abjadext.nauert.gracehandlers.GraceHandler.__call__"]], "abjadext.nauert.gracehandlers": [[85, "module-abjadext.nauert.gracehandlers"]], "discard_grace_rest (abjadext.nauert.gracehandlers.concatenatinggracehandler attribute)": [[85, "abjadext.nauert.gracehandlers.ConcatenatingGraceHandler.discard_grace_rest"]], "grace_duration (abjadext.nauert.gracehandlers.concatenatinggracehandler attribute)": [[85, "abjadext.nauert.gracehandlers.ConcatenatingGraceHandler.grace_duration"]], "handle_orphaned_q_event_proxies() (abjadext.nauert.gracehandlers.concatenatinggracehandler method)": [[85, "abjadext.nauert.gracehandlers.ConcatenatingGraceHandler.handle_orphaned_q_event_proxies"]], "replace_rest_with_final_grace_note (abjadext.nauert.gracehandlers.concatenatinggracehandler attribute)": [[85, "abjadext.nauert.gracehandlers.ConcatenatingGraceHandler.replace_rest_with_final_grace_note"]], "distanceheuristic (class in abjadext.nauert.heuristics)": [[86, "abjadext.nauert.heuristics.DistanceHeuristic"]], "heuristic (class in abjadext.nauert.heuristics)": [[86, "abjadext.nauert.heuristics.Heuristic"]], "__call__() (abjadext.nauert.heuristics.distanceheuristic method)": [[86, "abjadext.nauert.heuristics.DistanceHeuristic.__call__"]], "__call__() (abjadext.nauert.heuristics.heuristic method)": [[86, "abjadext.nauert.heuristics.Heuristic.__call__"]], "abjadext.nauert.heuristics": [[86, "module-abjadext.nauert.heuristics"]], "abjadext.nauert": [[87, "module-abjadext.nauert"]], "jobhandler (class in abjadext.nauert.jobhandlers)": [[88, "abjadext.nauert.jobhandlers.JobHandler"]], "paralleljobhandler (class in abjadext.nauert.jobhandlers)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandler"]], "paralleljobhandlerworker (class in abjadext.nauert.jobhandlers)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker"]], "serialjobhandler (class in abjadext.nauert.jobhandlers)": [[88, "abjadext.nauert.jobhandlers.SerialJobHandler"]], "__call__() (abjadext.nauert.jobhandlers.jobhandler method)": [[88, "abjadext.nauert.jobhandlers.JobHandler.__call__"]], "__call__() (abjadext.nauert.jobhandlers.paralleljobhandler method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandler.__call__"]], "__call__() (abjadext.nauert.jobhandlers.serialjobhandler method)": [[88, "abjadext.nauert.jobhandlers.SerialJobHandler.__call__"]], "__repr__() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.__repr__"]], "abjadext.nauert.jobhandlers": [[88, "module-abjadext.nauert.jobhandlers"]], "authkey (abjadext.nauert.jobhandlers.paralleljobhandlerworker attribute)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.authkey"]], "close() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.close"]], "daemon (abjadext.nauert.jobhandlers.paralleljobhandlerworker attribute)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.daemon"]], "exitcode (abjadext.nauert.jobhandlers.paralleljobhandlerworker attribute)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.exitcode"]], "ident (abjadext.nauert.jobhandlers.paralleljobhandlerworker attribute)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.ident"]], "is_alive() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.is_alive"]], "join() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.join"]], "kill() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.kill"]], "name (abjadext.nauert.jobhandlers.paralleljobhandlerworker attribute)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.name"]], "pid (abjadext.nauert.jobhandlers.paralleljobhandlerworker attribute)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.pid"]], "run() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.run"]], "sentinel (abjadext.nauert.jobhandlers.paralleljobhandlerworker attribute)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.sentinel"]], "start() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.start"]], "terminate() (abjadext.nauert.jobhandlers.paralleljobhandlerworker method)": [[88, "abjadext.nauert.jobhandlers.ParallelJobHandlerWorker.terminate"]], "qeventproxy (class in abjadext.nauert.qeventproxy)": [[89, "abjadext.nauert.qeventproxy.QEventProxy"]], "__eq__() (abjadext.nauert.qeventproxy.qeventproxy method)": [[89, "abjadext.nauert.qeventproxy.QEventProxy.__eq__"]], "__hash__() (abjadext.nauert.qeventproxy.qeventproxy method)": [[89, "abjadext.nauert.qeventproxy.QEventProxy.__hash__"]], "__repr__() (abjadext.nauert.qeventproxy.qeventproxy method)": [[89, "abjadext.nauert.qeventproxy.QEventProxy.__repr__"]], "abjadext.nauert.qeventproxy": [[89, "module-abjadext.nauert.qeventproxy"]], "index (abjadext.nauert.qeventproxy.qeventproxy attribute)": [[89, "abjadext.nauert.qeventproxy.QEventProxy.index"]], "offset (abjadext.nauert.qeventproxy.qeventproxy attribute)": [[89, "abjadext.nauert.qeventproxy.QEventProxy.offset"]], "q_event (abjadext.nauert.qeventproxy.qeventproxy attribute)": [[89, "abjadext.nauert.qeventproxy.QEventProxy.q_event"]], "pitchedqevent (class in abjadext.nauert.qevents)": [[90, "abjadext.nauert.qevents.PitchedQEvent"]], "qevent (class in abjadext.nauert.qevents)": [[90, "abjadext.nauert.qevents.QEvent"]], "silentqevent (class in abjadext.nauert.qevents)": [[90, "abjadext.nauert.qevents.SilentQEvent"]], "terminalqevent (class in abjadext.nauert.qevents)": [[90, "abjadext.nauert.qevents.TerminalQEvent"]], "__eq__() (abjadext.nauert.qevents.pitchedqevent method)": [[90, "abjadext.nauert.qevents.PitchedQEvent.__eq__"]], "__eq__() (abjadext.nauert.qevents.silentqevent method)": [[90, "abjadext.nauert.qevents.SilentQEvent.__eq__"]], "__eq__() (abjadext.nauert.qevents.terminalqevent method)": [[90, "abjadext.nauert.qevents.TerminalQEvent.__eq__"]], "__hash__() (abjadext.nauert.qevents.pitchedqevent method)": [[90, "abjadext.nauert.qevents.PitchedQEvent.__hash__"]], "__hash__() (abjadext.nauert.qevents.silentqevent method)": [[90, "abjadext.nauert.qevents.SilentQEvent.__hash__"]], "__hash__() (abjadext.nauert.qevents.terminalqevent method)": [[90, "abjadext.nauert.qevents.TerminalQEvent.__hash__"]], "__lt__() (abjadext.nauert.qevents.pitchedqevent method)": [[90, "abjadext.nauert.qevents.PitchedQEvent.__lt__"]], "__lt__() (abjadext.nauert.qevents.qevent method)": [[90, "abjadext.nauert.qevents.QEvent.__lt__"]], "__lt__() (abjadext.nauert.qevents.silentqevent method)": [[90, "abjadext.nauert.qevents.SilentQEvent.__lt__"]], "__lt__() (abjadext.nauert.qevents.terminalqevent method)": [[90, "abjadext.nauert.qevents.TerminalQEvent.__lt__"]], "__repr__() (abjadext.nauert.qevents.pitchedqevent method)": [[90, "abjadext.nauert.qevents.PitchedQEvent.__repr__"]], "__repr__() (abjadext.nauert.qevents.qevent method)": [[90, "abjadext.nauert.qevents.QEvent.__repr__"]], "__repr__() (abjadext.nauert.qevents.silentqevent method)": [[90, "abjadext.nauert.qevents.SilentQEvent.__repr__"]], "__repr__() (abjadext.nauert.qevents.terminalqevent method)": [[90, "abjadext.nauert.qevents.TerminalQEvent.__repr__"]], "abjadext.nauert.qevents": [[90, "module-abjadext.nauert.qevents"]], "attachments (abjadext.nauert.qevents.pitchedqevent attribute)": [[90, "abjadext.nauert.qevents.PitchedQEvent.attachments"]], "attachments (abjadext.nauert.qevents.qevent attribute)": [[90, "abjadext.nauert.qevents.QEvent.attachments"]], "attachments (abjadext.nauert.qevents.silentqevent attribute)": [[90, "abjadext.nauert.qevents.SilentQEvent.attachments"]], "attachments (abjadext.nauert.qevents.terminalqevent attribute)": [[90, "abjadext.nauert.qevents.TerminalQEvent.attachments"]], "index (abjadext.nauert.qevents.pitchedqevent attribute)": [[90, "abjadext.nauert.qevents.PitchedQEvent.index"]], "index (abjadext.nauert.qevents.qevent attribute)": [[90, "abjadext.nauert.qevents.QEvent.index"]], "index (abjadext.nauert.qevents.silentqevent attribute)": [[90, "abjadext.nauert.qevents.SilentQEvent.index"]], "index (abjadext.nauert.qevents.terminalqevent attribute)": [[90, "abjadext.nauert.qevents.TerminalQEvent.index"]], "offset (abjadext.nauert.qevents.pitchedqevent attribute)": [[90, "abjadext.nauert.qevents.PitchedQEvent.offset"]], "offset (abjadext.nauert.qevents.qevent attribute)": [[90, "abjadext.nauert.qevents.QEvent.offset"]], "offset (abjadext.nauert.qevents.silentqevent attribute)": [[90, "abjadext.nauert.qevents.SilentQEvent.offset"]], "offset (abjadext.nauert.qevents.terminalqevent attribute)": [[90, "abjadext.nauert.qevents.TerminalQEvent.offset"]], "pitches (abjadext.nauert.qevents.pitchedqevent attribute)": [[90, "abjadext.nauert.qevents.PitchedQEvent.pitches"]], "qeventsequence (class in abjadext.nauert.qeventsequence)": [[91, "abjadext.nauert.qeventsequence.QEventSequence"]], "__contains__() (abjadext.nauert.qeventsequence.qeventsequence method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.__contains__"]], "__eq__() (abjadext.nauert.qeventsequence.qeventsequence method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.__eq__"]], "__getitem__() (abjadext.nauert.qeventsequence.qeventsequence method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.__getitem__"]], "__hash__() (abjadext.nauert.qeventsequence.qeventsequence method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.__hash__"]], "__iter__() (abjadext.nauert.qeventsequence.qeventsequence method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.__iter__"]], "__len__() (abjadext.nauert.qeventsequence.qeventsequence method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.__len__"]], "abjadext.nauert.qeventsequence": [[91, "module-abjadext.nauert.qeventsequence"]], "duration_in_ms (abjadext.nauert.qeventsequence.qeventsequence attribute)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.duration_in_ms"]], "from_millisecond_durations() (abjadext.nauert.qeventsequence.qeventsequence class method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.from_millisecond_durations"]], "from_millisecond_offsets() (abjadext.nauert.qeventsequence.qeventsequence class method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.from_millisecond_offsets"]], "from_millisecond_pitch_attachment_tuples() (abjadext.nauert.qeventsequence.qeventsequence class method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.from_millisecond_pitch_attachment_tuples"]], "from_millisecond_pitch_pairs() (abjadext.nauert.qeventsequence.qeventsequence class method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.from_millisecond_pitch_pairs"]], "from_tempo_scaled_durations() (abjadext.nauert.qeventsequence.qeventsequence class method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.from_tempo_scaled_durations"]], "from_tempo_scaled_leaves() (abjadext.nauert.qeventsequence.qeventsequence class method)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.from_tempo_scaled_leaves"]], "sequence (abjadext.nauert.qeventsequence.qeventsequence attribute)": [[91, "abjadext.nauert.qeventsequence.QEventSequence.sequence"]], "qgrid (class in abjadext.nauert.qgrid)": [[92, "abjadext.nauert.qgrid.QGrid"]], "qgridcontainer (class in abjadext.nauert.qgrid)": [[92, "abjadext.nauert.qgrid.QGridContainer"]], "qgridleaf (class in abjadext.nauert.qgrid)": [[92, "abjadext.nauert.qgrid.QGridLeaf"]], "__add__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__add__"]], "__call__() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.__call__"]], "__call__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__call__"]], "__call__() (abjadext.nauert.qgrid.qgridleaf method)": [[92, "abjadext.nauert.qgrid.QGridLeaf.__call__"]], "__contains__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__contains__"]], "__copy__() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.__copy__"]], "__delitem__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__delitem__"]], "__eq__() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.__eq__"]], "__getitem__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__getitem__"]], "__graph__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__graph__"]], "__graph__() (abjadext.nauert.qgrid.qgridleaf method)": [[92, "abjadext.nauert.qgrid.QGridLeaf.__graph__"]], "__hash__() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.__hash__"]], "__iter__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__iter__"]], "__len__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__len__"]], "__radd__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__radd__"]], "__repr__() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.__repr__"]], "__repr__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__repr__"]], "__repr__() (abjadext.nauert.qgrid.qgridleaf method)": [[92, "abjadext.nauert.qgrid.QGridLeaf.__repr__"]], "__setitem__() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.__setitem__"]], "abjadext.nauert.qgrid": [[92, "module-abjadext.nauert.qgrid"]], "append() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.append"]], "children (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.children"]], "depth (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.depth"]], "depth (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.depth"]], "depth_first() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.depth_first"]], "distance (abjadext.nauert.qgrid.qgrid attribute)": [[92, "abjadext.nauert.qgrid.QGrid.distance"]], "duration (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.duration"]], "duration (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.duration"]], "extend() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.extend"]], "fit_q_events() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.fit_q_events"]], "graph_order (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.graph_order"]], "graph_order (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.graph_order"]], "index() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.index"]], "insert() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.insert"]], "is_divisible (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.is_divisible"]], "leaves (abjadext.nauert.qgrid.qgrid attribute)": [[92, "abjadext.nauert.qgrid.QGrid.leaves"]], "leaves (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.leaves"]], "name (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.name"]], "name (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.name"]], "next_downbeat (abjadext.nauert.qgrid.qgrid attribute)": [[92, "abjadext.nauert.qgrid.QGrid.next_downbeat"]], "offsets (abjadext.nauert.qgrid.qgrid attribute)": [[92, "abjadext.nauert.qgrid.QGrid.offsets"]], "parent (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.parent"]], "parent (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.parent"]], "parentage (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.parentage"]], "parentage (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.parentage"]], "parentage_ratios (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.parentage_ratios"]], "parentage_ratios (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.parentage_ratios"]], "pop() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.pop"]], "preceding_q_event_proxies (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.preceding_q_event_proxies"]], "preprolated_duration (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.preprolated_duration"]], "preprolated_duration (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.preprolated_duration"]], "pretty_rtm_format (abjadext.nauert.qgrid.qgrid attribute)": [[92, "abjadext.nauert.qgrid.QGrid.pretty_rtm_format"]], "pretty_rtm_format (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.pretty_rtm_format"]], "pretty_rtm_format (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.pretty_rtm_format"]], "prolation (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.prolation"]], "prolation (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.prolation"]], "prolations (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.prolations"]], "prolations (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.prolations"]], "q_event_proxies (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.q_event_proxies"]], "recurse() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.recurse"]], "regroup_leaves_with_unencessary_divisions() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.regroup_leaves_with_unencessary_divisions"]], "remove() (abjadext.nauert.qgrid.qgridcontainer method)": [[92, "abjadext.nauert.qgrid.QGridContainer.remove"]], "root (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.root"]], "root (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.root"]], "root_node (abjadext.nauert.qgrid.qgrid attribute)": [[92, "abjadext.nauert.qgrid.QGrid.root_node"]], "rtm_format (abjadext.nauert.qgrid.qgrid attribute)": [[92, "abjadext.nauert.qgrid.QGrid.rtm_format"]], "rtm_format (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.rtm_format"]], "rtm_format (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.rtm_format"]], "sort_q_events_by_index() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.sort_q_events_by_index"]], "start_offset (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.start_offset"]], "start_offset (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.start_offset"]], "stop_offset (abjadext.nauert.qgrid.qgridcontainer attribute)": [[92, "abjadext.nauert.qgrid.QGridContainer.stop_offset"]], "stop_offset (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.stop_offset"]], "subdivide_leaf() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.subdivide_leaf"]], "subdivide_leaves() (abjadext.nauert.qgrid.qgrid method)": [[92, "abjadext.nauert.qgrid.QGrid.subdivide_leaves"]], "succeeding_q_event_proxies (abjadext.nauert.qgrid.qgridleaf attribute)": [[92, "abjadext.nauert.qgrid.QGridLeaf.succeeding_q_event_proxies"]], "beatwiseqschemaitem (class in abjadext.nauert.qschemaitems)": [[93, "abjadext.nauert.qschemaitems.BeatwiseQSchemaItem"]], "measurewiseqschemaitem (class in abjadext.nauert.qschemaitems)": [[93, "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem"]], "qschemaitem (class in abjadext.nauert.qschemaitems)": [[93, "abjadext.nauert.qschemaitems.QSchemaItem"]], "__repr__() (abjadext.nauert.qschemaitems.beatwiseqschemaitem method)": [[93, "abjadext.nauert.qschemaitems.BeatwiseQSchemaItem.__repr__"]], "__repr__() (abjadext.nauert.qschemaitems.measurewiseqschemaitem method)": [[93, "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem.__repr__"]], "abjadext.nauert.qschemaitems": [[93, "module-abjadext.nauert.qschemaitems"]], "beatspan (abjadext.nauert.qschemaitems.beatwiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.BeatwiseQSchemaItem.beatspan"]], "beatspan (abjadext.nauert.qschemaitems.measurewiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem.beatspan"]], "search_tree (abjadext.nauert.qschemaitems.beatwiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.BeatwiseQSchemaItem.search_tree"]], "search_tree (abjadext.nauert.qschemaitems.measurewiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem.search_tree"]], "search_tree (abjadext.nauert.qschemaitems.qschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.QSchemaItem.search_tree"]], "tempo (abjadext.nauert.qschemaitems.beatwiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.BeatwiseQSchemaItem.tempo"]], "tempo (abjadext.nauert.qschemaitems.measurewiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem.tempo"]], "tempo (abjadext.nauert.qschemaitems.qschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.QSchemaItem.tempo"]], "time_signature (abjadext.nauert.qschemaitems.measurewiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem.time_signature"]], "use_full_measure (abjadext.nauert.qschemaitems.measurewiseqschemaitem attribute)": [[93, "abjadext.nauert.qschemaitems.MeasurewiseQSchemaItem.use_full_measure"]], "beatwiseqschema (class in abjadext.nauert.qschemas)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema"]], "measurewiseqschema (class in abjadext.nauert.qschemas)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema"]], "qschema (class in abjadext.nauert.qschemas)": [[94, "abjadext.nauert.qschemas.QSchema"]], "__call__() (abjadext.nauert.qschemas.beatwiseqschema method)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.__call__"]], "__call__() (abjadext.nauert.qschemas.measurewiseqschema method)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.__call__"]], "__call__() (abjadext.nauert.qschemas.qschema method)": [[94, "abjadext.nauert.qschemas.QSchema.__call__"]], "__getitem__() (abjadext.nauert.qschemas.beatwiseqschema method)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.__getitem__"]], "__getitem__() (abjadext.nauert.qschemas.measurewiseqschema method)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.__getitem__"]], "__getitem__() (abjadext.nauert.qschemas.qschema method)": [[94, "abjadext.nauert.qschemas.QSchema.__getitem__"]], "__repr__() (abjadext.nauert.qschemas.beatwiseqschema method)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.__repr__"]], "__repr__() (abjadext.nauert.qschemas.measurewiseqschema method)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.__repr__"]], "abjadext.nauert.qschemas": [[94, "module-abjadext.nauert.qschemas"]], "beatspan (abjadext.nauert.qschemas.beatwiseqschema attribute)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.beatspan"]], "item_class (abjadext.nauert.qschemas.beatwiseqschema attribute)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.item_class"]], "item_class (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.item_class"]], "item_class (abjadext.nauert.qschemas.qschema attribute)": [[94, "abjadext.nauert.qschemas.QSchema.item_class"]], "items (abjadext.nauert.qschemas.beatwiseqschema attribute)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.items"]], "items (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.items"]], "items (abjadext.nauert.qschemas.qschema attribute)": [[94, "abjadext.nauert.qschemas.QSchema.items"]], "search_tree (abjadext.nauert.qschemas.beatwiseqschema attribute)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.search_tree"]], "search_tree (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.search_tree"]], "search_tree (abjadext.nauert.qschemas.qschema attribute)": [[94, "abjadext.nauert.qschemas.QSchema.search_tree"]], "target_class (abjadext.nauert.qschemas.beatwiseqschema attribute)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.target_class"]], "target_class (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.target_class"]], "target_class (abjadext.nauert.qschemas.qschema attribute)": [[94, "abjadext.nauert.qschemas.QSchema.target_class"]], "target_item_class (abjadext.nauert.qschemas.beatwiseqschema attribute)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.target_item_class"]], "target_item_class (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.target_item_class"]], "target_item_class (abjadext.nauert.qschemas.qschema attribute)": [[94, "abjadext.nauert.qschemas.QSchema.target_item_class"]], "tempo (abjadext.nauert.qschemas.beatwiseqschema attribute)": [[94, "abjadext.nauert.qschemas.BeatwiseQSchema.tempo"]], "tempo (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.tempo"]], "tempo (abjadext.nauert.qschemas.qschema attribute)": [[94, "abjadext.nauert.qschemas.QSchema.tempo"]], "time_signature (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.time_signature"]], "use_full_measure (abjadext.nauert.qschemas.measurewiseqschema attribute)": [[94, "abjadext.nauert.qschemas.MeasurewiseQSchema.use_full_measure"]], "qtargetbeat (class in abjadext.nauert.qtargetitems)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat"]], "qtargetitem (class in abjadext.nauert.qtargetitems)": [[95, "abjadext.nauert.qtargetitems.QTargetItem"]], "qtargetmeasure (class in abjadext.nauert.qtargetitems)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure"]], "__call__() (abjadext.nauert.qtargetitems.qtargetbeat method)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.__call__"]], "__repr__() (abjadext.nauert.qtargetitems.qtargetbeat method)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.__repr__"]], "__repr__() (abjadext.nauert.qtargetitems.qtargetmeasure method)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.__repr__"]], "abjadext.nauert.qtargetitems": [[95, "module-abjadext.nauert.qtargetitems"]], "beats (abjadext.nauert.qtargetitems.qtargetmeasure attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.beats"]], "beatspan (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.beatspan"]], "duration_in_ms (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.duration_in_ms"]], "duration_in_ms (abjadext.nauert.qtargetitems.qtargetitem attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetItem.duration_in_ms"]], "duration_in_ms (abjadext.nauert.qtargetitems.qtargetmeasure attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.duration_in_ms"]], "offset_in_ms (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.offset_in_ms"]], "offset_in_ms (abjadext.nauert.qtargetitems.qtargetitem attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetItem.offset_in_ms"]], "offset_in_ms (abjadext.nauert.qtargetitems.qtargetmeasure attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.offset_in_ms"]], "q_events (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.q_events"]], "q_grid (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.q_grid"]], "q_grids (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.q_grids"]], "search_tree (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.search_tree"]], "search_tree (abjadext.nauert.qtargetitems.qtargetmeasure attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.search_tree"]], "tempo (abjadext.nauert.qtargetitems.qtargetbeat attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetBeat.tempo"]], "tempo (abjadext.nauert.qtargetitems.qtargetmeasure attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.tempo"]], "time_signature (abjadext.nauert.qtargetitems.qtargetmeasure attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.time_signature"]], "use_full_measure (abjadext.nauert.qtargetitems.qtargetmeasure attribute)": [[95, "abjadext.nauert.qtargetitems.QTargetMeasure.use_full_measure"]], "beatwiseqtarget (class in abjadext.nauert.qtargets)": [[96, "abjadext.nauert.qtargets.BeatwiseQTarget"]], "measurewiseqtarget (class in abjadext.nauert.qtargets)": [[96, "abjadext.nauert.qtargets.MeasurewiseQTarget"]], "qtarget (class in abjadext.nauert.qtargets)": [[96, "abjadext.nauert.qtargets.QTarget"]], "__call__() (abjadext.nauert.qtargets.beatwiseqtarget method)": [[96, "abjadext.nauert.qtargets.BeatwiseQTarget.__call__"]], "__call__() (abjadext.nauert.qtargets.measurewiseqtarget method)": [[96, "abjadext.nauert.qtargets.MeasurewiseQTarget.__call__"]], "__call__() (abjadext.nauert.qtargets.qtarget method)": [[96, "abjadext.nauert.qtargets.QTarget.__call__"]], "abjadext.nauert.qtargets": [[96, "module-abjadext.nauert.qtargets"]], "beats (abjadext.nauert.qtargets.beatwiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.BeatwiseQTarget.beats"]], "beats (abjadext.nauert.qtargets.measurewiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.MeasurewiseQTarget.beats"]], "beats (abjadext.nauert.qtargets.qtarget attribute)": [[96, "abjadext.nauert.qtargets.QTarget.beats"]], "duration_in_ms (abjadext.nauert.qtargets.beatwiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.BeatwiseQTarget.duration_in_ms"]], "duration_in_ms (abjadext.nauert.qtargets.measurewiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.MeasurewiseQTarget.duration_in_ms"]], "duration_in_ms (abjadext.nauert.qtargets.qtarget attribute)": [[96, "abjadext.nauert.qtargets.QTarget.duration_in_ms"]], "item_class (abjadext.nauert.qtargets.beatwiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.BeatwiseQTarget.item_class"]], "item_class (abjadext.nauert.qtargets.measurewiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.MeasurewiseQTarget.item_class"]], "item_class (abjadext.nauert.qtargets.qtarget attribute)": [[96, "abjadext.nauert.qtargets.QTarget.item_class"]], "items (abjadext.nauert.qtargets.beatwiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.BeatwiseQTarget.items"]], "items (abjadext.nauert.qtargets.measurewiseqtarget attribute)": [[96, "abjadext.nauert.qtargets.MeasurewiseQTarget.items"]], "items (abjadext.nauert.qtargets.qtarget attribute)": [[96, "abjadext.nauert.qtargets.QTarget.items"]], "quantizationjob (class in abjadext.nauert.quantizationjob)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob"]], "__call__() (abjadext.nauert.quantizationjob.quantizationjob method)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.__call__"]], "__eq__() (abjadext.nauert.quantizationjob.quantizationjob method)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.__eq__"]], "__hash__() (abjadext.nauert.quantizationjob.quantizationjob method)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.__hash__"]], "__repr__() (abjadext.nauert.quantizationjob.quantizationjob method)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.__repr__"]], "abjadext.nauert.quantizationjob": [[97, "module-abjadext.nauert.quantizationjob"]], "job_id (abjadext.nauert.quantizationjob.quantizationjob attribute)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.job_id"]], "q_event_proxies (abjadext.nauert.quantizationjob.quantizationjob attribute)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.q_event_proxies"]], "q_grids (abjadext.nauert.quantizationjob.quantizationjob attribute)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.q_grids"]], "search_tree (abjadext.nauert.quantizationjob.quantizationjob attribute)": [[97, "abjadext.nauert.quantizationjob.QuantizationJob.search_tree"]], "abjadext.nauert.quantizer": [[98, "module-abjadext.nauert.quantizer"]], "quantize() (in module abjadext.nauert.quantizer)": [[98, "abjadext.nauert.quantizer.quantize"]], "searchtree (class in abjadext.nauert.searchtrees)": [[99, "abjadext.nauert.searchtrees.SearchTree"]], "unweightedsearchtree (class in abjadext.nauert.searchtrees)": [[99, "abjadext.nauert.searchtrees.UnweightedSearchTree"]], "weightedsearchtree (class in abjadext.nauert.searchtrees)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree"]], "__call__() (abjadext.nauert.searchtrees.searchtree method)": [[99, "abjadext.nauert.searchtrees.SearchTree.__call__"]], "__call__() (abjadext.nauert.searchtrees.unweightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.UnweightedSearchTree.__call__"]], "__call__() (abjadext.nauert.searchtrees.weightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree.__call__"]], "__eq__() (abjadext.nauert.searchtrees.searchtree method)": [[99, "abjadext.nauert.searchtrees.SearchTree.__eq__"]], "__eq__() (abjadext.nauert.searchtrees.unweightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.UnweightedSearchTree.__eq__"]], "__eq__() (abjadext.nauert.searchtrees.weightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree.__eq__"]], "__hash__() (abjadext.nauert.searchtrees.searchtree method)": [[99, "abjadext.nauert.searchtrees.SearchTree.__hash__"]], "__hash__() (abjadext.nauert.searchtrees.unweightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.UnweightedSearchTree.__hash__"]], "__hash__() (abjadext.nauert.searchtrees.weightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree.__hash__"]], "__repr__() (abjadext.nauert.searchtrees.searchtree method)": [[99, "abjadext.nauert.searchtrees.SearchTree.__repr__"]], "__repr__() (abjadext.nauert.searchtrees.unweightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.UnweightedSearchTree.__repr__"]], "__repr__() (abjadext.nauert.searchtrees.weightedsearchtree method)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree.__repr__"]], "abjadext.nauert.searchtrees": [[99, "module-abjadext.nauert.searchtrees"]], "all_compositions (abjadext.nauert.searchtrees.weightedsearchtree attribute)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree.all_compositions"]], "default_definition (abjadext.nauert.searchtrees.searchtree attribute)": [[99, "abjadext.nauert.searchtrees.SearchTree.default_definition"]], "default_definition (abjadext.nauert.searchtrees.unweightedsearchtree attribute)": [[99, "abjadext.nauert.searchtrees.UnweightedSearchTree.default_definition"]], "default_definition (abjadext.nauert.searchtrees.weightedsearchtree attribute)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree.default_definition"]], "definition (abjadext.nauert.searchtrees.searchtree attribute)": [[99, "abjadext.nauert.searchtrees.SearchTree.definition"]], "definition (abjadext.nauert.searchtrees.unweightedsearchtree attribute)": [[99, "abjadext.nauert.searchtrees.UnweightedSearchTree.definition"]], "definition (abjadext.nauert.searchtrees.weightedsearchtree attribute)": [[99, "abjadext.nauert.searchtrees.WeightedSearchTree.definition"]], "abjadext.rmakers": [[100, "module-abjadext.rmakers"]], "incise (class in abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.Incise"]], "interpolation (class in abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.Interpolation"]], "spelling (class in abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.Spelling"]], "talea (class in abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.Talea"]], "__contains__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__contains__"]], "__delattr__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__delattr__"]], "__delattr__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__delattr__"]], "__delattr__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__delattr__"]], "__delattr__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__delattr__"]], "__eq__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__eq__"]], "__eq__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__eq__"]], "__eq__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__eq__"]], "__eq__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__eq__"]], "__ge__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__ge__"]], "__ge__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__ge__"]], "__ge__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__ge__"]], "__ge__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__ge__"]], "__getitem__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__getitem__"]], "__gt__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__gt__"]], "__gt__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__gt__"]], "__gt__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__gt__"]], "__gt__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__gt__"]], "__hash__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__hash__"]], "__hash__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__hash__"]], "__hash__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__hash__"]], "__hash__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__hash__"]], "__iter__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__iter__"]], "__le__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__le__"]], "__le__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__le__"]], "__le__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__le__"]], "__le__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__le__"]], "__len__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__len__"]], "__lt__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__lt__"]], "__lt__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__lt__"]], "__lt__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__lt__"]], "__lt__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__lt__"]], "__post_init__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__post_init__"]], "__post_init__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__post_init__"]], "__post_init__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__post_init__"]], "__post_init__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__post_init__"]], "__repr__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__repr__"]], "__repr__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__repr__"]], "__repr__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__repr__"]], "__repr__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__repr__"]], "__setattr__() (abjadext.rmakers.rmakers.incise method)": [[101, "abjadext.rmakers.rmakers.Incise.__setattr__"]], "__setattr__() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.__setattr__"]], "__setattr__() (abjadext.rmakers.rmakers.spelling method)": [[101, "abjadext.rmakers.rmakers.Spelling.__setattr__"]], "__setattr__() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.__setattr__"]], "abjadext.rmakers.rmakers": [[101, "module-abjadext.rmakers.rmakers"]], "accelerando() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.accelerando"]], "advance() (abjadext.rmakers.rmakers.talea method)": [[101, "abjadext.rmakers.rmakers.Talea.advance"]], "after_grace_container() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.after_grace_container"]], "beam() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.beam"]], "beam_groups() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.beam_groups"]], "before_grace_container() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.before_grace_container"]], "denominator() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.denominator"]], "duration_bracket() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.duration_bracket"]], "even_division() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.even_division"]], "example() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.example"]], "extract_trivial() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.extract_trivial"]], "feather_beam() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.feather_beam"]], "force_augmentation() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.force_augmentation"]], "force_diminution() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.force_diminution"]], "force_fraction() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.force_fraction"]], "force_note() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.force_note"]], "force_repeat_tie() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.force_repeat_tie"]], "force_rest() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.force_rest"]], "incised() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.incised"]], "interpolate() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.interpolate"]], "invisible_music() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.invisible_music"]], "multiplied_duration() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.multiplied_duration"]], "nongrace_leaves_in_each_tuplet() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.nongrace_leaves_in_each_tuplet"]], "note() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.note"]], "on_beat_grace_container() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.on_beat_grace_container"]], "period (abjadext.rmakers.rmakers.talea attribute)": [[101, "abjadext.rmakers.rmakers.Talea.period"]], "reduce_multiplier() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.reduce_multiplier"]], "repeat_tie() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.repeat_tie"]], "reverse() (abjadext.rmakers.rmakers.interpolation method)": [[101, "abjadext.rmakers.rmakers.Interpolation.reverse"]], "rewrite_dots() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.rewrite_dots"]], "rewrite_meter() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.rewrite_meter"]], "rewrite_rest_filled() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.rewrite_rest_filled"]], "rewrite_sustained() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.rewrite_sustained"]], "split_measures() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.split_measures"]], "talea() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.talea"]], "tie() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.tie"]], "tremolo_container() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.tremolo_container"]], "trivialize() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.trivialize"]], "tuplet() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.tuplet"]], "unbeam() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.unbeam"]], "untie() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.untie"]], "wrap_in_time_signature_staff() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.wrap_in_time_signature_staff"]], "written_duration() (in module abjadext.rmakers.rmakers)": [[101, "abjadext.rmakers.rmakers.written_duration"]]}})